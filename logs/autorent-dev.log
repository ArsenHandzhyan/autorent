00:10:06.566 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
00:10:06.718 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 17032 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
00:10:06.721 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
00:10:06.721 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
00:10:09.201 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
00:10:09.494 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 261 ms. Found 15 JPA repository interfaces.
00:10:11.517 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
00:10:11.543 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
00:10:11.549 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
00:10:11.550 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
00:10:11.677 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
00:10:11.677 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4872 ms
00:10:12.227 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
00:10:12.573 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
00:10:12.690 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
00:10:12.772 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
00:10:13.167 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
00:10:13.207 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
00:10:16.265 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@279ab15e
00:10:16.276 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
00:10:18.636 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
00:10:24.631 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
00:10:25.566 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
00:10:27.062 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
00:10:27.063 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
00:10:27.667 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
00:10:28.008 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
00:10:28.081 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
00:10:29.115 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
00:10:29.340 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@30e603fe, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@746d6275, org.springframework.security.web.context.SecurityContextHolderFilter@74c7ba2a, org.springframework.security.web.header.HeaderWriterFilter@5a32a948, org.springframework.web.filter.CorsFilter@3609c23c, org.springframework.security.web.csrf.CsrfFilter@5c8b3fb1, org.springframework.security.web.authentication.logout.LogoutFilter@546bdc1a, ru.anapa.autorent.config.JwtRequestFilter@4beae1e3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@ec0917b, org.springframework.security.web.session.ConcurrentSessionFilter@54a5728b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ce58f84, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e22e204, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69e2bbe0, org.springframework.security.web.session.SessionManagementFilter@251f9216, org.springframework.security.web.access.ExceptionTranslationFilter@40cdfbe, org.springframework.security.web.access.intercept.AuthorizationFilter@2b874d46]
00:10:30.079 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
00:10:30.101 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
00:10:30.137 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 24.188 seconds (process running for 25.701)
00:10:30.238 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
00:10:30.238 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
00:10:30.419 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
00:10:30.522 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
00:10:30.637 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
00:10:30.684 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:30.856 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:10:31.002 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:31.134 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:10:31.278 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
00:10:31.368 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
00:10:31.414 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
00:10:31.542 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
00:10:33.658 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:33.884 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:35.018 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
00:10:36.977 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:37.159 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:10:37.977 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
00:10:37.978 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
00:10:37.978 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
00:10:37.978 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
00:10:37.978 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
00:10:37.978 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
00:10:37.978 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
00:10:37.978 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
00:10:38.386 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
00:10:39.100 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
00:10:39.147 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
00:10:39.315 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:10:39.511 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
00:10:39.721 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
00:10:39.925 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
00:10:40.125 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
00:10:40.340 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
00:10:40.538 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:10:40.739 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:10:40.886 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
00:10:41.456 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
00:10:41.459 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
00:10:41.460 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
00:10:41.779 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
00:10:41.919 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
00:10:42.051 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
00:10:42.212 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
00:10:42.382 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
00:10:42.589 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
00:10:42.741 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
00:10:43.251 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 17
00:10:43.253 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
00:10:43.254 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 13
00:10:43.254 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
00:10:43.254 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
00:10:43.255 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
00:10:43.263 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
00:10:43.399 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
00:10:43.544 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-29):
00:10:43.545 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
00:10:43.546 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
00:10:43.546 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
00:10:43.546 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
00:10:43.554 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
00:10:43.555 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
00:10:43.556 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
00:10:43.556 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
00:10:43.557 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-29: 1 платежей (PENDING: 1, PROCESSED: 0, FAILED: 0)
00:10:43.557 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
00:10:43.557 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
00:10:43.564 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
00:10:43.697 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
00:10:43.697 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
00:10:43.698 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
00:10:43.701 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
00:10:43.917 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
00:10:43.918 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
00:10:43.924 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
00:10:44.120 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-28
00:10:44.121 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
00:13:38.298 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
00:13:38.300 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
00:13:38.305 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
00:13:38.372 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/cars
00:13:38.403 [http-nio-8080-exec-1] DEBUG r.a.autorent.config.JwtRequestFilter - JWT Token does not begin with Bearer String or is missing
00:13:38.409 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
00:13:38.504 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/cars?continue to session
00:13:44.445 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
00:13:44.447 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
00:13:44.451 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
00:13:44.497 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
00:13:44.871 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
00:13:45.066 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
00:13:45.184 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
00:13:45.383 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
00:13:46.811 [http-nio-8080-exec-2] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
00:13:47.214 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
00:13:47.418 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:47.629 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:47.761 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:47.898 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.030 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.162 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.290 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.446 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.645 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:48.851 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:49.055 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:49.261 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:49.384 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
00:13:50.104 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
00:13:50.226 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:13:50.346 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:13:50.477 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
00:13:50.602 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
00:32:22.171 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=15m35s597ms776µs700ns).
05:18:06.953 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
05:18:07.007 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 21520 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
05:18:07.008 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
05:18:07.009 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
05:18:09.052 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
05:18:09.207 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 134 ms. Found 15 JPA repository interfaces.
05:18:11.511 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
05:18:11.537 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
05:18:11.546 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
05:18:11.546 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
05:18:11.661 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
05:18:11.662 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4587 ms
05:18:12.150 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
05:18:12.197 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
05:18:14.242 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@30e2016a
05:18:14.248 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
05:18:14.415 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
05:18:14.615 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
05:18:14.740 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
05:18:15.924 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
05:18:17.001 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
05:18:17.012 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
05:18:17.542 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'carStatusInitializer' defined in file [C:\Users\Администратор\IdeaProjects\autorent\target\classes\ru\anapa\autorent\config\CarStatusInitializer.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'rentalService' defined in file [C:\Users\Администратор\IdeaProjects\autorent\target\classes\ru\anapa\autorent\service\RentalService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'rentalRepository' defined in ru.anapa.autorent.repository.RentalRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class ru.anapa.autorent.model.Rental
05:18:17.546 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
05:18:17.556 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
05:18:17.982 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
05:18:17.986 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
05:18:18.038 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
05:18:18.085 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'carStatusInitializer' defined in file [C:\Users\Администратор\IdeaProjects\autorent\target\classes\ru\anapa\autorent\config\CarStatusInitializer.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'rentalService' defined in file [C:\Users\Администратор\IdeaProjects\autorent\target\classes\ru\anapa\autorent\service\RentalService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'rentalRepository' defined in ru.anapa.autorent.repository.RentalRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class ru.anapa.autorent.model.Rental
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:959)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ru.anapa.autorent.AutorentApplication.main(AutorentApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'rentalService' defined in file [C:\Users\Администратор\IdeaProjects\autorent\target\classes\ru\anapa\autorent\service\RentalService.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'rentalRepository' defined in ru.anapa.autorent.repository.RentalRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class ru.anapa.autorent.model.Rental
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'rentalRepository' defined in ru.anapa.autorent.repository.RentalRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Not a managed type: class ru.anapa.autorent.model.Rental
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 33 common frames omitted
Caused by: java.lang.IllegalArgumentException: Not a managed type: class ru.anapa.autorent.model.Rental
	at org.hibernate.metamodel.model.domain.internal.JpaMetamodelImpl.managedType(JpaMetamodelImpl.java:193)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:468)
	at org.hibernate.metamodel.model.domain.internal.MappingMetamodelImpl.managedType(MappingMetamodelImpl.java:98)
	at org.springframework.data.jpa.repository.support.JpaMetamodelEntityInformation.<init>(JpaMetamodelEntityInformation.java:82)
	at org.springframework.data.jpa.repository.support.JpaEntityInformationSupport.getEntityInformation(JpaEntityInformationSupport.java:69)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getEntityInformation(JpaRepositoryFactory.java:246)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:211)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:194)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactory.getTargetRepository(JpaRepositoryFactory.java:1)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:317)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)
	at org.springframework.data.util.Lazy.getNullable(Lazy.java:135)
	at org.springframework.data.util.Lazy.get(Lazy.java:113)
	at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)
	at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)
	... 44 common frames omitted
05:25:55.077 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
05:25:55.163 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 20736 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
05:25:55.165 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
05:25:55.167 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "local"
05:25:56.504 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
05:25:56.639 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 123 ms. Found 15 JPA repository interfaces.
05:25:57.621 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
05:25:57.630 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
05:25:57.633 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
05:25:57.634 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
05:25:57.773 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
05:25:57.777 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2541 ms
05:25:57.980 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
05:25:57.996 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
05:25:59.230 [main] ERROR com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Exception during pool initialization.
java.sql.SQLException: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at ru.anapa.autorent.config.DatabaseConfig.dataSource(DatabaseConfig.java:76)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$0.CGLIB$dataSource$0(<generated>)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$0.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ru.anapa.autorent.AutorentApplication.main(AutorentApplication.java:23)
05:25:59.238 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [ru/anapa/autorent/config/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Failed to initialize pool: Access denied for user 'root'@'172.18.0.1' (using password: YES)
05:25:59.243 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
05:25:59.261 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
05:25:59.285 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Unsatisfied dependency expressed through method 'dataSourceScriptDatabaseInitializer' parameter 0: Error creating bean with name 'dataSource' defined in class path resource [ru/anapa/autorent/config/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Failed to initialize pool: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:542)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:312)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1231)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:949)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:334)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at ru.anapa.autorent.AutorentApplication.main(AutorentApplication.java:23)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [ru/anapa/autorent/config/DatabaseConfig.class]: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Failed to initialize pool: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:485)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1335)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1165)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:325)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:907)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:785)
	... 21 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception with message: Failed to initialize pool: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:177)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:647)
	... 35 common frames omitted
Caused by: com.zaxxer.hikari.pool.HikariPool$PoolInitializationException: Failed to initialize pool: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at com.zaxxer.hikari.pool.HikariPool.throwPoolInitializationException(HikariPool.java:596)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:582)
	at com.zaxxer.hikari.pool.HikariPool.<init>(HikariPool.java:100)
	at com.zaxxer.hikari.HikariDataSource.<init>(HikariDataSource.java:81)
	at ru.anapa.autorent.config.DatabaseConfig.dataSource(DatabaseConfig.java:76)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$0.CGLIB$dataSource$0(<generated>)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$FastClass$$1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:331)
	at ru.anapa.autorent.config.DatabaseConfig$$SpringCGLIB$$0.dataSource(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	... 36 common frames omitted
Caused by: java.sql.SQLException: Access denied for user 'root'@'172.18.0.1' (using password: YES)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:130)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:825)
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:446)
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:239)
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:188)
	at com.zaxxer.hikari.util.DriverDataSource.getConnection(DriverDataSource.java:138)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:359)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:201)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:470)
	at com.zaxxer.hikari.pool.HikariPool.checkFailFast(HikariPool.java:561)
	... 49 common frames omitted
16:57:20.990 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
16:57:21.114 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 26704 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
16:57:21.115 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
16:57:21.118 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "local"
16:57:22.491 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
16:57:22.599 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 102 ms. Found 15 JPA repository interfaces.
16:57:23.643 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
16:57:23.654 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
16:57:23.656 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
16:57:23.656 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
16:57:23.757 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
16:57:23.758 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2511 ms
16:57:23.961 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
16:57:23.984 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
16:57:24.238 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@47ef5a33
16:57:24.240 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
16:57:24.330 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
16:57:24.405 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
16:57:24.431 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
16:57:24.630 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
16:57:25.753 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
16:57:25.795 [main] DEBUG org.hibernate.SQL - 
    create table account_history (
        id bigint not null auto_increment,
        change_date datetime(6) not null,
        change_reason varchar(255),
        changed_by varchar(255) not null,
        field_name varchar(255) not null,
        new_value varchar(255),
        old_value varchar(255),
        account_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:25.827 [main] DEBUG org.hibernate.SQL - 
    create table accounts (
        id bigint not null auto_increment,
        account_number varchar(255),
        allow_negative_balance bit not null,
        balance decimal(38,2) not null,
        credit_limit decimal(38,2),
        initial_balance decimal(38,2) not null,
        max_rental_amount decimal(38,2),
        max_rental_duration integer,
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:25.863 [main] DEBUG org.hibernate.SQL - 
    create table car_images (
        id bigint not null auto_increment,
        content_type varchar(255),
        description varchar(255),
        display_order integer,
        file_name varchar(255),
        image_data LONGBLOB,
        image_url varchar(255),
        is_main bit,
        rotation integer,
        car_id bigint,
        primary key (id)
    ) engine=InnoDB
16:57:25.898 [main] DEBUG org.hibernate.SQL - 
    create table car_status_history (
        id bigint not null auto_increment,
        change_date datetime(6) not null,
        changed_by varchar(255),
        new_status enum ('AVAILABLE','RENTED','MAINTENANCE','RESERVED','PENDING') not null,
        old_status enum ('AVAILABLE','RENTED','MAINTENANCE','RESERVED','PENDING') not null,
        reason varchar(255),
        car_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:25.943 [main] DEBUG org.hibernate.SQL - 
    create table cars (
        id bigint not null auto_increment,
        available bit not null,
        brand varchar(255) not null,
        category varchar(255),
        color varchar(255),
        daily_rate decimal(10,2) not null,
        description varchar(1000),
        fuel_type varchar(255),
        license_plate varchar(255) not null,
        model varchar(255) not null,
        price_per_day decimal(38,2) not null,
        registration_number varchar(255) not null,
        schedule TEXT,
        seats integer,
        status enum ('AVAILABLE','RENTED','MAINTENANCE','RESERVED','PENDING') not null,
        transmission varchar(255),
        year integer not null,
        primary key (id)
    ) engine=InnoDB
16:57:25.984 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        id bigint not null auto_increment,
        created_at datetime(6),
        description varchar(255),
        image varchar(255),
        name varchar(255),
        updated_at datetime(6),
        primary key (id)
    ) engine=InnoDB
16:57:26.014 [main] DEBUG org.hibernate.SQL - 
    create table daily_payments (
        id bigint not null auto_increment,
        amount decimal(38,2) not null,
        created_at datetime(6),
        notes TEXT,
        payment_date date not null,
        processed_at datetime(6),
        status enum ('PENDING','PROCESSED','FAILED','CANCELLED') not null,
        account_id bigint not null,
        rental_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:26.057 [main] DEBUG org.hibernate.SQL - 
    create table password_reset_logs (
        id bigint not null auto_increment,
        action_type enum ('REQUEST_SENT','TOKEN_VALIDATED','PASSWORD_RESET','TOKEN_EXPIRED','INVALID_TOKEN','USER_NOT_FOUND') not null,
        completed_at datetime(6),
        created_at datetime(6) not null,
        email varchar(255) not null,
        error_message varchar(255),
        ip_address varchar(255),
        status enum ('SUCCESS','FAILED','PENDING') not null,
        token varchar(255) not null,
        user_agent varchar(255),
        primary key (id)
    ) engine=InnoDB
16:57:26.081 [main] DEBUG org.hibernate.SQL - 
    create table rental_items (
        id bigint not null auto_increment,
        available_quantity integer,
        created_at datetime(6),
        deposit decimal(38,2),
        description TEXT,
        image varchar(255),
        is_promotional bit,
        name varchar(255),
        price_per_day decimal(38,2),
        updated_at datetime(6),
        category_id bigint,
        primary key (id)
    ) engine=InnoDB
16:57:26.118 [main] DEBUG org.hibernate.SQL - 
    create table rentals (
        id bigint not null auto_increment,
        actual_return_date datetime(6),
        cancel_reason TEXT,
        comment varchar(255),
        created_at datetime(6),
        end_date datetime(6) not null,
        notes varchar(255),
        rating decimal(38,2),
        start_date datetime(6) not null,
        status enum ('PENDING','APPROVED','REJECTED','ACTIVE','COMPLETED','CANCELLED','PENDING_CANCELLATION') not null,
        total_cost decimal(10,2) not null,
        updated_at datetime(6),
        car_id bigint,
        item_id bigint,
        user_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:26.165 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        id bigint not null auto_increment,
        created_at datetime(6),
        rating integer not null check ((rating>=1) and (rating<=5)),
        rental_id bigint not null,
        review_text TEXT,
        updated_at datetime(6),
        user_name varchar(255),
        primary key (id)
    ) engine=InnoDB
16:57:26.198 [main] DEBUG org.hibernate.SQL - 
    create table roles (
        id bigint not null auto_increment,
        name varchar(255) not null,
        primary key (id)
    ) engine=InnoDB
16:57:26.236 [main] DEBUG org.hibernate.SQL - 
    create table transactions (
        id bigint not null auto_increment,
        amount decimal(38,2) not null,
        created_at datetime(6),
        description varchar(255) not null,
        type enum ('RENT_PAYMENT','DEPOSIT','REFUND') not null,
        account_id bigint not null,
        primary key (id)
    ) engine=InnoDB
16:57:26.262 [main] DEBUG org.hibernate.SQL - 
    create table user_roles (
        user_id bigint not null,
        role_id bigint not null,
        primary key (user_id, role_id)
    ) engine=InnoDB
16:57:26.290 [main] DEBUG org.hibernate.SQL - 
    create table users (
        id bigint not null auto_increment,
        email varchar(255) not null,
        enabled bit not null,
        first_name varchar(255),
        last_login_date datetime(6),
        last_name varchar(255),
        password varchar(255) not null,
        phone varchar(255),
        registration_date datetime(6),
        primary key (id)
    ) engine=InnoDB
16:57:26.329 [main] DEBUG org.hibernate.SQL - 
    create table verification_tokens (
        id bigint not null auto_increment,
        created_at datetime(6) not null,
        email varchar(255) not null,
        expires_at datetime(6) not null,
        token varchar(255) not null,
        token_type enum ('EMAIL_VERIFICATION','PASSWORD_RESET','SMS_VERIFICATION') not null,
        is_used bit not null,
        verification_code varchar(255),
        verified_at datetime(6),
        primary key (id)
    ) engine=InnoDB
16:57:26.354 [main] DEBUG org.hibernate.SQL - 
    alter table accounts 
       drop index UK_6kplolsdtr3slnvx97xsy2kc8
16:57:26.374 [main] DEBUG org.hibernate.SQL - 
    alter table accounts 
       add constraint UK_6kplolsdtr3slnvx97xsy2kc8 unique (account_number)
16:57:26.401 [main] DEBUG org.hibernate.SQL - 
    alter table accounts 
       drop index UK_e4w4av1wrhanry7t6mxt42nou
16:57:26.405 [main] DEBUG org.hibernate.SQL - 
    alter table accounts 
       add constraint UK_e4w4av1wrhanry7t6mxt42nou unique (user_id)
16:57:26.430 [main] DEBUG org.hibernate.SQL - 
    alter table cars 
       drop index UK_i3ldfyekqw49cw6omv99rrfkx
16:57:26.440 [main] DEBUG org.hibernate.SQL - 
    alter table cars 
       add constraint UK_i3ldfyekqw49cw6omv99rrfkx unique (registration_number)
16:57:26.472 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       drop index UK_ofx66keruapi6vyqpv6f2or37
16:57:26.478 [main] DEBUG org.hibernate.SQL - 
    alter table roles 
       add constraint UK_ofx66keruapi6vyqpv6f2or37 unique (name)
16:57:26.503 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       drop index UK_6dotkott2kjsp8vw4d0m25fb7
16:57:26.507 [main] DEBUG org.hibernate.SQL - 
    alter table users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
16:57:26.544 [main] DEBUG org.hibernate.SQL - 
    alter table verification_tokens 
       drop index UK_6q9nsb665s9f8qajm3j07kd1e
16:57:26.553 [main] DEBUG org.hibernate.SQL - 
    alter table verification_tokens 
       add constraint UK_6q9nsb665s9f8qajm3j07kd1e unique (token)
16:57:26.592 [main] DEBUG org.hibernate.SQL - 
    alter table account_history 
       add constraint FKl7ey00g2lssau6dw0yekhodtw 
       foreign key (account_id) 
       references accounts (id)
16:57:26.680 [main] DEBUG org.hibernate.SQL - 
    alter table accounts 
       add constraint FKnjuop33mo69pd79ctplkck40n 
       foreign key (user_id) 
       references users (id)
16:57:26.729 [main] DEBUG org.hibernate.SQL - 
    alter table car_images 
       add constraint FKet593krc5137jxdk5cxdah2vd 
       foreign key (car_id) 
       references cars (id)
16:57:26.819 [main] DEBUG org.hibernate.SQL - 
    alter table car_status_history 
       add constraint FKp2ugdi7stt6kepx0iithcnsch 
       foreign key (car_id) 
       references cars (id)
16:57:26.878 [main] DEBUG org.hibernate.SQL - 
    alter table daily_payments 
       add constraint FK2q6lb9oru31nk851smys2hfsj 
       foreign key (account_id) 
       references accounts (id)
16:57:26.941 [main] DEBUG org.hibernate.SQL - 
    alter table daily_payments 
       add constraint FK73aenfd3ykuqi399mmxhspb8q 
       foreign key (rental_id) 
       references rentals (id)
16:57:27.013 [main] DEBUG org.hibernate.SQL - 
    alter table rental_items 
       add constraint FKek105mjgmrl9h9dp2vvco6a0r 
       foreign key (category_id) 
       references categories (id)
16:57:27.073 [main] DEBUG org.hibernate.SQL - 
    alter table rentals 
       add constraint FKb3vpbdnk78p1epicm7a7urvfh 
       foreign key (car_id) 
       references cars (id)
16:57:27.127 [main] DEBUG org.hibernate.SQL - 
    alter table rentals 
       add constraint FKohv77e71dfqg0qkrax3jv9dgu 
       foreign key (item_id) 
       references rental_items (id)
16:57:27.199 [main] DEBUG org.hibernate.SQL - 
    alter table rentals 
       add constraint FKtnhd1objf2mlb6ag6k726u269 
       foreign key (user_id) 
       references users (id)
16:57:27.273 [main] DEBUG org.hibernate.SQL - 
    alter table transactions 
       add constraint FK20w7wsg13u9srbq3bd7chfxdh 
       foreign key (account_id) 
       references accounts (id)
16:57:27.323 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKh8ciramu9cc9q3qcqiv4ue8a6 
       foreign key (role_id) 
       references roles (id)
16:57:27.384 [main] DEBUG org.hibernate.SQL - 
    alter table user_roles 
       add constraint FKhfh9dx7w3ubf1co1vdev94g3f 
       foreign key (user_id) 
       references users (id)
16:57:27.434 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
16:57:27.746 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
16:57:28.509 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
16:57:28.510 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
16:57:29.677 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
16:57:29.730 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
16:57:29.946 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
16:57:30.509 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
16:57:30.622 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@445371c0, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5a43d7e4, org.springframework.security.web.context.SecurityContextHolderFilter@546c8875, org.springframework.security.web.header.HeaderWriterFilter@25d2921d, org.springframework.web.filter.CorsFilter@254fe08, org.springframework.security.web.csrf.CsrfFilter@78ed3c71, org.springframework.security.web.authentication.logout.LogoutFilter@49425914, ru.anapa.autorent.config.JwtRequestFilter@3c3e363, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@33aa6807, org.springframework.security.web.session.ConcurrentSessionFilter@66f44bef, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38f563e4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4e60caa4, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6411cb24, org.springframework.security.web.session.SessionManagementFilter@545b28fa, org.springframework.security.web.access.ExceptionTranslationFilter@68a7cd0, org.springframework.security.web.access.intercept.AuthorizationFilter@b73524e]
16:57:30.975 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
16:57:30.986 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
16:57:31.008 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 10.403 seconds (process running for 11.056)
16:57:31.035 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
16:57:31.161 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
16:57:31.165 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
16:57:31.192 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
16:57:31.232 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
16:57:31.245 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
16:57:31.264 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (name) 
    values
        (?)
16:57:31.315 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        roles
        (name) 
    values
        (?)
16:57:31.330 [main] INFO  r.a.autorent.config.DataInitializer - Роли созданы: ROLE_ADMIN, ROLE_USER
16:57:31.333 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
16:57:31.376 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
16:57:31.386 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: false
16:57:31.389 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
16:57:31.397 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
16:57:31.497 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        users
        (email, enabled, first_name, last_login_date, last_name, password, phone, registration_date) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
16:57:31.525 [main] DEBUG org.hibernate.SQL - 
    insert 
    into
        user_roles
        (user_id, role_id) 
    values
        (?, ?)
16:57:31.537 [main] INFO  r.a.autorent.config.DataInitializer - Создан администратор: admin@example.com / admin123, enabled: true
16:57:31.542 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
16:57:31.558 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
16:57:31.564 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
16:57:31.579 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
16:57:31.581 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
16:57:31.583 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
16:57:31.596 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
16:57:31.606 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 0
16:57:31.608 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
16:57:31.608 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
16:57:31.608 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 0
16:57:31.609 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
16:57:31.611 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
16:57:31.624 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
16:57:31.636 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
16:57:31.647 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-29):
16:57:31.648 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
16:57:31.649 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
16:57:31.650 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
16:57:31.652 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
16:57:31.653 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
16:57:31.655 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
16:57:31.658 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
16:57:31.664 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
16:57:31.679 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
16:57:31.679 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
16:57:31.680 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
16:57:31.682 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
16:57:31.696 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
16:57:31.697 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
16:57:31.703 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
16:57:31.713 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-28
16:57:31.714 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:00:00.003 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК СИНХРОНИЗАЦИИ СТАТУСОВ АВТОМОБИЛЕЙ ===
17:00:00.014 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:00:00.022 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:00:00.027 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:00:00.035 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Синхронизация статусов автомобилей завершена успешно
17:00:00.041 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - [Scheduler] Актуализация всех не обработанных платежей (PENDING/FAILED)
17:00:00.042 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:00:00.043 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:00:00.046 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-28
17:00:00.046 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:26:27.595 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:26:27.782 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication v0.0.1-SNAPSHOT using Java 23.0.1 with PID 14232 (C:\Users\Администратор\IdeaProjects\autorent\target\autorent-0.0.1-SNAPSHOT.jar started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:26:27.787 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:26:27.789 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:26:29.922 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:26:30.102 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 156 ms. Found 15 JPA repository interfaces.
17:26:31.925 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:26:31.960 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:26:31.968 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:26:31.971 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:26:32.055 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:26:32.056 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4098 ms
17:26:32.520 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:26:32.608 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:26:34.707 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5a2035e1
17:26:34.711 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:26:34.925 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:26:35.031 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:26:35.092 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:26:35.547 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:26:37.440 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:26:41.472 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:26:42.457 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:26:44.188 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:26:44.190 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:26:44.963 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:26:45.049 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:26:45.311 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:26:46.426 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:26:46.642 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@466d236c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@248c9b2d, org.springframework.security.web.context.SecurityContextHolderFilter@28434905, org.springframework.security.web.header.HeaderWriterFilter@5437eaca, org.springframework.web.filter.CorsFilter@5b91b6de, org.springframework.security.web.csrf.CsrfFilter@79e12f24, org.springframework.security.web.authentication.logout.LogoutFilter@6e794115, ru.anapa.autorent.config.JwtRequestFilter@7adae08e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@10a1c090, org.springframework.security.web.session.ConcurrentSessionFilter@3615fc07, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2af59846, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5ab85072, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a9c44a7, org.springframework.security.web.session.SessionManagementFilter@4cb61589, org.springframework.security.web.access.ExceptionTranslationFilter@3faa8fcd, org.springframework.security.web.access.intercept.AuthorizationFilter@1a62a6db]
17:26:47.609 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:26:47.645 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:26:47.680 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 20.699 seconds (process running for 22.281)
17:26:47.896 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:26:47.994 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:26:48.097 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:48.166 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:26:48.223 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:48.323 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:48.441 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:48.574 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:26:48.582 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:26:48.647 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:26:48.673 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:26:48.759 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:48.772 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:26:48.865 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:26:48.866 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:26:48.867 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:26:49.062 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:26:49.717 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:26:51.229 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:51.332 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:51.951 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:26:52.812 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:52.982 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:53.801 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:26:53.802 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:26:53.803 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:26:53.805 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:26:53.806 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:26:53.807 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:26:53.807 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:26:53.808 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:26:53.957 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:26:54.077 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:26:54.213 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:26:54.423 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:26:54.620 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:54.734 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:54.850 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:26:55.335 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:26:55.337 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:26:55.338 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:26:55.738 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:26:55.843 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:26:55.945 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:26:56.057 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:26:56.161 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:26:56.264 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:26:56.372 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:26:56.765 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 17
17:26:56.771 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:26:56.773 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 13
17:26:56.774 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:26:56.775 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:26:56.775 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:26:56.785 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:26:56.884 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:26:56.984 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-29):
17:26:56.986 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:26:56.987 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:26:56.988 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:26:56.988 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:26:56.990 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:26:56.991 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:26:56.991 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:26:56.992 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:26:56.992 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-29: 1 платежей (PENDING: 1, PROCESSED: 0, FAILED: 0)
17:26:56.992 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:26:56.992 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:26:56.995 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:26:57.093 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:26:57.094 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:26:57.095 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:26:57.102 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:26:57.205 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:26:57.206 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:26:57.209 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:26:57.311 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-28
17:26:57.313 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:28:58.642 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:28:58.642 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:28:58.644 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
17:28:58.659 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:28:58.675 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:28:58.679 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:28:58.698 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:28:58.889 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:28:58.990 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:28:59.089 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:28:59.200 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:29:00.334 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:29:00.513 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:29:00.605 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:00.707 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:00.806 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:00.910 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.016 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.124 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.226 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.327 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.430 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.539 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.645 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.739 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:01.836 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:29:02.379 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:29:02.472 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:29:02.568 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:29:02.665 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:29:02.755 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:38:35.577 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /api/rentals
17:38:35.579 [http-nio-8080-exec-3] DEBUG r.a.autorent.config.JwtRequestFilter - JWT Token does not begin with Bearer String or is missing
17:38:35.581 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:38:35.624 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/api/rentals?continue to session
17:38:42.044 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals
17:38:42.045 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:38:42.046 [http-nio-8080-exec-4] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/rentals?continue to session
17:38:42.056 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:38:42.058 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:38:42.059 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:38:42.073 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Login page requested
17:39:39.870 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:39:39.872 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:39:39.875 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/rentals?continue to session
17:39:39.878 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:39:39.879 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:39:39.879 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:39:39.881 [http-nio-8080-exec-7] INFO  r.a.a.controller.AuthController - Login page requested
17:40:55.302 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /stats/rentals
17:40:55.305 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:40:55.308 [http-nio-8080-exec-9] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/stats/rentals?continue to session
17:40:55.315 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:40:55.319 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:40:55.321 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:40:55.323 [http-nio-8080-exec-10] INFO  r.a.a.controller.AuthController - Login page requested
