02:49:28.839 [http-nio-8080-exec-5] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
02:49:28.863 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
02:49:28.909 [http-nio-8080-exec-5] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 43 ms
02:49:29.090 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
02:49:29.202 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
02:49:29.233 [http-nio-8080-exec-5] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
02:49:29.259 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
02:49:29.267 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
02:49:29.274 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
02:49:29.395 [http-nio-8080-exec-3] INFO  r.a.a.controller.AuthController - Login page requested
02:49:54.490 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13h40m22s860ms879µs500ns).
02:51:54.143 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:54.148 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:54.245 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:54.338 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:54.437 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:54.530 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:54.624 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:54.809 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК СИНХРОНИЗАЦИИ СТАТУСОВ АВТОМОБИЛЕЙ ===
02:51:54.903 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
02:51:54.997 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
02:51:55.096 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:55.191 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
02:51:55.288 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:55.382 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
02:51:55.655 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Синхронизация статусов автомобилей завершена успешно
02:51:55.656 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - [Scheduler] Актуализация всех не обработанных платежей (PENDING/FAILED)
02:51:55.657 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
02:51:55.662 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
02:51:55.755 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
02:51:55.756 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
02:51:55.847 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:55.849 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:55.942 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:56.036 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:56.133 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:56.231 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:56.324 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:56.604 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:56.608 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:56.704 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:56.802 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:56.909 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:57.005 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:57.101 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:57.373 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:57.376 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:57.469 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:57.566 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:57.664 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:57.762 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:57.855 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:58.126 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:58.128 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:58.225 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:58.319 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:58.413 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:58.519 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:58.615 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:58.887 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:58.889 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:58.985 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:59.078 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:59.176 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:59.272 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:51:59.368 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:51:59.640 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:51:59.642 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:51:59.736 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:51:59.831 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:51:59.926 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:00.026 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:00.120 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:00.394 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:00.398 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:00.491 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:00.585 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:00.683 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:00.779 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:00.872 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:01.155 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:01.162 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:01.254 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:01.346 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:01.446 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:01.539 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:01.633 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:01.905 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:01.910 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:02.002 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:02.095 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:02.193 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:02.289 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:02.381 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:02.661 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:02.663 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:02.758 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:02.853 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:02.949 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:03.045 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:03.138 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:03.320 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК ОБРАБОТКИ ЕЖЕДНЕВНЫХ ПЛАТЕЖЕЙ ПО АРЕНДЕ ===
02:52:03.321 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Создание ежедневных платежей для даты: 2025-06-28
02:52:03.414 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Создание ежедневных платежей для даты: 2025-06-28
02:52:03.416 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:03.509 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:03.601 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:03.701 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
02:52:03.797 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
02:52:03.931 [scheduling-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
02:52:04.043 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 4 для аренды 53 на сумму 1500.00
02:52:04.231 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Обработка ежедневных платежей для даты: 2025-06-28
02:52:04.323 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Обработка ежедневных платежей для даты: 2025-06-28
02:52:04.325 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    join
        rentals r1_0 
            on r1_0.id=dp1_0.rental_id 
    where
        r1_0.status='ACTIVE' 
        and dp1_0.payment_date=? 
        and dp1_0.status='PENDING'
02:52:04.418 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
02:52:04.516 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
02:52:04.610 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Обработка платежа ID 4 на сумму 1500.00 (текущий статус: PENDING)
02:52:04.611 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Результат валидации платежа ID 4: valid=true, error=null
02:52:04.612 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
02:52:04.708 [scheduling-1] WARN  r.a.autorent.service.AccountService - Превышен кредитный лимит для пользователя id=15: баланс после списания = 4994000.00, лимит = 100000.00
02:52:04.715 [scheduling-1] DEBUG org.hibernate.SQL - 
    insert 
    into
        transactions
        (account_id, amount, created_at, description, type) 
    values
        (?, ?, ?, ?, ?)
02:52:04.814 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Списание средств прошло успешно для платежа ID 4. Сумма: 1500.00. Новый баланс: 4994000.00
02:52:04.816 [scheduling-1] WARN  r.a.a.service.DailyPaymentService - Платеж ID 4 обработан с превышением кредитного лимита! Баланс: 4994000.00, лимит: 100000.00
02:52:05.366 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin61@example.com. Тема: 'Внимание: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>Внимание: Платеж обработан с предупреждением</h2>
    <p>Уважаемый(ая) Василь Петров!</p>
    <p>Платеж за аренду автомобиля <strong>Лада Гранта</strong> был обработан с предупреждением.</p>
    <p><strong>Причина:</strong> Превышен кредитный лимит!</p>
    <p><strong>Детали:</strong></p>
    <ul>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Автомобиль: Лада Гранта</li>
    </ul>
    <p><strong>Что делать:</strong></p>
    <ul>
        <li>Проверьте платеж</li>
        <li>Или обратитесь к администратору для разрешения вопроса</li>
    </ul>
    <p>Спасибо за понимание!</p>
    <br>
    <p><small>Это автоматическое уведомление. Пожалуйста, не отвечайте на это письмо.</small></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:96)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:161)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 38 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068356-aqgG7OHLu4Y0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 42 common frames omitted
02:52:05.371 [scheduling-1] DEBUG r.anapa.autorent.service.SmsService - Отправка SMS на номер +79186814513: ВНИМАНИЕ: Платеж за аренду Лада Гранта обработан с предупреждением. Превышен кредитный лимит!. Пожалуйста, проверьте платеж.
02:52:05.679 [scheduling-1] DEBUG r.anapa.autorent.service.SmsService - Ответ от SMS.ru API (код 200): {
    "status": "OK",
    "status_code": 100,
    "sms": {
        "+79186814513": {
            "status": "ERROR",
            "status_code": 204,
            "status_text": "Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https:\/\/sms.ru\/?panel=senders"
        }
    },
    "balance": 607.2
}
02:52:05.712 [scheduling-1] ERROR r.anapa.autorent.service.SmsService - Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
02:52:05.712 [scheduling-1] ERROR r.anapa.autorent.service.SmsService - Ошибка при отправке SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
java.lang.RuntimeException: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
	at ru.anapa.autorent.service.SmsService.sendSms(SmsService.java:185)
	at ru.anapa.autorent.service.PaymentNotificationService.sendSmsNotification(PaymentNotificationService.java:208)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:101)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:161)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
02:52:05.714 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке SMS на +79186814513. Сообщение: 'ВНИМАНИЕ: Платеж за аренду Лада Гранта обработан с предупреждением. Превышен кредитный лимит!. Пожалуйста, проверьте платеж.'. Причина: Не удалось отправить SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
java.lang.RuntimeException: Не удалось отправить SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
	at ru.anapa.autorent.service.SmsService.sendSms(SmsService.java:194)
	at ru.anapa.autorent.service.PaymentNotificationService.sendSmsNotification(PaymentNotificationService.java:208)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:101)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:161)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
02:52:05.718 [scheduling-1] INFO  r.a.a.s.PaymentNotificationService - Уведомление о платеже с предупреждением отправлено пользователю admin61@example.com
02:52:05.729 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
02:52:05.825 [scheduling-1] DEBUG r.anapa.autorent.service.UserService - Поиск пользователей по роли: ROLE_ADMIN
02:52:05.828 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_1.id=?
02:52:05.923 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
02:52:06.019 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
02:52:06.114 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
02:52:06.207 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
02:52:06.713 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin@autorent.ru. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит!</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendAdminPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:162)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 38 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068358-bqgaqmKL2Cg0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 42 common frames omitted
02:52:07.147 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит!</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendAdminPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:162)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 38 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068358-cqgcurELvKo0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 42 common frames omitted
02:52:07.586 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на user@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит!</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendAdminPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:162)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 38 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068359-cqg8MUHLl4Y0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 42 common frames omitted
02:52:07.975 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на maria@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит!</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.service.PaymentNotificationService$$SpringCGLIB$$0.sendAdminPaymentWarningNotification(<generated>)
	at ru.anapa.autorent.service.DailyPaymentService.processPayment(DailyPaymentService.java:162)
	at ru.anapa.autorent.service.DailyPaymentService.processDailyPayments(DailyPaymentService.java:76)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 38 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068359-dqgehvILs8c0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 42 common frames omitted
02:52:07.977 [scheduling-1] INFO  r.a.a.s.PaymentNotificationService - Уведомление о платеже с предупреждением отправлено 4 администраторам
02:52:07.978 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Платеж ID 4 успешно обработан. Списано: 1500.00, новый баланс: 4994000.00
02:52:08.003 [scheduling-1] DEBUG org.hibernate.SQL - 
    update
        accounts 
    set
        account_number=?,
        allow_negative_balance=?,
        balance=?,
        credit_limit=?,
        initial_balance=?,
        max_rental_amount=?,
        max_rental_duration=?,
        user_id=? 
    where
        id=?
02:52:08.107 [scheduling-1] DEBUG org.hibernate.SQL - 
    update
        daily_payments 
    set
        account_id=?,
        amount=?,
        created_at=?,
        notes=?,
        payment_date=?,
        processed_at=?,
        rental_id=?,
        status=? 
    where
        id=?
02:52:08.839 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin61@example.com. Тема: 'Внимание: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>Внимание: Платеж обработан с предупреждением</h2>
    <p>Уважаемый(ая) Василь Петров!</p>
    <p>Платеж за аренду автомобиля <strong>Лада Гранта</strong> был обработан с предупреждением.</p>
    <p><strong>Причина:</strong> Превышен кредитный лимит</p>
    <p><strong>Детали:</strong></p>
    <ul>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Автомобиль: Лада Гранта</li>
    </ul>
    <p><strong>Что делать:</strong></p>
    <ul>
        <li>Проверьте платеж</li>
        <li>Или обратитесь к администратору для разрешения вопроса</li>
    </ul>
    <p>Спасибо за понимание!</p>
    <br>
    <p><small>Это автоматическое уведомление. Пожалуйста, не отвечайте на это письмо.</small></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:96)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 37 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068360-eqge1vELpqM0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 41 common frames omitted
02:52:08.842 [scheduling-1] DEBUG r.anapa.autorent.service.SmsService - Отправка SMS на номер +79186814513: ВНИМАНИЕ: Платеж за аренду Лада Гранта обработан с предупреждением. Превышен кредитный лимит. Пожалуйста, проверьте платеж.
02:52:08.902 [scheduling-1] DEBUG r.anapa.autorent.service.SmsService - Ответ от SMS.ru API (код 200): {
    "status": "OK",
    "status_code": 100,
    "sms": {
        "+79186814513": {
            "status": "ERROR",
            "status_code": 204,
            "status_text": "Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https:\/\/sms.ru\/?panel=senders"
        }
    },
    "balance": 607.2
}
02:52:08.903 [scheduling-1] ERROR r.anapa.autorent.service.SmsService - Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
02:52:08.903 [scheduling-1] ERROR r.anapa.autorent.service.SmsService - Ошибка при отправке SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
java.lang.RuntimeException: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
	at ru.anapa.autorent.service.SmsService.sendSms(SmsService.java:185)
	at ru.anapa.autorent.service.PaymentNotificationService.sendSmsNotification(PaymentNotificationService.java:208)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:101)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
02:52:08.906 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке SMS на +79186814513. Сообщение: 'ВНИМАНИЕ: Платеж за аренду Лада Гранта обработан с предупреждением. Превышен кредитный лимит. Пожалуйста, проверьте платеж.'. Причина: Не удалось отправить SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
java.lang.RuntimeException: Не удалось отправить SMS: Ошибка отправки SMS на номер +79186814513: Вы не подключили данного оператора на данном имени (а также запасном или имени по умолчанию). Подайте заявку через раздел *Отправители* на сайте SMS.RU - https://sms.ru/?panel=senders
	at ru.anapa.autorent.service.SmsService.sendSms(SmsService.java:194)
	at ru.anapa.autorent.service.PaymentNotificationService.sendSmsNotification(PaymentNotificationService.java:208)
	at ru.anapa.autorent.service.PaymentNotificationService.sendPaymentWarningNotification(PaymentNotificationService.java:101)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
02:52:08.907 [scheduling-1] INFO  r.a.a.s.PaymentNotificationService - Уведомление о платеже с предупреждением отправлено пользователю admin61@example.com
02:52:08.908 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.name 
    from
        roles r1_0 
    where
        r1_0.name=?
02:52:09.001 [scheduling-1] DEBUG r.anapa.autorent.service.UserService - Поиск пользователей по роли: ROLE_ADMIN
02:52:09.006 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        r1_1.id=?
02:52:09.614 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin@autorent.ru. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 37 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068361-eqg9RoELmCg0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 41 common frames omitted
02:52:10.165 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на admin@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 37 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068361-fqgErYKL14Y0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 41 common frames omitted
02:52:10.624 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на user@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 37 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068362-fqgEAdKLpCg0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 41 common frames omitted
02:52:10.998 [scheduling-1] ERROR r.a.a.s.PaymentNotificationService - Ошибка при отправке email на maria@example.com. Тема: 'ВНИМАНИЕ: Платеж обработан с предупреждением'. Сообщение: '<html>
<body>
    <h2>ВНИМАНИЕ: Платеж обработан с предупреждением</h2>
    <p><strong>Детали платежа:</strong></p>
    <ul>
        <li>ID платежа: 4</li>
        <li>Пользователь: Василь Петров (admin61@example.com)</li>
        <li>Телефон: +79186814513</li>
        <li>Автомобиль: Лада Гранта</li>
        <li>Дата платежа: 28.06.2025</li>
        <li>Сумма: 1500.00 ₽</li>
        <li>Текущий баланс: 4994000.00 ₽</li>
        <li>Причина предупреждения: Превышен кредитный лимит</li>
    </ul>
    <p><strong>Рекомендуемые действия:</strong></p>
    <ul>
        <li>Связаться с пользователем</li>
        <li>Пополнить счет пользователя</li>
        <li>Или разрешить отрицательный баланс</li>
        <li>Повторно обработать платеж</li>
    </ul>
    <p><a href="http://localhost:8080/admin/payments/rental/53">Просмотреть детали аренды</a></p>
</body>
</html>
'. Причина: null
java.lang.reflect.InvocationTargetException: null
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:118)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at ru.anapa.autorent.service.PaymentNotificationService.sendEmailNotification(PaymentNotificationService.java:193)
	at ru.anapa.autorent.service.PaymentNotificationService.sendAdminPaymentWarningNotification(PaymentNotificationService.java:174)
	at ru.anapa.autorent.service.PaymentNotificationListener.handlePaymentNotification(PaymentNotificationListener.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.doInvoke(ApplicationListenerMethodAdapter.java:365)
	at org.springframework.context.event.ApplicationListenerMethodAdapter.processEvent(ApplicationListenerMethodAdapter.java:237)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization.processEventWithCallbacks(TransactionalApplicationListenerSynchronization.java:65)
	at org.springframework.transaction.event.TransactionalApplicationListenerSynchronization$PlatformSynchronization.afterCompletion(TransactionalApplicationListenerSynchronization.java:118)
	at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCompletion(TransactionSynchronizationUtils.java:172)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.invokeAfterCompletion(AbstractPlatformTransactionManager.java:1046)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCompletion(AbstractPlatformTransactionManager.java:1021)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:838)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:757)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:669)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:419)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.DailyPaymentService$$SpringCGLIB$$0.processDailyPayments(<generated>)
	at ru.anapa.autorent.config.ScheduledTasks.processDailyRentalPayments(ScheduledTasks.java:71)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: org.springframework.mail.MailAuthenticationException: Authentication failed
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:402)
	at org.springframework.mail.javamail.JavaMailSenderImpl.send(JavaMailSenderImpl.java:350)
	at org.springframework.mail.javamail.JavaMailSender.send(JavaMailSender.java:101)
	at ru.anapa.autorent.service.EmailService.sendEmail(EmailService.java:128)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	... 37 common frames omitted
Caused by: jakarta.mail.AuthenticationFailedException: 535 5.7.8 Error: authentication failed: This user does not have access rights to this service 1751068362-gqghFfELmiE0

	at org.eclipse.angus.mail.smtp.SMTPTransport$Authenticator.authenticate(SMTPTransport.java:954)
	at org.eclipse.angus.mail.smtp.SMTPTransport.authenticate(SMTPTransport.java:865)
	at org.eclipse.angus.mail.smtp.SMTPTransport.protocolConnect(SMTPTransport.java:769)
	at jakarta.mail.Service.connect(Service.java:345)
	at org.springframework.mail.javamail.JavaMailSenderImpl.connectTransport(JavaMailSenderImpl.java:480)
	at org.springframework.mail.javamail.JavaMailSenderImpl.doSend(JavaMailSenderImpl.java:399)
	... 41 common frames omitted
02:52:10.999 [scheduling-1] INFO  r.a.a.s.PaymentNotificationService - Уведомление о платеже с предупреждением отправлено 4 администраторам
02:52:11.000 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Обработка ежедневных платежей по аренде завершена успешно
02:52:11.090 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:11.093 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:11.186 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:11.285 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:11.381 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:11.480 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:11.575 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:11.848 [scheduling-1] INFO  r.a.a.s.VerificationTokenService - Запуск очистки просроченных токенов
02:52:11.856 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        vt1_0.id,
        vt1_0.created_at,
        vt1_0.email,
        vt1_0.expires_at,
        vt1_0.token,
        vt1_0.token_type,
        vt1_0.is_used,
        vt1_0.verification_code,
        vt1_0.verified_at 
    from
        verification_tokens vt1_0 
    where
        vt1_0.expires_at<? 
        and not(vt1_0.is_used)
02:52:11.974 [scheduling-1] INFO  r.a.a.s.VerificationTokenService - Удалено 1 просроченных токенов
02:52:11.981 [scheduling-1] DEBUG org.hibernate.SQL - 
    delete 
    from
        verification_tokens 
    where
        id=?
02:52:12.356 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:12.359 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:12.452 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:12.547 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:12.647 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:12.746 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:12.842 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:13.135 [scheduling-1] INFO  r.a.a.service.PasswordResetService - Начинаем очистку старых логов восстановления пароля
02:52:13.143 [scheduling-1] ERROR r.a.a.service.PasswordResetService - Ошибка при очистке старых логов восстановления пароля
org.springframework.dao.InvalidDataAccessApiUsageException: Expecting a SELECT query : `DELETE FROM PasswordResetLog p WHERE p.createdAt < :cutoffDate`
	at org.springframework.orm.jpa.EntityManagerFactoryUtils.convertJpaAccessExceptionIfPossible(EntityManagerFactoryUtils.java:368)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:246)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:152)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:135)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:220)
	at jdk.proxy2/jdk.proxy2.$Proxy181.deleteOldLogs(Unknown Source)
	at ru.anapa.autorent.service.PasswordResetService.cleanupOldPasswordResetLogs(PasswordResetService.java:332)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.service.PasswordResetService$$SpringCGLIB$$0.cleanupOldPasswordResetLogs(<generated>)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.runInternal(ScheduledMethodRunnable.java:130)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.lambda$run$2(ScheduledMethodRunnable.java:124)
	at io.micrometer.observation.Observation.observe(Observation.java:499)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:124)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at org.springframework.scheduling.concurrent.ReschedulingRunnable.run(ReschedulingRunnable.java:96)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1575)
Caused by: java.lang.IllegalStateException: Expecting a SELECT query : `DELETE FROM PasswordResetLog p WHERE p.createdAt < :cutoffDate`
	at org.hibernate.query.sqm.internal.QuerySqmImpl.verifySelect(QuerySqmImpl.java:493)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:498)
	at org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:427)
	at org.hibernate.query.spi.AbstractSelectionQuery.getSingleResult(AbstractSelectionQuery.java:564)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:223)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:92)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:149)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:137)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:164)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:123)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:385)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	... 35 common frames omitted
Caused by: org.hibernate.query.IllegalSelectQueryException: Expecting a SELECT Query [org.hibernate.query.sqm.tree.select.SqmSelectStatement], but found org.hibernate.query.sqm.tree.delete.SqmDeleteStatement [DELETE FROM PasswordResetLog p WHERE p.createdAt < :cutoffDate]
	at org.hibernate.query.sqm.internal.SqmUtil.verifyIsSelectStatement(SqmUtil.java:98)
	at org.hibernate.query.sqm.internal.QuerySqmImpl.verifySelect(QuerySqmImpl.java:489)
	... 54 common frames omitted
02:52:13.420 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
02:52:13.425 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:13.521 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
02:52:13.614 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
02:52:13.712 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
02:52:13.811 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
02:52:13.903 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
02:52:14.087 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
02:52:14.089 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
02:52:14.091 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
02:52:14.197 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
02:52:14.198 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
02:52:14.199 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Обработка всех необработанных платежей завершена успешно
17:02:50.678 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:02:50.726 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 19692 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:02:50.727 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:02:50.728 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:02:52.293 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:02:52.450 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 147 ms. Found 15 JPA repository interfaces.
17:02:53.863 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:02:53.889 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:02:53.893 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:02:53.894 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:02:54.019 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:02:54.020 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3233 ms
17:02:54.313 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:02:54.467 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:02:54.559 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:02:54.610 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:02:54.988 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:02:55.044 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:02:57.093 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4e0802e0
17:02:57.097 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:02:57.356 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:03:00.575 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:03:04.741 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:03:06.191 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:03:09.171 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:03:09.171 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:03:10.116 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:03:10.519 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:03:10.656 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:03:12.281 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:03:12.643 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@2013a999, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@347c2a1a, org.springframework.security.web.context.SecurityContextHolderFilter@361b25cf, org.springframework.security.web.header.HeaderWriterFilter@69fc861a, org.springframework.web.filter.CorsFilter@205f33f3, org.springframework.security.web.csrf.CsrfFilter@59f45a7d, org.springframework.security.web.authentication.logout.LogoutFilter@552a1498, ru.anapa.autorent.config.JwtRequestFilter@241fc278, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@67264fde, org.springframework.security.web.session.ConcurrentSessionFilter@64c53561, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3082c3d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fa99830, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@24da3c3b, org.springframework.security.web.session.SessionManagementFilter@3ed6321f, org.springframework.security.web.access.ExceptionTranslationFilter@77e3087, org.springframework.security.web.access.intercept.AuthorizationFilter@5bce0ab]
17:03:13.807 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:03:13.844 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:03:13.906 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 23.576 seconds (process running for 24.429)
17:03:14.019 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:03:14.021 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:03:14.157 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:03:14.385 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:03:14.428 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:03:14.513 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:03:14.697 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:03:14.858 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:03:14.979 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:03:15.084 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:03:15.287 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:03:19.350 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:03:19.502 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:03:20.353 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:03:24.301 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:03:24.418 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:03:24.925 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:03:24.926 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:03:24.926 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:03:24.926 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:03:24.926 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:03:24.926 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:03:24.927 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:03:24.927 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:03:25.069 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:03:25.226 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:03:25.363 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:03:25.520 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:03:25.661 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:03:25.833 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:03:26.254 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:03:26.531 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:03:27.077 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:03:27.201 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:03:27.362 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:03:27.513 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:03:27.517 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:03:27.517 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:03:27.803 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:03:27.947 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:03:28.087 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:03:28.243 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:03:28.809 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:03:28.813 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:03:28.814 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:03:28.815 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:03:28.816 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:03:28.817 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:03:28.835 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:03:28.982 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:03:29.125 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:03:29.126 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:03:29.126 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:03:29.126 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:03:29.127 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:03:29.127 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:03:29.128 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:03:29.130 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:03:29.130 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:03:29.130 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:03:29.130 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:03:29.144 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:03:29.287 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:03:29.288 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:03:29.289 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:03:29.294 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:03:29.440 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:03:29.440 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:03:29.447 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:03:29.588 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:03:29.588 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:04:11.117 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:04:11.118 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:04:11.123 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 5 ms
17:04:11.200 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
17:04:11.255 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:11.465 [http-nio-8080-exec-1] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [157] milliseconds.
17:04:11.471 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/payments?continue to session
17:04:11.474 [http-nio-8080-exec-1] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:04:11.496 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:04:11.500 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:11.508 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:04:11.566 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
17:04:12.982 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:04:12.987 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:12.988 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:04:13.035 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:04:13.037 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:13.039 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:04:13.154 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:04:13.166 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:13.169 [http-nio-8080-exec-5] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:04:13.186 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:04:13.188 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:13.192 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:04:13.199 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Login page requested
17:04:13.239 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:04:13.248 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:13.252 [http-nio-8080-exec-7] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:04:13.268 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:04:13.276 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:04:13.280 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:04:13.284 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - Login page requested
17:04:33.467 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:04:33.870 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
17:04:33.874 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:04:33.981 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:34.135 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
17:04:34.272 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
17:04:34.793 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
17:04:34.798 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 92F2F6E896B635DD265B757A39E5AAFD
17:04:34.800 [http-nio-8080-exec-9] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 99BB2BF2E5E8952320E94B640034050D, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
17:04:34.802 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
17:04:34.802 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4eeea3ef]
17:04:34.802 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]
17:04:34.816 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:04:34.820 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]]
17:04:34.821 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:04:34.824 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:34.872 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:34.880 [http-nio-8080-exec-10] ERROR r.a.a.config.GlobalExceptionHandler - Unexpected error occurred
jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1104)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at ru.anapa.autorent.controller.AdminController.adminDashboard(AdminController.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.controller.AdminController$$SpringCGLIB$$0.adminDashboard(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	... 148 common frames omitted
Caused by: java.lang.ClassNotFoundException: ru.anapa.autorent.dto.DashboardDto
	at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641)
	at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188)
	at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:525)
	... 173 common frames omitted
17:04:39.665 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:04:39.669 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]]
17:04:39.670 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:04:39.672 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:39.673 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:39.676 [http-nio-8080-exec-1] ERROR r.a.a.config.GlobalExceptionHandler - Unexpected error occurred
jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1104)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at ru.anapa.autorent.controller.AdminController.adminDashboard(AdminController.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.controller.AdminController$$SpringCGLIB$$0.adminDashboard(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	... 148 common frames omitted
Caused by: java.lang.ClassNotFoundException: ru.anapa.autorent.dto.DashboardDto
	... 173 common frames omitted
17:04:41.632 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:04:41.636 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:04:41.643 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
17:04:41.655 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]]
17:04:41.673 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:04:41.674 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:04:41.678 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:04:41.678 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:04:41.690 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]]
17:04:41.693 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=92F2F6E896B635DD265B757A39E5AAFD], Granted Authorities=[ROLE_ADMIN]]]
17:04:43.882 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:04:44.094 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
17:04:44.099 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:04:44.201 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:44.306 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
17:04:44.308 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
17:04:44.739 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
17:04:44.740 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 99BB2BF2E5E8952320E94B640034050D
17:04:44.741 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 3A7A50FFDF2F62F2411CC0B5AC1AAE69, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
17:04:44.741 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
17:04:44.741 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@4eeea3ef]
17:04:44.741 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]
17:04:44.747 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:04:44.751 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:04:44.753 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:04:44.753 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:44.755 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:04:44.756 [http-nio-8080-exec-6] ERROR r.a.a.config.GlobalExceptionHandler - Unexpected error occurred
jakarta.servlet.ServletException: Handler dispatch failed: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1104)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.NoClassDefFoundError: ru/anapa/autorent/dto/DashboardDto
	at ru.anapa.autorent.controller.AdminController.adminDashboard(AdminController.java:56)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.security.authorization.method.AuthorizationManagerBeforeMethodInterceptor.invoke(AuthorizationManagerBeforeMethodInterceptor.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:765)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:717)
	at ru.anapa.autorent.controller.AdminController$$SpringCGLIB$$0.adminDashboard(<generated>)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:259)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:192)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:920)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:830)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	... 148 common frames omitted
Caused by: java.lang.ClassNotFoundException: ru.anapa.autorent.dto.DashboardDto
	... 173 common frames omitted
17:04:49.795 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:04:49.798 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:04:49.814 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:04:50.042 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:04:50.153 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:04:50.261 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:04:50.393 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:04:51.495 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:04:51.699 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:04:51.816 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:51.937 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.074 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.190 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.304 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.422 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.529 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.644 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.758 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:52.887 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:53.007 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:53.122 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:53.229 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:04:53.863 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:04:53.970 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:04:54.076 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:04:54.542 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:04:54.614 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:04:54.616 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:04:54.622 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:04:54.623 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:04:54.635 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:04:54.637 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:04:54.675 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:04:54.678 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:04:54.678 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:04:54.692 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:04:54.710 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:04:54.710 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:04:55.468 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:04:55.574 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:04:55.678 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:04:55.835 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:05:05.782 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /dfkk
17:05:05.785 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:05:05.786 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /dfkk
17:05:05.796 [http-nio-8080-exec-2] ERROR r.a.a.config.GlobalExceptionHandler - Unexpected error occurred
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource dfkk.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at jdk.internal.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
17:06:34.562 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars
17:06:34.569 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars
17:06:34.879 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    limit
        ?, ?
17:06:34.995 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id in (?, ?) 
    order by
        ci1_0.display_order
17:06:36.422 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:36.521 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:06:36.521 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:06:36.522 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:06:36.522 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:06:36.526 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:06:36.526 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:06:36.526 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:06:36.528 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:06:36.543 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:36.552 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:36.560 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:36.562 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:36.679 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:36.797 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:37.786 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:37.947 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:41.405 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars/12
17:06:41.444 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars/12
17:06:41.759 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:42.184 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:06:42.988 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:43.313 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:43.715 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:06:45.465 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:45.573 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:06:45.681 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:06:45.993 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:46.416 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:06:47.027 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:47.140 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:06:47.248 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Loading car details for ID: 12
17:06:47.248 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Car images count: 5
17:06:47.249 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Image: id=16, url=/images/car/1750980144992_photo_2025-05-19_21-50-48.jpg, main=true
17:06:47.249 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Image: id=17, url=/images/car/1750980145807_photo_2025-05-19_20-35-10.jpg, main=false
17:06:47.249 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Image: id=18, url=/images/car/1750980146273_photo_2025-05-19_21-50-34.jpg, main=false
17:06:47.249 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Image: id=19, url=/images/car/1750980146762_photo_2025-05-19_21-50-29.jpg, main=false
17:06:47.249 [http-nio-8080-exec-10] DEBUG r.a.a.controller.CarController - Image: id=20, url=/images/car/1750980147351_photo_2025-05-19_21-50-19.jpg, main=false
17:06:47.283 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:47.338 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:06:47.338 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:06:47.338 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:06:47.338 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:06:47.340 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:06:47.340 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:06:47.343 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:06:47.345 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:06:47.356 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:47.357 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:47.363 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:47.367 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:47.373 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:06:47.373 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:06:47.373 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:06:47.377 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:06:47.377 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:06:47.377 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:06:47.408 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:47.408 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:47.413 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:06:47.567 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:47.684 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:47.969 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:47.985 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:47.992 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:48.076 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:48.093 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:48.100 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:06:48.457 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:06:48.598 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:09:42.726 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:09:42.732 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:09:43.247 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:11:00.727 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:11:00.832 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 11152 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:11:00.833 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:11:00.834 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:11:02.209 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:11:02.350 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 130 ms. Found 15 JPA repository interfaces.
17:11:03.529 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:11:03.543 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:11:03.546 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:11:03.546 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:11:03.612 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:11:03.613 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2716 ms
17:11:03.924 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:11:04.076 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:11:04.175 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:11:04.222 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:11:04.471 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:11:04.502 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:11:06.670 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45753c22
17:11:06.672 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:11:06.970 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:11:08.040 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:11:13.692 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:11:14.187 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:11:15.050 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:11:15.051 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:11:15.358 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:11:15.506 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:11:15.540 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:11:16.163 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:11:16.297 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@4e29c635, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@76f99d4a, org.springframework.security.web.context.SecurityContextHolderFilter@2e407d06, org.springframework.security.web.header.HeaderWriterFilter@5a8a2982, org.springframework.web.filter.CorsFilter@5c8c42f9, org.springframework.security.web.csrf.CsrfFilter@257490d2, org.springframework.security.web.authentication.logout.LogoutFilter@5c8b3fb1, ru.anapa.autorent.config.JwtRequestFilter@23f5008a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5a32a948, org.springframework.security.web.session.ConcurrentSessionFilter@1abc0105, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef346ef, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2aaf5471, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3feb5c83, org.springframework.security.web.session.SessionManagementFilter@4c199b8e, org.springframework.security.web.access.ExceptionTranslationFilter@4442fa6c, org.springframework.security.web.access.intercept.AuthorizationFilter@7c48c62d]
17:11:16.745 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:11:16.759 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:11:16.773 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 16.398 seconds (process running for 17.075)
17:11:17.040 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:11:17.136 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:11:17.136 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:11:17.263 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:11:17.280 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:17.366 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:11:17.430 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:11:17.481 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:11:17.576 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:11:17.595 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:11:17.713 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:11:17.744 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:11:17.889 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:11:18.003 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:11:18.004 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:11:18.004 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:11:18.194 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:11:18.761 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:11:19.776 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:19.883 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:20.507 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:11:21.378 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:21.485 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:21.904 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:11:21.904 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:11:21.904 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:11:21.904 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:11:21.904 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:11:21.904 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:11:21.904 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:11:21.905 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:11:22.114 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:11:22.526 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:11:22.576 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:11:22.685 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:11:22.790 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:11:22.791 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:11:22.791 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:11:22.997 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:11:23.105 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:11:23.211 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:11:23.324 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:11:23.744 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:11:23.749 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:11:23.749 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:11:23.750 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:11:23.750 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:11:23.750 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:11:23.757 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:11:23.867 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:11:23.972 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:11:23.972 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:11:23.972 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:11:23.973 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:11:23.973 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:11:23.973 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:11:23.973 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:11:23.974 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:11:23.974 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:11:23.974 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:11:23.974 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:11:23.978 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:11:24.084 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:11:24.085 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:11:24.085 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:11:24.087 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:11:24.193 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:11:24.193 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:11:24.195 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:11:24.302 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:11:24.302 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:11:33.752 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:11:33.752 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:11:33.753 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
17:11:33.771 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars/12
17:11:33.796 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars/12
17:11:34.234 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:34.799 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:11:37.679 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:38.127 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:38.704 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:11:41.700 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:41.858 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:11:42.009 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:11:42.450 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:43.027 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:11:45.873 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:46.074 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:11:46.206 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Loading car details for ID: 12
17:11:46.207 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Car images count: 5
17:11:46.208 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=16, url=/images/car/1750980144992_photo_2025-05-19_21-50-48.jpg, main=true
17:11:46.208 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=17, url=/images/car/1750980145807_photo_2025-05-19_20-35-10.jpg, main=false
17:11:46.209 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=18, url=/images/car/1750980146273_photo_2025-05-19_21-50-34.jpg, main=false
17:11:46.209 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=19, url=/images/car/1750980146762_photo_2025-05-19_21-50-29.jpg, main=false
17:11:46.209 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=20, url=/images/car/1750980147351_photo_2025-05-19_21-50-19.jpg, main=false
17:11:47.324 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:47.485 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:11:47.485 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:11:47.491 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:11:47.491 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:11:47.494 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:11:47.497 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:11:47.500 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:11:47.503 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:11:47.508 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:11:47.512 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:11:47.539 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:47.541 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:47.552 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:11:47.554 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:11:47.554 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:11:47.556 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:11:47.556 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:11:47.565 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:11:47.568 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:11:47.571 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:11:47.580 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:11:48.086 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:48.128 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:48.170 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:48.188 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:48.199 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:48.229 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:48.280 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:48.300 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:48.536 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:48.678 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:52.305 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/new?carId=12
17:11:52.327 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:11:52.330 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/new?carId=12
17:11:52.339 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:11:52.356 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:11:52.757 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:53.321 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:11:56.541 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:56.967 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:11:57.541 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:12:00.187 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:12:00.340 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:12:00.546 [http-nio-8080-exec-7] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-7] Exception processing template "rentals/new": Exception evaluating SpringEL expression: "rental.startDate != null ? #dates.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.startDate != null ? #dates.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.expression.spel.SpelParseException: Expression [rental.startDate != null ? #dates.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''] @73: EL1065E: Unexpected escape character
	at org.springframework.expression.spel.standard.Tokenizer.raiseParseException(Tokenizer.java:587)
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:265)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:134)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:56)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:45)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 167 common frames omitted
17:12:00.556 [http-nio-8080-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.startDate != null ? #dates.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)] with root cause
org.springframework.expression.spel.SpelParseException: Expression [rental.startDate != null ? #dates.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''] @73: EL1065E: Unexpected escape character
	at org.springframework.expression.spel.standard.Tokenizer.raiseParseException(Tokenizer.java:587)
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:265)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:134)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:56)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:45)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
17:12:00.570 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?carId=12
17:12:00.573 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:12:00.573 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?carId=12
17:12:00.575 [http-nio-8080-exec-7] DEBUG r.a.a.controller.AuthController - Error handling for authenticated user: admin@example.com
17:12:00.618 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:12:00.618 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:12:00.621 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:12:00.621 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:12:00.629 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:12:00.629 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:12:00.635 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:12:00.637 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:12:00.644 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:13:47.521 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:13:47.526 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:13:48.050 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:13:54.042 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:13:54.116 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 2760 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:13:54.117 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:13:54.118 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:13:56.253 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:13:56.442 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 176 ms. Found 15 JPA repository interfaces.
17:13:58.325 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:13:58.343 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:13:58.352 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:13:58.353 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:13:58.519 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:13:58.520 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4311 ms
17:13:59.055 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:13:59.383 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:13:59.509 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:13:59.588 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:14:00.117 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:14:00.175 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:14:04.320 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@5810772a
17:14:04.323 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:14:04.636 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:14:07.420 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:14:13.641 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:14:14.586 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:14:16.444 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:14:16.445 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:14:17.043 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:14:17.301 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:14:17.370 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:14:18.474 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:14:18.718 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@70ba6842, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1141ce2a, org.springframework.security.web.context.SecurityContextHolderFilter@7c946bca, org.springframework.security.web.header.HeaderWriterFilter@2c02c021, org.springframework.web.filter.CorsFilter@6e8fc7a3, org.springframework.security.web.csrf.CsrfFilter@26b16a2b, org.springframework.security.web.authentication.logout.LogoutFilter@5d5358b7, ru.anapa.autorent.config.JwtRequestFilter@241fc278, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5364367c, org.springframework.security.web.session.ConcurrentSessionFilter@145f5e4c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@169c7543, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57b5aecb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@77136cf3, org.springframework.security.web.session.SessionManagementFilter@2085c9bb, org.springframework.security.web.access.ExceptionTranslationFilter@412c7b5e, org.springframework.security.web.access.intercept.AuthorizationFilter@5c282bc]
17:14:19.963 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:14:20.000 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:14:20.054 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 26.42 seconds (process running for 27.318)
17:14:20.175 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:14:20.175 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:14:20.390 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:14:20.541 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:14:20.551 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:14:20.697 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:20.854 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:14:21.026 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:14:21.115 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:14:21.167 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:14:21.311 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:14:22.484 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:22.578 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:23.177 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:14:24.200 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:24.304 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:24.710 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:14:24.710 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:14:24.710 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:14:24.711 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:14:24.711 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:14:24.711 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:14:24.711 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:14:24.711 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:14:24.916 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:14:25.329 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:14:25.375 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:14:25.491 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:14:25.600 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:14:25.708 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:14:25.824 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:14:25.931 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:14:26.045 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:14:26.147 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:14:26.255 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:14:26.560 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:14:26.562 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:14:26.562 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:14:26.761 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:14:26.855 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:14:26.949 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:14:27.046 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:14:27.416 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:14:27.417 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:14:27.417 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:14:27.417 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:14:27.417 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:14:27.418 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:14:27.424 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:14:27.521 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:14:27.617 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:14:27.618 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:14:27.618 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:14:27.618 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:14:27.618 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:14:27.619 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:14:27.619 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:14:27.620 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:14:27.620 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:14:27.620 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:14:27.620 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:14:27.625 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:14:27.720 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:14:27.721 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:14:27.721 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:14:27.725 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:14:27.819 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:14:27.820 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:14:27.823 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:14:27.918 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:14:27.918 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:14:37.238 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:14:37.239 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:14:37.245 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
17:14:37.310 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/new?carId=12
17:14:37.424 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:14:37.437 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/new?carId=12
17:14:37.540 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:14:37.678 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:14:38.220 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:38.982 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:14:47.705 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:48.352 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:49.176 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:14:54.777 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:14:55.034 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:14:57.106 [http-nio-8080-exec-1] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-1] Exception processing template "rentals/new": Exception evaluating SpringEL expression: "rental.startDate != null ? #temporals.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.startDate != null ? #temporals.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.springframework.expression.spel.SpelParseException: Expression [rental.startDate != null ? #temporals.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''] @77: EL1065E: Unexpected escape character
	at org.springframework.expression.spel.standard.Tokenizer.raiseParseException(Tokenizer.java:587)
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:265)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:134)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:56)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:45)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	... 167 common frames omitted
17:14:57.139 [http-nio-8080-exec-1] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.startDate != null ? #temporals.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''" (template: "rentals/new" - line 42, col 40)] with root cause
org.springframework.expression.spel.SpelParseException: Expression [rental.startDate != null ? #temporals.format(rental.startDate, 'yyyy-MM-dd\'T\'HH:mm') : ''] @77: EL1065E: Unexpected escape character
	at org.springframework.expression.spel.standard.Tokenizer.raiseParseException(Tokenizer.java:587)
	at org.springframework.expression.spel.standard.Tokenizer.process(Tokenizer.java:265)
	at org.springframework.expression.spel.standard.InternalSpelExpressionParser.doParseExpression(InternalSpelExpressionParser.java:134)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:63)
	at org.springframework.expression.spel.standard.SpelExpressionParser.doParseExpression(SpelExpressionParser.java:34)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:56)
	at org.springframework.expression.common.TemplateAwareExpressionParser.parseExpression(TemplateAwareExpressionParser.java:45)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.getExpression(SPELVariableExpressionEvaluator.java:373)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.obtainComputedSpelExpression(SPELVariableExpressionEvaluator.java:321)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:182)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.StandaloneElementTag.beHandled(StandaloneElementTag.java:228)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:661)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
17:14:57.171 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error?carId=12
17:14:57.177 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:14:57.179 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /error?carId=12
17:14:57.183 [http-nio-8080-exec-1] DEBUG r.a.a.controller.AuthController - Error handling for authenticated user: admin@example.com
17:14:57.330 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:14:57.334 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:14:57.343 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:14:57.344 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:14:57.408 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:14:57.411 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:14:57.423 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:14:57.438 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:14:57.462 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:17:36.876 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:17:36.891 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:17:37.416 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:17:43.535 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:17:43.612 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 2436 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:17:43.613 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:17:43.615 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:17:45.998 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:17:46.238 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 217 ms. Found 15 JPA repository interfaces.
17:17:48.489 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:17:48.518 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:17:48.526 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:17:48.527 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:17:48.698 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:17:48.699 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4991 ms
17:17:49.225 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:17:49.552 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:17:49.655 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:17:49.730 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:17:50.123 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:17:50.168 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:17:52.147 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@11e3d08
17:17:52.151 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:17:52.412 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:17:54.502 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:17:58.574 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:17:59.483 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:18:01.231 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:18:01.232 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:18:01.715 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:18:01.964 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:18:02.042 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:18:03.047 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:18:03.241 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@76f99d4a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c8c42f9, org.springframework.security.web.context.SecurityContextHolderFilter@145f5e4c, org.springframework.security.web.header.HeaderWriterFilter@658e055b, org.springframework.web.filter.CorsFilter@5daf45c, org.springframework.security.web.csrf.CsrfFilter@1617f122, org.springframework.security.web.authentication.logout.LogoutFilter@169a28e, ru.anapa.autorent.config.JwtRequestFilter@4b98225c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6071658d, org.springframework.security.web.session.ConcurrentSessionFilter@2085c9bb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7030c643, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e6fabf5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ce4a0d, org.springframework.security.web.session.SessionManagementFilter@5928fb8b, org.springframework.security.web.access.ExceptionTranslationFilter@465f2c84, org.springframework.security.web.access.intercept.AuthorizationFilter@55cd9734]
17:18:03.966 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:18:03.986 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:18:04.023 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 20.887 seconds (process running for 21.779)
17:18:04.259 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:18:04.459 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:18:04.611 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:04.644 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:18:04.740 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:18:04.875 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:18:04.981 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:18:05.082 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:18:05.233 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:18:05.277 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:18:05.431 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:18:05.576 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:18:05.787 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:18:05.938 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:18:06.091 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:18:06.253 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:18:06.403 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:18:06.540 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:18:07.113 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:18:07.115 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:18:07.117 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:18:07.454 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:18:08.444 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:18:12.617 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:12.848 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:13.974 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:18:20.121 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:20.326 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:20.971 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:18:20.971 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:18:20.972 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:18:20.972 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:18:20.972 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:18:20.972 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:18:20.972 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:18:20.972 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:18:20.974 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:18:20.974 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:18:21.326 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:18:21.474 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:18:21.628 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:18:21.664 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:18:21.665 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:18:21.668 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
17:18:21.704 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars/12
17:18:21.758 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars/12
17:18:21.788 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:18:22.137 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:22.337 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:18:22.339 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:18:22.339 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:18:22.339 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:18:22.339 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:18:22.339 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:18:22.351 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:18:22.495 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:18:22.538 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:18:22.636 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:18:22.636 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:18:22.636 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:18:22.636 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:18:22.636 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:18:22.637 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:18:22.637 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:18:22.637 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:18:22.638 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:18:22.638 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:18:22.638 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:18:22.643 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:18:22.784 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:18:22.785 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:18:22.785 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:18:22.788 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:18:22.928 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:18:22.930 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:18:22.937 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:18:23.085 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:18:23.086 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:18:23.565 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:24.163 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:24.574 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:18:25.081 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:25.210 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:18:25.324 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
17:18:25.626 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:26.478 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:18:27.384 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:27.508 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:18:27.616 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Loading car details for ID: 12
17:18:27.618 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Car images count: 5
17:18:27.622 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=16, url=/images/car/1750980144992_photo_2025-05-19_21-50-48.jpg, main=true
17:18:27.623 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=17, url=/images/car/1750980145807_photo_2025-05-19_20-35-10.jpg, main=false
17:18:27.623 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=18, url=/images/car/1750980146273_photo_2025-05-19_21-50-34.jpg, main=false
17:18:27.624 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=19, url=/images/car/1750980146762_photo_2025-05-19_21-50-29.jpg, main=false
17:18:27.624 [http-nio-8080-exec-1] DEBUG r.a.a.controller.CarController - Image: id=20, url=/images/car/1750980147351_photo_2025-05-19_21-50-19.jpg, main=false
17:18:29.278 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:29.606 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:18:29.608 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:18:29.617 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
17:18:29.618 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:18:29.627 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:18:29.635 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:18:29.636 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:18:29.638 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:18:29.705 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:29.725 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:18:29.726 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:18:29.729 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:18:29.729 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:18:29.741 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
17:18:29.741 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
17:18:29.740 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
17:18:29.745 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:18:29.751 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:18:29.755 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:18:29.755 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:18:29.768 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:30.304 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:30.317 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:30.351 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:30.438 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:30.441 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:30.461 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:30.595 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:30.663 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:30.761 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:30.840 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:32.221 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/new?carId=12
17:18:32.267 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:32.269 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/new?carId=12
17:18:32.283 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:18:32.307 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:18:32.614 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:33.019 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:18:33.967 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:34.274 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:34.676 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:18:35.233 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:18:35.342 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:18:35.615 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:18:35.615 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:18:35.621 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:18:35.621 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:18:35.635 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:35.635 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:35.658 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:18:35.667 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:18:35.682 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:53.804 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /rentals/new
17:18:53.814 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:18:53.815 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /rentals/new
17:18:54.028 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:18:54.032 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:18:54.033 [http-nio-8080-exec-8] INFO  r.a.a.controller.RentalController - Создание новой аренды для автомобиля с ID: 12
17:18:54.036 [http-nio-8080-exec-8] WARN  r.a.a.controller.RentalController - Ошибки валидации при создании аренды: [Field error in object 'rental' on field 'startDate': rejected value [2025-06-28T14:18]; codes [FutureOrPresent.rental.startDate,FutureOrPresent.startDate,FutureOrPresent.java.time.LocalDateTime,FutureOrPresent]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [rental.startDate,startDate]; arguments []; default message [startDate]]; default message [Дата начала аренды должна быть не раньше текущей даты]]
17:21:03.920 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /rentals/new
17:21:03.925 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:21:03.926 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured POST /rentals/new
17:21:03.929 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:21:03.931 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:21:03.931 [http-nio-8080-exec-9] INFO  r.a.a.controller.RentalController - Создание новой аренды для автомобиля с ID: 12
17:21:03.932 [http-nio-8080-exec-9] WARN  r.a.a.controller.RentalController - Ошибки валидации при создании аренды: [Field error in object 'rental' on field 'startDate': rejected value [2025-06-28T14:18]; codes [FutureOrPresent.rental.startDate,FutureOrPresent.startDate,FutureOrPresent.java.time.LocalDateTime,FutureOrPresent]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [rental.startDate,startDate]; arguments []; default message [startDate]]; default message [Дата начала аренды должна быть не раньше текущей даты]]
17:23:07.144 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:23:07.147 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:23:07.731 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:23:20.916 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:23:21.007 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 5772 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:23:21.009 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:23:21.010 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:23:24.331 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:23:24.684 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 324 ms. Found 15 JPA repository interfaces.
17:23:28.097 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:23:28.149 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:23:28.160 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:23:28.165 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:23:28.455 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:23:28.456 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7193 ms
17:23:29.484 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:23:30.019 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:23:30.358 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:23:30.617 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:23:31.004 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:23:31.090 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:23:34.388 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@279ab15e
17:23:34.391 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:23:34.758 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:23:37.024 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:23:43.106 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:23:44.671 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:23:47.858 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:23:47.858 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:23:49.065 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:23:49.553 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:23:49.719 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:23:51.622 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:23:52.035 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@260069b5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@70ba6842, org.springframework.security.web.context.SecurityContextHolderFilter@2ff74dc2, org.springframework.security.web.header.HeaderWriterFilter@ed6bc2e, org.springframework.web.filter.CorsFilter@1141ce2a, org.springframework.security.web.csrf.CsrfFilter@28c67405, org.springframework.security.web.authentication.logout.LogoutFilter@b5d0e59, ru.anapa.autorent.config.JwtRequestFilter@32e697ac, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1ce4a0d, org.springframework.security.web.session.ConcurrentSessionFilter@2e407d06, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49099d93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52d55407, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@68bcdf50, org.springframework.security.web.session.SessionManagementFilter@1abc0105, org.springframework.security.web.access.ExceptionTranslationFilter@41e95d06, org.springframework.security.web.access.intercept.AuthorizationFilter@5daf45c]
17:23:53.615 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:23:53.666 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:23:53.710 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 33.593 seconds (process running for 34.804)
17:23:54.095 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:23:54.311 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:23:54.329 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:23:54.479 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:23:54.666 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:23:54.676 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:23:54.771 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:23:54.891 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:23:54.917 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:23:54.998 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:23:55.074 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:23:55.107 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:23:55.219 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:23:55.233 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:23:55.333 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:23:55.445 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:23:55.537 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:23:55.633 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:23:55.904 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:23:55.905 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:23:55.905 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:23:56.086 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:23:56.624 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:23:57.757 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:23:57.862 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:23:58.450 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:24:00.488 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:00.600 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:00.998 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:24:00.998 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:24:00.998 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:24:00.998 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:24:00.999 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:24:00.999 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:24:00.999 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:24:00.999 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:24:01.000 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:24:01.000 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:24:01.200 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:24:01.302 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:24:01.411 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:24:01.528 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:24:01.928 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:24:01.931 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:24:01.932 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:24:01.932 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:24:01.932 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:24:01.932 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:24:01.955 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:24:02.063 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:24:02.160 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:24:02.161 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:24:02.162 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:24:02.162 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:24:02.163 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:24:02.164 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:24:02.164 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:24:02.166 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:24:02.166 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:24:02.167 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:24:02.168 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:24:02.183 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:24:02.285 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:24:02.286 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:24:02.286 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:24:02.290 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:24:02.390 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:24:02.392 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:24:02.403 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:24:02.506 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:24:02.506 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:24:04.229 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:24:04.230 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:24:04.234 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
17:24:04.284 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/new?carId=12
17:24:04.329 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:04.332 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/new?carId=12
17:24:04.371 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:24:04.424 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.showRentalForm(java.lang.Long,java.time.LocalDateTime,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:24:04.850 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:05.547 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:24:06.827 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:07.274 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:07.873 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:24:08.994 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:09.173 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:24:11.923 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:24:11.925 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:24:11.938 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:24:11.938 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:24:12.020 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:12.020 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:12.040 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:24:12.054 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:24:12.076 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:44.614 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /rentals/new
17:24:44.629 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:44.631 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured POST /rentals/new
17:24:44.794 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:24:44.805 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:24:44.806 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Создание новой аренды для автомобиля с ID: 12
17:24:45.349 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:46.034 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:24:49.256 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:49.750 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:50.575 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:24:53.646 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:24:53.862 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:24:54.036 [http-nio-8080-exec-2] WARN  r.a.a.controller.RentalController - Ошибки валидации при создании аренды: [Field error in object 'rental' on field 'startDate': rejected value [2025-06-28T14:24]; codes [FutureOrPresent.rental.startDate,FutureOrPresent.startDate,FutureOrPresent.java.time.LocalDateTime,FutureOrPresent]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [rental.startDate,startDate]; arguments []; default message [startDate]]; default message [Дата начала аренды должна быть не раньше текущей даты]]
17:24:54.120 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:24:54.120 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:24:54.126 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:24:54.130 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:24:54.145 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:54.146 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:24:54.161 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:24:54.167 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:24:54.186 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:18.839 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /rentals/new
17:25:18.850 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:18.851 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured POST /rentals/new
17:25:18.861 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:25:18.866 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.createRental(java.lang.Long,ru.anapa.autorent.dto.RentalDto,org.springframework.validation.BindingResult,org.springframework.ui.Model,org.springframework.security.core.Authentication,jakarta.servlet.http.HttpServletRequest); target is of class [ru.anapa.autorent.controller.RentalController]
17:25:18.866 [http-nio-8080-exec-10] INFO  r.a.a.controller.RentalController - Создание новой аренды для автомобиля с ID: 12
17:25:19.344 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:20.166 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:25:23.301 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:23.909 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:24.589 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
17:25:29.160 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:29.395 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:25:29.585 [http-nio-8080-exec-10] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:25:29.590 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:25:29.790 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:25:30.308 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
        and (
            (
                r1_0.start_date<=? 
                and r1_0.end_date>=?
            ) 
            or (
                r1_0.start_date>=? 
                and r1_0.start_date<=?
            ) 
            or (
                r1_0.end_date>=? 
                and r1_0.end_date<=?
            )
        )
17:25:31.224 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:31.433 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
17:25:31.696 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        rentals
        (actual_return_date, cancel_reason, car_id, comment, created_at, end_date, notes, rating, item_id, start_date, status, total_cost, updated_at, user_id) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
17:25:32.350 [http-nio-8080-exec-10] INFO  r.a.a.controller.RentalController - Аренда успешно создана с ID: 57
17:25:32.415 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals
17:25:32.420 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:32.422 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals
17:25:32.425 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentals(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:25:32.430 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentals(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:25:32.431 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:25:32.437 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:25:32.560 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:25:33.010 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
17:25:33.158 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:33.307 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:25:33.492 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
17:25:37.870 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Found 1 rentals for user admin@example.com
17:25:37.872 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Rental ID: 57, Status: PENDING
17:25:37.875 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Found 1 pending rentals
17:25:37.876 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Pending Rental ID: 57, Status: PENDING
17:25:37.877 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Found 0 active rentals
17:25:37.879 [http-nio-8080-exec-1] INFO  r.a.a.controller.RentalController - Found 0 history rentals
17:25:38.012 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:25:38.143 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:25:39.046 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:25:39.191 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:25:39.347 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:25:40.479 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:25:41.058 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:25:41.259 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:25:41.723 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:25:41.723 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:25:41.724 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:25:41.727 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:25:41.727 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:25:41.728 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:25:41.738 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:25:41.740 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:41.740 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:42.896 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:25:43.044 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:54.039 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/57
17:25:54.043 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:54.044 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/57
17:25:54.521 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:25:55.184 [http-nio-8080-exec-2] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:25:55.188 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:25:55.390 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:25:55.544 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:25:55.854 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:25:55.854 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:25:55.864 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:25:55.868 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:25:55.876 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:25:55.878 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:15.950 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:26:15.955 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:26:15.970 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:26:16.312 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:26:16.490 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:26:16.694 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:26:16.864 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:26:24.601 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:26:24.860 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:26:25.088 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:25.296 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:25.498 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:25.703 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:25.907 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.112 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.318 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.521 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.658 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.831 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:26.962 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:27.098 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:27.340 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:28.369 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:26:28.567 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:28.773 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:28.991 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:29.131 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:29.931 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:29.988 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:26:29.989 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:26:29.993 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:26:29.994 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:26:30.007 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:26:30.007 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:26:30.009 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:30.009 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:30.012 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:26:30.012 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:26:30.018 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:26:30.018 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:26:30.564 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:30.663 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:30.742 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:30.937 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:45.041 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:26:45.048 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:26:45.054 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:26:45.305 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:26:45.426 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:26:45.557 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:26:45.694 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:26:52.370 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:26:52.664 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:26:52.837 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:53.043 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:53.250 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:53.453 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:53.657 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:53.862 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.006 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.162 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.375 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.582 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.709 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:54.886 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:55.092 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:26:56.320 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:26:56.524 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:56.729 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:56.923 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:57.139 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:26:57.796 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:57.825 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:26:57.825 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:26:57.829 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:26:57.830 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:26:57.840 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:26:57.841 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:26:57.846 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:57.847 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:26:57.847 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:57.849 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:26:57.856 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:26:57.856 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:26:58.412 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:58.419 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:26:58.515 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:26:58.571 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:29:59.391 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:29:59.394 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:29:59.984 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:30:03.601 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:30:03.726 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 10808 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:30:03.727 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:30:03.728 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:30:06.167 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:30:06.367 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 15 JPA repository interfaces.
17:30:08.291 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:30:08.306 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:30:08.310 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:30:08.311 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:30:08.427 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:30:08.428 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4590 ms
17:30:08.968 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:30:09.238 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:30:09.365 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:30:09.433 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:30:09.793 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:30:09.836 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:30:11.601 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@22cb8e5f
17:30:11.606 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:30:11.853 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:30:13.882 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:30:17.604 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:30:18.489 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:30:20.221 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:30:20.221 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:30:20.762 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:30:20.997 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:30:21.062 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:30:21.962 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:30:22.134 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@6c748330, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@411775eb, org.springframework.security.web.context.SecurityContextHolderFilter@7eba01f5, org.springframework.security.web.header.HeaderWriterFilter@24b263af, org.springframework.web.filter.CorsFilter@3cf8b6d5, org.springframework.security.web.csrf.CsrfFilter@2085c9bb, org.springframework.security.web.authentication.logout.LogoutFilter@260069b5, ru.anapa.autorent.config.JwtRequestFilter@23f5008a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1047924, org.springframework.security.web.session.ConcurrentSessionFilter@1d77a5e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@161b77d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@49e49cac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2ddc896a, org.springframework.security.web.session.SessionManagementFilter@15ee4ff9, org.springframework.security.web.access.ExceptionTranslationFilter@7f99a0a7, org.springframework.security.web.access.intercept.AuthorizationFilter@6a4ec56d]
17:30:22.887 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:30:22.916 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:30:22.947 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 19.979 seconds (process running for 21.191)
17:30:23.034 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:30:23.035 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:30:23.158 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:30:23.374 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:30:23.397 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:30:23.497 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:23.615 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:23.731 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:30:23.822 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:23.915 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:23.978 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:30:24.019 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:30:24.118 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 1 автомобилей
17:30:24.152 [scheduling-1] DEBUG org.hibernate.SQL - 
    update
        cars 
    set
        available=?,
        brand=?,
        category=?,
        color=?,
        daily_rate=?,
        description=?,
        fuel_type=?,
        license_plate=?,
        model=?,
        price_per_day=?,
        registration_number=?,
        schedule=?,
        seats=?,
        status=?,
        transmission=?,
        year=? 
    where
        id=?
17:30:25.042 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:25.146 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:25.841 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:30:29.506 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:29.734 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:30.548 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:30:30.549 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:30:30.549 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:30:30.549 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:30:30.549 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:30:30.549 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:30:30.549 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:30:30.549 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:30:30.751 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:30:30.863 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:30:30.966 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:30:31.077 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:30:31.175 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:31.282 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:30:31.382 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:31.677 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:30:31.876 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:30:32.265 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:30:32.316 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:30:32.422 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:32.528 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:30:32.530 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:30:32.531 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:30:32.728 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:30:32.829 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:30:32.930 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:30:33.038 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:30:33.437 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 4
17:30:33.439 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:30:33.440 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:30:33.440 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:30:33.440 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:30:33.440 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:30:33.448 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:30:33.549 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:30:33.647 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:30:33.647 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:30:33.649 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:30:33.649 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:30:33.649 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:30:33.650 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:30:33.650 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:30:33.651 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:30:33.651 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:30:33.651 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:30:33.651 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:30:33.658 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:30:33.761 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:30:33.762 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:30:33.762 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:30:33.765 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:30:33.864 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:30:33.865 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:30:33.869 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:30:33.969 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:30:33.969 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:30:35.800 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:30:35.801 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:30:35.868 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 67 ms
17:30:35.942 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:30:36.017 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:30:36.097 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:30:36.300 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:30:36.403 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:30:36.507 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:30:36.623 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:30:37.699 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:30:37.930 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:30:38.033 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.139 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.247 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.356 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.473 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.581 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.696 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.807 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:38.915 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:39.024 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:39.131 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:39.235 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:39.341 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:39.980 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:30:40.074 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:40.167 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:40.275 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:40.370 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:42.752 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:42.962 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:30:42.962 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:30:42.969 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:30:42.969 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:30:43.049 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:43.051 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:43.132 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:30:43.132 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:30:43.137 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:30:43.138 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:30:43.196 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:30:43.195 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:30:43.757 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:43.808 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:30:43.876 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:43.920 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:50.206 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
17:30:50.213 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:50.215 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
17:30:50.220 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:30:50.251 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:30:50.251 [http-nio-8080-exec-6] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
17:30:50.252 [http-nio-8080-exec-6] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:30:50.259 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:30:50.443 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:30:50.634 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:30:50.730 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:51.100 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:30:51.195 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:51.654 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:30:51.746 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:30:51.855 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:30:52.738 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:30:53.254 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:30:53.347 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:30:53.632 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:30:53.631 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:30:53.637 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:30:53.638 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:30:53.653 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:53.660 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:58.216 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:30:58.233 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:30:58.237 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:30:58.242 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:30:58.245 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:30:58.525 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:30:59.068 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:30:59.486 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:30:59.585 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:30:59.681 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:30:59.956 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:31:00.050 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:00.144 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:00.252 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:00.346 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:00.720 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:31:00.816 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:00.910 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:01.017 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:31:01.200 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:01.201 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:01.205 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:01.205 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:01.221 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:01.222 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:11.372 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:31:11.380 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:11.382 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:31:11.390 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:11.392 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:11.673 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:31:11.766 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:11.859 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:11.957 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:12.051 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:12.159 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:31:12.665 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:12.666 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:12.672 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:12.673 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:12.684 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:12.685 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:15.645 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:31:15.652 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:15.654 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:31:15.657 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:31:15.660 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:31:15.959 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:31:16.599 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:31:17.000 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:31:17.113 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:31:17.224 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:31:17.531 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:31:17.638 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:17.743 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:17.858 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:17.960 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:18.360 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:31:18.460 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:18.561 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:18.681 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:31:18.822 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:18.821 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:18.827 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:18.827 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:18.840 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:18.845 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:30.804 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:31:30.808 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:30.810 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:31:30.815 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:30.819 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:31.093 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:31:31.187 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:31.282 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:31.378 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:31.471 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:31.573 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:31:31.958 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:31.958 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:31.961 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:31.962 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:31.976 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:31.979 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:34.823 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/status/PENDING_CANCELLATION
17:31:34.826 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:34.828 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/status/PENDING_CANCELLATION
17:31:34.830 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:34.835 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:34.841 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:31:35.055 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:35.056 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:35.059 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:35.059 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:35.078 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:35.080 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:37.299 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/status/PENDING
17:31:37.303 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:37.304 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/status/PENDING
17:31:37.307 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:37.309 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:37.315 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:31:37.497 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:31:37.590 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:31:37.722 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:37.722 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:37.728 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:37.728 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:37.740 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:37.745 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:41.514 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
17:31:41.526 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:41.530 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
17:31:41.535 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:41.537 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:31:41.816 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:31:42.183 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:31:42.280 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:31:42.488 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:31:42.488 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:42.494 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:42.495 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:31:42.513 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:42.513 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:31:42.573 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:31:42.575 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:31:42.588 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:02.317 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:32:02.320 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:02.321 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:32:02.324 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:02.325 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:02.600 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:32:02.691 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:32:02.785 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:32:02.894 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:32:02.991 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:32:03.105 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:32:03.499 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:32:03.499 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:32:03.502 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:32:03.503 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:32:03.512 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:03.514 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:17.037 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /admin/rentals/57/approve
17:32:17.060 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:17.061 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured POST /admin/rentals/57/approve
17:32:17.169 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.Object ru.anapa.autorent.controller.AdminRentalController.approveRental(java.lang.Long,org.springframework.web.servlet.mvc.support.RedirectAttributes,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:17.172 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.Object ru.anapa.autorent.controller.AdminRentalController.approveRental(java.lang.Long,org.springframework.web.servlet.mvc.support.RedirectAttributes,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:17.359 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:32:17.484 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in ('ACTIVE', 'PENDING') 
        and r1_0.id<>? 
        and (
            (
                r1_0.start_date between ? and ?
            ) 
            or (
                r1_0.end_date between ? and ?
            ) 
            or (
                ? between r1_0.start_date and r1_0.end_date
            ) 
            or (
                ? between r1_0.start_date and r1_0.end_date
            )
        )
17:32:17.591 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:17.699 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:17.817 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:17.929 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 5 для аренды 57 на сумму 2000.00
17:32:17.938 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:18.037 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:18.132 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:18.226 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 6 для аренды 57 на сумму 2000.00
17:32:18.229 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:18.334 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:18.428 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:18.522 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 7 для аренды 57 на сумму 2000.00
17:32:18.528 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:18.625 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:18.719 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:18.814 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 8 для аренды 57 на сумму 2000.00
17:32:18.819 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:18.925 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:19.019 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:19.110 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 9 для аренды 57 на сумму 2000.00
17:32:19.116 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:19.224 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:19.320 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:19.413 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 10 для аренды 57 на сумму 2000.00
17:32:19.416 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:19.522 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:19.619 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:19.712 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 11 для аренды 57 на сумму 2000.00
17:32:19.715 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
        and dp1_0.payment_date=?
17:32:19.819 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:32:19.914 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    insert 
    into
        daily_payments
        (account_id, amount, created_at, notes, payment_date, processed_at, rental_id, status) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?)
17:32:20.010 [http-nio-8080-exec-3] INFO  r.a.a.service.DailyPaymentService - Создан ежедневный платеж ID 12 для аренды 57 на сумму 2000.00
17:32:20.014 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        rentals 
    set
        actual_return_date=?,
        cancel_reason=?,
        car_id=?,
        comment=?,
        created_at=?,
        end_date=?,
        notes=?,
        rating=?,
        item_id=?,
        start_date=?,
        status=?,
        total_cost=?,
        updated_at=?,
        user_id=? 
    where
        id=?
17:32:24.534 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:32:24.544 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:24.545 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:32:24.548 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:24.549 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:32:24.849 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:32:24.949 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:32:25.051 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:32:25.159 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:32:25.262 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:32:25.377 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:32:25.850 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:32:25.850 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:32:25.853 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:32:25.853 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:32:25.862 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:32:25.863 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:34:01.532 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
17:34:01.537 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:34:01.538 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
17:34:01.543 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:34:01.544 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:34:01.544 [http-nio-8080-exec-1] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
17:34:01.544 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:34:01.549 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:34:01.731 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:34:01.920 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:34:02.011 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:34:02.382 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:34:02.475 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:34:02.929 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:34:03.022 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:34:03.117 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:34:03.657 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:34:04.017 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:34:04.110 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:34:04.238 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:34:04.239 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:34:04.240 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:34:04.242 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:34:04.246 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:34:04.249 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:01.642 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:35:01.644 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:01.644 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:35:01.645 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:35:01.646 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:35:01.924 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:35:02.461 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:35:02.824 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:35:02.919 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:35:03.013 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:35:03.286 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:35:03.379 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:35:03.474 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:03.570 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:35:03.664 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:04.026 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:35:04.117 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:35:04.209 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:04.303 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:35:04.420 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:35:04.421 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:35:04.424 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:35:04.424 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:35:04.433 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:04.433 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:14.900 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
17:35:14.904 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:14.904 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
17:35:14.907 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:35:14.909 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:35:14.909 [http-nio-8080-exec-4] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
17:35:14.910 [http-nio-8080-exec-4] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:35:14.915 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:35:15.115 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:35:15.323 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:35:15.422 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:15.818 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:35:15.918 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:16.414 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:35:16.513 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:16.619 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:35:17.205 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:35:17.603 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:35:17.703 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:35:17.833 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:35:17.833 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:35:17.837 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:35:17.838 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:35:17.855 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:17.855 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:26.244 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
17:35:26.246 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:26.247 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
17:35:26.255 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:35:26.258 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:35:26.259 [http-nio-8080-exec-2] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:35:26.265 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:35:26.449 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:35:26.729 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
17:35:26.822 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:35:26.914 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:27.029 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
17:35:28.049 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 1 rentals for user admin@example.com
17:35:28.050 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 57, Status: ACTIVE
17:35:28.051 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
17:35:28.052 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 1 active rentals
17:35:28.052 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Active Rental ID: 57, Status: ACTIVE
17:35:28.053 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 0 history rentals
17:35:28.151 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:35:28.243 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:28.705 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:35:28.810 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:35:28.940 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:35:29.486 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:35:29.852 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:35:29.946 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:35:30.098 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:35:30.098 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:35:30.098 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:35:30.102 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:35:30.102 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:35:30.104 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:35:30.111 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:35:30.118 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:30.119 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:35:30.420 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:35:30.525 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:15.355 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
17:36:15.356 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:15.357 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
17:36:15.357 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:36:15.358 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
17:36:15.358 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:36:15.360 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:36:15.543 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:15.825 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
17:36:15.915 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:36:16.009 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:36:16.104 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 1 rentals for user admin@example.com
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Rental ID: 57, Status: ACTIVE
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 1 active rentals
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Active Rental ID: 57, Status: ACTIVE
17:36:17.129 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 0 history rentals
17:36:17.222 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:36:17.312 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:36:17.762 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:36:17.853 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:36:17.947 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:36:18.489 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:36:18.851 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:36:18.944 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:36:37.438 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:36:37.440 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:36:37.442 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:37.504 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:36:37.505 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:37.506 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:36:37.512 [http-nio-8080-exec-8] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:36:46.882 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:36:46.883 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:36:46.887 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:36:47.066 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:36:47.156 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:36:47.247 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:36:47.337 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:36:48.675 [http-nio-8080-exec-6] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:36:48.876 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:36:48.976 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.078 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.179 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.279 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.381 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.483 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.585 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.685 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.786 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.887 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:49.989 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:50.090 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:50.192 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:36:50.776 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:36:50.868 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:36:50.959 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:36:51.050 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:36:51.141 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:36:51.507 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:51.547 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:36:51.547 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:36:51.550 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:36:51.550 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:36:51.557 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:36:51.560 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:36:51.560 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:36:51.560 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:51.569 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:36:51.596 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:36:51.598 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:51.600 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:36:51.611 [http-nio-8080-exec-10] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:36:51.645 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:36:51.647 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:36:51.651 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:51.762 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:36:51.858 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:36:52.171 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:36:52.275 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:37:25.981 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:37:25.983 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:37:25.989 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:37:26.122 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:37:26.123 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:37:26.124 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:37:26.126 [http-nio-8080-exec-7] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:40:10.784 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:40:10.789 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:40:11.356 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:40:21.508 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:40:21.820 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 6156 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:40:21.820 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:40:21.823 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:40:25.653 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:40:25.956 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 290 ms. Found 15 JPA repository interfaces.
17:40:30.418 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:40:30.472 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:40:30.481 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:40:30.482 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:40:30.975 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:40:30.977 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 9003 ms
17:40:32.447 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:40:33.510 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:40:34.110 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:40:34.299 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:40:35.924 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:40:36.074 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:40:38.970 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3ccefe1b
17:40:38.979 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:40:39.357 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:40:42.577 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:40:46.449 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:40:47.192 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:40:48.781 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:40:48.781 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:40:49.311 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:40:49.541 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:40:49.603 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:40:50.627 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:40:50.800 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@620572f1, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@256b48b2, org.springframework.security.web.context.SecurityContextHolderFilter@473dee2, org.springframework.security.web.header.HeaderWriterFilter@1ef346ef, org.springframework.web.filter.CorsFilter@7c80bcd9, org.springframework.security.web.csrf.CsrfFilter@47546cdf, org.springframework.security.web.authentication.logout.LogoutFilter@6a280ef2, ru.anapa.autorent.config.JwtRequestFilter@5c76fce4, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1ce58f84, org.springframework.security.web.session.ConcurrentSessionFilter@57b5aecb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4bd8491e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@314f82dd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6a4ec56d, org.springframework.security.web.session.SessionManagementFilter@2e6fabf5, org.springframework.security.web.access.ExceptionTranslationFilter@2e407d06, org.springframework.security.web.access.intercept.AuthorizationFilter@1be219b8]
17:40:51.579 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:40:51.600 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:40:51.632 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 31.087 seconds (process running for 32.779)
17:40:51.853 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:40:52.018 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:40:52.018 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:40:52.143 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:40:52.173 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:40:52.263 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:40:52.317 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:40:52.377 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:40:52.472 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:40:52.515 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:40:52.573 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:40:52.669 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:40:52.672 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:40:52.771 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 1 автомобилей
17:40:52.800 [scheduling-1] DEBUG org.hibernate.SQL - 
    update
        cars 
    set
        available=?,
        brand=?,
        category=?,
        color=?,
        daily_rate=?,
        description=?,
        fuel_type=?,
        license_plate=?,
        model=?,
        price_per_day=?,
        registration_number=?,
        schedule=?,
        seats=?,
        status=?,
        transmission=?,
        year=? 
    where
        id=?
17:40:52.829 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:40:52.972 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:40:53.546 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:40:53.546 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:40:53.546 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:40:53.912 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:40:54.980 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:41:00.914 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:01.068 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:02.251 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:41:05.313 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:41:05.313 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:41:05.315 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
17:41:05.337 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:41:05.386 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:41:05.648 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:41:05.842 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:41:05.946 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:41:06.048 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:41:06.150 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:41:07.258 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:41:07.451 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:41:07.553 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:07.661 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:07.764 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:07.860 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:07.954 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.060 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.164 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.263 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.369 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.472 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:08.773 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:09.114 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:09.171 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:09.215 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:09.321 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:09.815 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:41:09.815 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:41:09.815 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:41:09.815 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:41:09.815 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:41:09.815 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:41:09.815 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:41:09.816 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:41:09.927 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:41:10.031 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:10.133 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:41:10.133 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:10.243 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:10.348 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:10.729 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:41:10.733 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:41:10.878 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:11.057 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:41:11.060 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:41:11.060 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:41:11.359 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:11.413 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:41:11.418 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:41:11.427 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:41:11.431 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:41:11.442 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:41:11.446 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:11.447 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:41:11.483 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:41:11.493 [http-nio-8080-exec-4] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:41:11.505 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:11.505 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:11.627 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:11.638 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:11.642 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:11.647 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:11.671 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:41:11.683 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:11.683 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:11.824 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:41:11.985 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:41:12.131 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:41:12.240 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:12.249 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:12.252 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:41:12.342 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:12.352 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:12.898 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
17:41:12.900 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:41:12.900 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
17:41:12.900 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:41:12.900 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:41:12.900 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:41:12.907 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:41:13.048 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:41:13.183 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:41:13.183 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:41:13.183 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:41:13.183 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:41:13.183 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:41:13.184 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:41:13.184 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:41:13.185 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:41:13.185 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:41:13.185 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:41:13.186 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:41:13.190 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:41:13.330 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:41:13.330 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:41:13.330 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:41:13.332 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:41:13.514 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:41:13.514 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:41:13.518 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:41:13.719 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:41:13.719 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:41:25.510 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:41:25.514 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:41:25.516 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:41:25.703 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:41:25.800 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:41:25.893 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:41:25.989 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:41:27.070 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:41:27.259 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:41:27.354 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:27.451 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:27.547 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:27.643 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:27.862 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:27.956 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.062 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.164 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.269 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.374 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.484 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.588 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:28.711 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:29.332 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:41:29.426 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:29.517 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:29.612 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:29.707 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:30.082 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:30.121 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:41:30.122 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:30.122 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:41:30.123 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:30.127 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:41:30.126 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:30.130 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:30.130 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:41:30.139 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:30.139 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:30.148 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:30.155 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:30.168 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:41:30.175 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:30.179 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:41:30.210 [http-nio-8080-exec-9] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:41:30.279 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:30.392 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:31.741 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:31.954 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=99BB2BF2E5E8952320E94B640034050D], Granted Authorities=[ROLE_ADMIN]]]
17:41:34.456 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:41:34.459 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:34.475 [http-nio-8080-exec-6] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:41:34.506 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:41:34.508 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:34.510 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:41:34.517 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Login page requested
17:41:34.860 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:41:34.862 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:34.864 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:41:34.872 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:41:35.064 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:41:35.161 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:41:35.256 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:41:35.350 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:41:36.698 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:41:36.898 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:41:37.000 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.104 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.210 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.386 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.591 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.698 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.807 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:37.989 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:38.095 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:38.307 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:38.416 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:38.521 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:38.625 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:41:39.197 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:41:39.290 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:39.388 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:39.487 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:39.583 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:41:40.055 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:41:40.067 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:40.067 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:40.067 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:40.069 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:41:40.070 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:40.070 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:40.071 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:41:40.071 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:41:40.080 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:40.080 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:41:40.102 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:41:40.104 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:40.106 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:41:40.374 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:41.676 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:41:41.941 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:41:41.948 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:41.956 [http-nio-8080-exec-6] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:41:41.973 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:41:41.978 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:41.981 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:41:41.987 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Login page requested
17:41:42.032 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:41:42.034 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:42.037 [http-nio-8080-exec-8] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:41:42.046 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:41:42.047 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:42.049 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:41:42.050 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - Login page requested
17:41:42.689 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:41:42.691 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:42.692 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:41:42.695 [http-nio-8080-exec-7] INFO  r.a.a.controller.AuthController - Login page requested
17:41:42.729 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:41:42.730 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:41:42.732 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:42.732 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:41:42.733 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:41:42.733 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:42:13.261 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:42:13.737 [http-nio-8080-exec-4] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
17:42:13.742 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:42:13.835 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:13.938 [http-nio-8080-exec-4] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
17:42:13.941 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
17:42:14.432 [http-nio-8080-exec-4] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
17:42:14.617 [http-nio-8080-exec-4] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [176] milliseconds.
17:42:14.629 [http-nio-8080-exec-4] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session E777FB65A91D520DBBF7481211186438, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
17:42:14.632 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
17:42:14.636 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@664460ea]
17:42:14.637 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
17:42:14.657 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:42:14.662 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:14.683 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:42:14.688 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:42:14.707 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:42:14.897 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:42:15.003 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:42:15.009 [http-nio-8080-exec-1] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/auth/login
17:42:15.020 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:42:15.023 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:42:15.025 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Login page requested
17:42:15.025 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Admin login required message detected in session
17:42:15.041 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:15.055 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:42:15.055 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:42:15.058 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:42:15.058 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:42:15.071 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:15.073 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:15.443 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:42:15.841 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:42:15.936 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:42:16.029 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:42:16.301 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:42:16.394 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:16.487 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:42:16.596 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:16.690 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:42:17.059 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:42:17.151 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:17.244 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:42:17.360 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:42:18.864 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:42:18.865 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:42:18.869 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:42:19.052 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:42:19.145 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:42:19.243 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:42:19.337 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:42:20.933 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:42:21.136 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:42:21.238 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.343 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.446 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.549 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.653 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.759 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.865 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:21.969 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:22.075 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:22.179 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:22.283 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:22.387 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:22.493 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:42:23.058 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:42:23.151 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:23.245 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:42:23.362 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:23.455 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:42:23.827 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:23.856 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:42:23.856 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:42:23.859 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:42:23.860 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:42:23.870 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:23.871 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:42:23.872 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:42:23.874 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:23.875 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:42:23.875 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:42:23.882 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:42:23.883 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:42:24.101 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:24.208 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:42:25.604 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:42:25.819 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:43:47.092 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:43:47.097 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:43:47.097 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:43:47.099 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:43:47.101 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:43:47.105 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:43:47.105 [http-nio-8080-exec-9] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:45:21.451 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:45:21.459 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:45:21.463 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:45:21.765 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:45:21.941 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:45:22.146 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:45:22.441 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:45:30.557 [http-nio-8080-exec-10] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:45:30.886 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:45:31.051 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:31.258 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:31.409 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:31.667 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:31.871 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.022 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.282 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.445 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.570 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.698 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:32.896 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:33.100 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:33.246 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:45:34.331 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:45:34.534 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:45:34.738 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:45:34.889 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:45:35.147 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:45:35.897 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:36.082 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:45:36.085 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:45:36.092 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:36.117 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:45:36.119 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:45:36.122 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:45:36.123 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:45:36.126 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:45:36.131 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:45:36.200 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:45:36.203 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:36.204 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:45:36.210 [http-nio-8080-exec-6] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:45:36.233 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:45:36.236 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:45:36.243 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:36.698 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:45:36.719 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:45:36.797 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:36.873 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:45:49.610 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:45:49.619 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:45:50.328 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:45:53.535 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:45:53.621 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 17556 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:45:53.622 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:45:53.624 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:45:55.879 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:45:56.073 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 15 JPA repository interfaces.
17:45:58.008 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:45:58.029 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:45:58.034 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:45:58.035 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:45:58.158 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:45:58.159 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4428 ms
17:45:58.633 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:45:58.926 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:45:59.044 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:45:59.100 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:45:59.607 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:45:59.673 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:46:01.618 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45753c22
17:46:01.621 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:46:01.878 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:46:03.853 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:46:07.857 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:46:08.792 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:46:10.448 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:46:10.449 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:46:11.029 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:46:11.282 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:46:11.359 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:46:12.315 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:46:12.515 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@48d1ff1c, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e22e204, org.springframework.security.web.context.SecurityContextHolderFilter@56794250, org.springframework.security.web.header.HeaderWriterFilter@145f5e4c, org.springframework.web.filter.CorsFilter@7e0bcdeb, org.springframework.security.web.csrf.CsrfFilter@5a8a2982, org.springframework.security.web.authentication.logout.LogoutFilter@5a32a948, ru.anapa.autorent.config.JwtRequestFilter@23f5008a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1be219b8, org.springframework.security.web.session.ConcurrentSessionFilter@169c7543, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@188467fe, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4bd8491e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c80bcd9, org.springframework.security.web.session.SessionManagementFilter@7030c643, org.springframework.security.web.access.ExceptionTranslationFilter@56fd8b01, org.springframework.security.web.access.intercept.AuthorizationFilter@161722eb]
17:46:13.263 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:46:13.297 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:46:13.330 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 20.389 seconds (process running for 21.512)
17:46:13.567 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:46:13.670 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:46:13.670 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:46:13.792 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:13.798 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:46:13.913 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:46:13.931 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:14.053 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:14.063 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:46:14.156 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:14.161 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:14.268 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:46:14.269 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:46:14.363 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:14.368 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:46:14.465 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:46:14.652 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:46:14.850 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:46:15.225 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:46:15.286 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:46:15.405 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:15.511 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:46:15.512 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:46:15.512 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:46:15.701 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:46:16.265 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:46:17.742 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:17.852 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:18.569 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:46:19.621 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:19.730 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:20.203 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:46:20.203 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:46:20.204 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:46:20.204 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:46:20.205 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:46:20.205 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:46:20.205 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:46:20.205 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:46:20.207 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:46:20.207 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:46:20.616 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:46:20.779 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:46:20.888 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:46:20.999 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:46:21.100 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:46:21.239 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:46:22.046 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
17:46:22.047 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:46:22.048 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
17:46:22.048 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:46:22.048 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:46:22.048 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:46:22.064 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:46:22.173 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:46:22.364 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:46:22.364 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:46:22.364 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:46:22.364 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:46:22.365 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:46:22.366 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:46:22.366 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:46:22.368 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:46:22.369 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:46:22.369 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:46:22.369 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:46:22.379 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:46:22.487 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:46:22.487 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:46:22.487 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:46:22.490 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:46:22.595 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:46:22.595 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:46:22.597 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:46:22.705 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:46:22.706 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:46:27.811 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:46:27.811 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:46:27.814 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
17:46:27.834 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:46:27.857 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:46:27.891 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:46:28.091 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:46:28.192 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:46:28.295 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:46:28.401 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:46:29.848 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:46:30.149 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:46:30.352 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:30.465 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:30.662 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:30.868 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:30.984 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.176 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.380 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.499 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.684 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.787 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.887 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:31.989 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:32.092 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:32.688 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:46:32.790 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:32.890 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:33.015 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:33.117 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:35.398 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:35.562 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:46:35.562 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:46:35.562 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:46:35.568 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:46:35.568 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:35.569 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:46:35.570 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:46:35.682 [http-nio-8080-exec-6] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:46:35.720 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:35.721 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:35.870 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:46:35.869 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:46:35.881 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:46:35.882 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:46:35.937 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:46:35.943 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:46:36.540 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:36.567 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:36.674 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:36.721 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:46:48.199 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:46:48.205 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:48.209 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:46:48.213 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:46:48.264 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:46:48.275 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:48.314 [http-nio-8080-exec-4] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:46:48.334 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:46:48.355 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:48.360 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:46:48.369 [http-nio-8080-exec-1] INFO  r.a.a.controller.AuthController - Login page requested
17:46:48.409 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:46:48.520 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:46:48.627 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:46:48.728 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:46:49.942 [http-nio-8080-exec-2] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:46:50.227 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:46:50.422 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:50.626 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:50.833 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:50.943 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.139 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.344 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.453 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.653 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.752 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.855 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:51.954 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:52.055 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:52.156 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:46:52.740 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:46:52.840 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:52.940 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:53.050 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:53.151 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:46:53.642 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:46:53.643 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:46:53.643 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:46:53.645 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:53.660 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:53.660 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:53.662 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:46:53.662 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:46:53.663 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:46:53.670 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:46:53.670 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:46:53.691 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:46:53.692 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:53.693 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:46:54.257 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:54.591 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:46:54.716 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:46:54.719 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:54.721 [http-nio-8080-exec-9] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:46:54.733 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:46:54.739 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:54.744 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:46:54.748 [http-nio-8080-exec-7] INFO  r.a.a.controller.AuthController - Login page requested
17:46:54.779 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
17:46:54.782 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:54.785 [http-nio-8080-exec-10] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
17:46:54.793 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:46:54.794 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:54.795 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:46:54.796 [http-nio-8080-exec-4] INFO  r.a.a.controller.AuthController - Login page requested
17:46:56.269 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:46:56.271 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:56.273 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:46:56.274 [http-nio-8080-exec-1] INFO  r.a.a.controller.AuthController - Login page requested
17:46:56.295 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:46:56.296 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:46:56.297 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:56.297 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
17:46:56.297 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:46:56.298 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:47:10.078 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:47:10.393 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
17:47:10.395 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:47:10.493 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:10.603 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
17:47:10.634 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
17:47:11.036 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
17:47:11.091 [http-nio-8080-exec-8] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session C0929C186CC683D635B4A3A8E9499037, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
17:47:11.092 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
17:47:11.092 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@564835a7]
17:47:11.093 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
17:47:11.100 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:47:11.102 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:11.105 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:47:11.109 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:47:11.117 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:47:11.400 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:47:11.516 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
17:47:11.518 [http-nio-8080-exec-5] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/auth/login
17:47:11.525 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
17:47:11.526 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
17:47:11.527 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - Login page requested
17:47:11.528 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - Admin login required message detected in session
17:47:11.532 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:11.551 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:47:11.551 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:47:11.554 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:47:11.554 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:47:11.563 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:11.564 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:11.959 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:47:12.353 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:47:12.451 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:47:12.549 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:47:12.833 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:47:12.930 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:13.027 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:47:13.126 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:13.222 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:47:13.614 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:47:13.708 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:13.804 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:47:13.907 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:47:14.028 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:47:14.029 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:47:14.031 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:47:14.225 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:47:14.324 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:47:14.424 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:47:14.524 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:47:15.484 [http-nio-8080-exec-4] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:47:15.677 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:47:15.816 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.022 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.131 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.330 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.534 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.740 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:16.943 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.149 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.353 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.461 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.569 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.679 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:17.779 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:47:18.358 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:47:18.457 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:18.555 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:47:18.656 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:18.754 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:47:19.145 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:19.170 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:47:19.171 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:47:19.173 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:47:19.175 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:47:19.183 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:47:19.186 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:47:19.186 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:19.189 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:19.189 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:47:19.192 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:47:19.194 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:47:19.199 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:47:19.799 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:19.897 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:20.202 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:47:20.306 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:31.437 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:47:31.440 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:47:31.447 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:31.463 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:47:31.464 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:47:31.465 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:47:31.474 [http-nio-8080-exec-9] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:49:11.495 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
17:49:11.497 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
17:49:12.111 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
17:49:17.923 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
17:49:18.002 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 20268 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
17:49:18.003 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
17:49:18.004 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
17:49:20.276 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
17:49:20.492 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189 ms. Found 15 JPA repository interfaces.
17:49:22.342 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
17:49:22.369 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
17:49:22.376 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
17:49:22.376 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
17:49:22.499 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
17:49:22.501 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4385 ms
17:49:22.995 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
17:49:23.263 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
17:49:23.363 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
17:49:23.420 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
17:49:23.792 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
17:49:23.841 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
17:49:25.973 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70f5f57d
17:49:25.977 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
17:49:26.239 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
17:49:28.170 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
17:49:32.676 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
17:49:33.512 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
17:49:34.975 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
17:49:34.976 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
17:49:35.499 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
17:49:35.761 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
17:49:35.822 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
17:49:36.856 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
17:49:37.035 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1fbb7b9b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@579e065f, org.springframework.security.web.context.SecurityContextHolderFilter@38807c9d, org.springframework.security.web.header.HeaderWriterFilter@22f6ff13, org.springframework.web.filter.CorsFilter@2ddc896a, org.springframework.security.web.csrf.CsrfFilter@7acf7bcf, org.springframework.security.web.authentication.logout.LogoutFilter@6e8fc7a3, ru.anapa.autorent.config.JwtRequestFilter@6d420cdd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3e187145, org.springframework.security.web.session.ConcurrentSessionFilter@70587c0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49e49cac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55cd9734, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37c34207, org.springframework.security.web.session.SessionManagementFilter@2410721, org.springframework.security.web.access.ExceptionTranslationFilter@169c7543, org.springframework.security.web.access.intercept.AuthorizationFilter@1047924]
17:49:37.782 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
17:49:37.803 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
17:49:37.838 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 20.337 seconds (process running for 21.109)
17:49:37.933 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
17:49:37.934 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
17:49:38.058 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
17:49:38.323 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
17:49:38.334 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:49:38.463 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:38.621 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:38.732 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:38.829 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:38.919 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:49:38.984 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:49:39.086 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:49:39.181 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
17:49:40.134 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:40.230 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:40.799 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
17:49:43.084 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:43.278 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:43.886 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
17:49:43.886 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
17:49:43.887 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
17:49:43.887 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
17:49:43.887 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
17:49:43.887 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
17:49:43.887 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
17:49:43.887 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
17:49:44.094 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
17:49:44.504 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
17:49:44.551 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:49:44.704 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:44.912 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
17:49:45.021 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
17:49:45.138 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
17:49:45.246 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
17:49:45.428 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:49:45.619 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:45.828 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
17:49:45.923 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:46.206 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
17:49:46.208 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
17:49:46.209 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
17:49:46.400 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
17:49:46.493 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:49:46.594 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:49:46.697 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:49:46.797 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:49:46.893 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:49:47.273 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
17:49:47.287 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
17:49:47.287 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
17:49:47.287 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
17:49:47.287 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:49:47.287 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
17:49:47.297 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
17:49:47.392 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
17:49:47.488 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
17:49:47.489 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
17:49:47.489 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
17:49:47.489 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
17:49:47.490 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
17:49:47.490 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
17:49:47.491 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
17:49:47.492 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:49:47.493 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
17:49:47.493 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
17:49:47.493 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:49:47.506 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:49:47.602 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:49:47.602 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
17:49:47.603 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
17:49:47.606 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
17:49:47.701 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
17:49:47.702 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
17:49:47.706 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
17:49:47.800 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
17:49:47.801 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
17:49:51.124 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
17:49:51.125 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
17:49:51.126 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
17:49:51.168 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
17:49:51.218 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
17:49:51.275 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
17:49:51.471 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
17:49:51.569 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
17:49:51.669 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
17:49:51.773 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
17:49:53.084 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
17:49:53.416 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
17:49:53.618 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:53.824 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:53.944 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.103 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.215 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.328 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.443 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.642 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:54.851 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:55.051 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:55.257 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:55.462 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:55.568 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:49:56.230 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:49:56.328 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:56.426 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:56.548 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:56.651 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:49:58.758 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:49:58.907 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:49:58.915 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:49:58.916 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:49:58.921 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:49:58.934 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
17:49:58.939 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:49:58.942 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
17:49:58.991 [http-nio-8080-exec-4] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
17:49:59.058 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:49:59.058 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:49:59.158 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:49:59.160 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:49:59.167 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
17:49:59.167 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
17:49:59.247 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:49:59.247 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
17:49:59.824 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:59.840 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:49:59.928 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:49:59.953 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:06.107 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
17:50:06.126 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:06.130 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
17:50:06.143 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:50:06.179 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
17:50:06.180 [http-nio-8080-exec-8] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
17:50:06.182 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
17:50:06.190 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
17:50:06.383 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
17:50:06.583 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:50:06.680 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:07.069 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:50:07.166 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:07.644 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
17:50:07.742 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:07.845 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
17:50:08.419 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:50:08.808 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
17:50:08.907 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:50:09.141 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:50:09.143 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:09.153 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:50:09.158 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:09.176 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:09.179 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:12.947 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
17:50:12.965 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:12.988 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
17:50:13.001 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:50:13.009 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
17:50:13.304 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
17:50:13.880 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
17:50:14.375 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
17:50:14.472 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:50:14.571 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
17:50:14.859 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
17:50:14.956 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:15.053 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:15.168 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:15.267 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:15.657 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
17:50:15.755 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:15.853 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:15.968 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
17:50:16.160 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:50:16.160 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:16.163 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:16.166 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:50:16.179 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:16.184 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:18.941 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:50:18.948 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:18.954 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:50:18.977 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:18.980 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:19.272 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:50:19.369 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:19.467 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:19.569 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:19.669 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:19.777 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:50:20.285 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:50:20.285 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:20.289 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:50:20.291 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:20.300 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:20.303 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:23.013 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/status/ACTIVE
17:50:23.026 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:23.028 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/status/ACTIVE
17:50:23.033 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:23.035 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:23.043 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:50:23.233 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:23.330 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:23.431 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:50:23.530 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:50:23.654 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:23.656 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:50:23.659 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:23.659 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:50:23.671 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:23.673 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:27.486 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/53
17:50:27.490 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:27.492 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/53
17:50:27.497 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:27.500 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:50:27.784 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:50:28.167 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:50:28.262 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:50:28.364 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:50:28.471 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:50:28.568 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:50:28.910 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:50:29.087 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:50:29.087 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:29.092 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:29.092 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:50:29.104 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:29.111 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:50:29.182 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:50:29.186 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:50:29.196 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:24.043 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:55:24.045 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:24.045 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:55:24.047 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:24.047 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:24.327 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:55:24.422 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:55:24.516 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:55:24.609 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:55:24.704 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:55:24.804 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:55:25.762 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:55:25.786 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:55:25.809 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:55:25.826 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:55:25.941 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:26.014 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:28.452 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/status/ACTIVE
17:55:28.458 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:28.463 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/status/ACTIVE
17:55:28.467 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:28.469 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:28.475 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:55:28.670 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:55:28.772 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:55:28.884 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:55:28.984 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:55:29.148 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:55:29.154 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:55:29.167 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:55:29.177 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:55:29.216 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:29.221 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:31.557 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
17:55:31.561 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:31.564 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
17:55:31.567 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:31.569 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:55:31.853 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:55:32.240 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:55:32.337 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:55:32.437 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:55:32.544 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:55:32.641 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:55:32.740 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:55:32.903 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:55:32.904 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:55:32.910 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:55:32.909 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:55:32.929 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:32.936 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:55:32.961 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:55:32.964 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:55:32.982 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:24.566 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
17:56:24.572 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:24.574 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
17:56:24.577 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:24.578 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:24.583 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:56:24.771 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:24.870 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:24.970 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:25.067 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:25.219 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:25.219 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:25.224 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:25.224 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:25.235 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:25.237 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:30.467 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/54
17:56:30.471 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:30.472 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/54
17:56:30.475 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:30.479 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:30.765 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:31.153 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:56:31.255 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:56:31.351 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:31.453 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:56:31.547 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:56:31.644 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:31.821 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:31.822 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:31.827 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:31.827 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:31.840 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:31.840 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:42.030 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
17:56:42.040 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:42.042 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
17:56:42.047 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:42.051 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:42.062 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:56:42.232 [http-nio-8080-exec-6] WARN  com.zaxxer.hikari.pool.PoolBase - HikariPool-1 - Failed to validate connection com.mysql.cj.jdbc.ConnectionImpl@7c872a4c (No operations allowed after connection closed.). Possibly consider using a shorter maxLifetime value.
17:56:42.425 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:42.524 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:42.624 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:42.723 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:42.854 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:42.857 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:42.859 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:42.860 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:42.871 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:42.871 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:46.843 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
17:56:46.847 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:46.848 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
17:56:46.850 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:46.851 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:47.138 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:47.519 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:56:47.616 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:56:47.714 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:47.813 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:56:47.907 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:56:48.007 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:56:48.130 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:48.131 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:48.135 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:48.136 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:48.148 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:48.148 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:56.343 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:56:56.346 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:56.348 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:56:56.350 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:56:56.352 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:56:56.635 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:56:56.730 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:56.826 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:56.924 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:57.021 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:57.120 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:56:57.527 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:57.527 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:57.532 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:57.532 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:57.541 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:57.543 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:58.988 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
17:56:58.992 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:58.993 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
17:56:58.996 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:58.998 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:56:59.003 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:56:59.195 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:59.290 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:59.389 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:56:59.486 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:56:59.611 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:56:59.611 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:56:59.615 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:56:59.616 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:56:59.627 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:56:59.627 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:16.356 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
17:57:16.358 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:16.358 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
17:57:16.360 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:57:16.361 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:57:16.645 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:17.027 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:17.121 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:17.219 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:17.324 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:17.423 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:17.633 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:18.212 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:18.213 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:18.215 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:18.217 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:18.224 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:18.229 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:26.829 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:57:26.833 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:26.834 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:57:26.836 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:26.837 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:27.122 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:57:27.220 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:27.327 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:27.426 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:27.521 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:27.636 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:57:28.066 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:28.081 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:28.083 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:28.113 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:28.136 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:28.168 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:30.365 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
17:57:30.367 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:30.368 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
17:57:30.370 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:30.371 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:30.659 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:31.054 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:31.151 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:31.247 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:31.352 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:31.452 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:31.548 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:31.714 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:31.715 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:31.720 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:31.720 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:31.732 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:31.734 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:31.750 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:31.753 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:31.762 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:41.086 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
17:57:41.089 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:41.090 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
17:57:41.093 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:41.094 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:41.375 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
17:57:41.473 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:41.570 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:41.665 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:41.760 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:41.860 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
17:57:42.266 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:42.266 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:42.271 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:42.271 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:42.283 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:42.283 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:44.714 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/status/ACTIVE
17:57:44.718 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:44.719 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/status/ACTIVE
17:57:44.723 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:44.724 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentalsByStatus(java.lang.String,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:44.733 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:57:44.925 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:45.022 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:45.120 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:57:45.218 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:57:45.343 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:45.344 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:45.346 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:45.347 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:45.357 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:45.360 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:50.193 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/53
17:57:50.196 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:50.198 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/53
17:57:50.200 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:50.202 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
17:57:50.485 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:50.869 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:50.966 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:51.061 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:51.166 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:57:51.263 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:57:51.360 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:57:51.499 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:51.499 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:57:51.503 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:51.504 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:57:51.517 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:51.517 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:57:51.540 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:57:51.543 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:57:51.552 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:40.904 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
17:58:40.909 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:40.911 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
17:58:40.912 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:58:40.914 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:58:40.919 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
17:58:41.108 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:58:41.205 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:58:41.302 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
17:58:41.400 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
17:58:41.539 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:58:41.539 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:58:41.543 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:58:41.544 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:58:41.558 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:41.558 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:44.597 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
17:58:44.601 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:44.602 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
17:58:44.604 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:58:44.606 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
17:58:44.889 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:58:45.269 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:58:45.364 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:58:45.463 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:58:45.569 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
17:58:45.665 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
17:58:45.762 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
17:58:45.937 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
17:58:45.937 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
17:58:45.960 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
17:58:45.961 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
17:58:45.991 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
17:58:45.996 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:00:00.014 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - [Scheduler] Актуализация всех не обработанных платежей (PENDING/FAILED)
18:00:00.021 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:00:00.025 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:00:00.220 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:00:00.221 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:00:00.223 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК СИНХРОНИЗАЦИИ СТАТУСОВ АВТОМОБИЛЕЙ ===
18:00:00.327 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:00:00.427 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:00:00.524 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:00:00.628 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:00:00.725 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:00:00.831 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:00:00.926 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:00:01.217 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Синхронизация статусов автомобилей завершена успешно
18:01:01.084 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:01:01.091 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:01:01.668 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:01:14.839 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:01:14.969 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 5944 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:01:14.971 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:01:14.973 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:01:17.737 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:01:18.121 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 333 ms. Found 15 JPA repository interfaces.
18:01:20.121 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:01:20.161 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:01:20.167 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:01:20.167 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:01:20.303 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:01:20.304 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5141 ms
18:01:20.787 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:01:21.109 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:01:21.203 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:01:21.272 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:01:21.738 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:01:21.789 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:01:24.811 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@25c548d1
18:01:24.814 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:01:25.174 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:01:27.293 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:01:33.416 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:01:34.277 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:01:36.028 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:01:36.029 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:01:36.554 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:01:36.794 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:01:36.867 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:01:37.820 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:01:38.014 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1141ce2a, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6e8fc7a3, org.springframework.security.web.context.SecurityContextHolderFilter@7f99a0a7, org.springframework.security.web.header.HeaderWriterFilter@42889d4e, org.springframework.web.filter.CorsFilter@4b674606, org.springframework.security.web.csrf.CsrfFilter@44eb735c, org.springframework.security.web.authentication.logout.LogoutFilter@104770aa, ru.anapa.autorent.config.JwtRequestFilter@4b98225c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@42a289ce, org.springframework.security.web.session.ConcurrentSessionFilter@5ad0c9bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@24b263af, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@22f6ff13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67b10f6d, org.springframework.security.web.session.SessionManagementFilter@26e14208, org.springframework.security.web.access.ExceptionTranslationFilter@5fc62453, org.springframework.security.web.access.intercept.AuthorizationFilter@3feb5c83]
18:01:38.731 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:01:38.752 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:01:38.790 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 24.519 seconds (process running for 25.851)
18:01:39.108 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:01:39.207 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:01:39.213 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:01:39.345 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:39.495 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:01:39.576 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:01:39.643 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:39.653 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:01:39.750 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:01:39.782 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:01:39.845 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:01:39.936 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:01:39.949 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:01:40.035 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:01:40.101 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:01:40.126 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:01:40.223 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:01:40.247 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:01:40.313 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:01:40.412 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:01:40.502 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:01:40.773 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:01:40.773 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:01:40.773 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:01:40.953 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:01:41.492 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:01:42.612 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:42.704 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:43.295 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:01:44.111 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:44.214 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:01:44.614 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:01:44.615 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:01:44.615 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:01:44.616 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:01:44.616 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:01:44.616 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:01:44.616 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:01:44.616 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:01:44.618 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:01:44.618 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:01:44.817 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:01:44.918 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:01:45.020 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:01:45.124 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:01:45.227 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:01:45.330 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:01:45.730 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:01:45.733 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:01:45.734 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:01:45.734 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:01:45.734 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:01:45.734 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:01:45.742 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:01:45.843 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:01:45.949 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:01:45.950 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:01:45.950 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:01:45.950 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:01:45.951 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:01:45.952 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:01:45.953 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:01:45.955 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:01:45.957 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:01:45.957 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:01:45.958 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:01:45.968 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:01:46.069 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:01:46.070 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:01:46.070 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:01:46.074 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:01:46.168 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:01:46.169 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:01:46.173 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:01:46.274 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:01:46.275 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:01:56.286 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:01:56.289 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:01:56.296 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
18:01:56.441 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:01:56.542 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:01:56.576 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:01:56.643 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:01:56.733 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:01:57.382 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:01:58.098 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:01:58.296 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:01:58.486 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:01:58.718 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:01:58.912 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:01:59.118 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:02:01.576 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:02:01.576 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:02:01.585 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:02:01.587 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:02:01.698 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:02:01.701 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:04:20.195 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:04:20.207 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:04:20.888 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:04:29.843 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:04:30.125 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 11752 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:04:30.128 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:04:30.130 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:04:34.395 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:04:34.712 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 269 ms. Found 15 JPA repository interfaces.
18:04:36.857 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:04:36.886 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:04:36.893 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:04:36.894 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:04:37.023 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:04:37.023 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6750 ms
18:04:37.553 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:04:37.828 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:04:37.932 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:04:37.995 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:04:38.408 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:04:38.469 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:04:40.358 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@70f5f57d
18:04:40.362 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:04:40.621 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:04:42.738 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:04:46.800 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:04:47.540 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:04:49.542 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:04:49.543 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:04:50.283 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:04:50.605 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:04:50.684 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:04:51.740 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:04:51.971 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1fbb7b9b, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@579e065f, org.springframework.security.web.context.SecurityContextHolderFilter@38807c9d, org.springframework.security.web.header.HeaderWriterFilter@22f6ff13, org.springframework.web.filter.CorsFilter@2ddc896a, org.springframework.security.web.csrf.CsrfFilter@7acf7bcf, org.springframework.security.web.authentication.logout.LogoutFilter@6e8fc7a3, ru.anapa.autorent.config.JwtRequestFilter@6d420cdd, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3e187145, org.springframework.security.web.session.ConcurrentSessionFilter@70587c0c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49e49cac, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@55cd9734, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37c34207, org.springframework.security.web.session.SessionManagementFilter@2410721, org.springframework.security.web.access.ExceptionTranslationFilter@169c7543, org.springframework.security.web.access.intercept.AuthorizationFilter@1047924]
18:04:52.727 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:04:52.750 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:04:52.782 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 23.975 seconds (process running for 25.712)
18:04:52.861 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:04:52.861 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:04:53.003 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:04:53.156 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:04:53.193 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:04:53.277 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:53.421 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:04:53.533 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:53.634 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:04:53.766 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:04:53.816 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:04:53.869 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:04:53.967 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:04:55.256 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:55.360 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:56.075 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:04:57.081 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:57.196 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:04:57.739 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:04:57.740 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:04:57.740 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:04:57.740 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:04:57.740 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:04:57.740 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:04:57.740 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:04:57.741 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:04:57.921 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:04:58.128 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:04:58.328 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:04:58.544 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:04:58.737 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:04:58.947 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:04:59.146 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:04:59.758 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:04:59.959 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:05:00.359 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:05:00.465 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:05:00.575 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:00.682 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:05:00.689 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:05:00.690 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:05:00.891 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:05:00.995 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:01.103 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:01.211 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:01.316 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:01.419 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:01.824 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:05:01.833 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:05:01.835 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:05:01.835 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:05:01.835 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:05:01.836 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:05:01.859 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:05:01.969 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:05:02.072 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:05:02.072 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:05:02.072 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:05:02.072 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:05:02.073 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:05:02.073 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:05:02.074 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:05:02.075 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:05:02.075 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:05:02.075 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:05:02.075 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:05:02.082 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:05:02.183 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:05:02.183 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:05:02.184 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:05:02.187 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:05:02.287 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:05:02.287 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:05:02.292 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:05:02.395 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:05:02.396 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:05:03.287 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:05:03.287 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:05:03.290 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
18:05:03.309 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:05:03.348 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:03.359 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:05:03.405 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:05:03.451 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:05:03.743 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:04.141 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:05:04.244 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:04.343 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:04.449 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:05:04.547 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:04.649 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:05.301 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:05.302 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:05.305 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:05.305 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:05.356 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:05.356 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:11.448 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:05:11.469 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:11.472 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:05:11.476 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:05:11.478 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:05:11.774 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:12.168 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:05:12.269 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:12.370 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:12.487 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:05:12.588 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:12.688 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:05:12.862 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:12.862 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:12.867 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:12.867 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:12.881 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:12.883 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:05:22.680 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:05:22.688 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:22.742 [http-nio-8080-exec-7] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:05:22.785 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:05:22.796 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:22.799 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:05:22.807 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:05:22.941 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:05:22.948 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.145 [http-nio-8080-exec-3] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [183] milliseconds.
18:05:23.153 [http-nio-8080-exec-3] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/payments/rental/53?continue to session
18:05:23.154 [http-nio-8080-exec-3] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:05:23.190 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:05:23.201 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.203 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:05:23.206 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Login page requested
18:05:23.322 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:23.324 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.326 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:23.348 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:23.350 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.351 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:23.463 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:05:23.468 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.475 [http-nio-8080-exec-9] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:05:23.496 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:05:23.499 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.501 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:05:23.504 [http-nio-8080-exec-10] INFO  r.a.a.controller.AuthController - Login page requested
18:05:23.546 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:05:23.549 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.553 [http-nio-8080-exec-7] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:05:23.567 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:05:23.580 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:05:23.582 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:05:23.586 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:05:32.174 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:05:32.480 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:05:32.483 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:05:32.582 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:32.693 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:05:32.714 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:05:33.119 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:05:33.120 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 11FE9A3C0D9E29C34A4D7998230321A0
18:05:33.121 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session BC47431005957B81A2E47E98B66F836F, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:05:33.122 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:05:33.123 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@573b6bef]
18:05:33.123 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]
18:05:33.130 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:05:33.130 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:33.131 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:05:33.131 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:05:33.133 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:05:33.332 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:05:33.621 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:05:33.626 [http-nio-8080-exec-5] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/auth/login
18:05:33.632 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:05:33.634 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:05:33.637 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Login page requested
18:05:33.637 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Admin login required message detected in session
18:05:33.644 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:33.662 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:33.662 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:33.664 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:33.665 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:33.668 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:33.672 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:33.922 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:05:34.312 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:05:34.412 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:05:34.512 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:05:34.805 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:05:34.905 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:35.006 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:35.112 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:35.210 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:35.610 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:05:35.710 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:35.810 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:35.916 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:05:37.585 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
18:05:37.586 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
18:05:37.593 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
18:05:37.801 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
18:05:37.906 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
18:05:38.013 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
18:05:38.129 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:05:39.574 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:05:39.864 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:05:40.003 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:40.209 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:40.415 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:40.618 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:40.814 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:40.917 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.018 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.119 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.218 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.318 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.418 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.519 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:41.619 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:42.211 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:05:42.310 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:42.411 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:42.516 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:42.616 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:43.021 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:43.045 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:43.046 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:43.048 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:43.048 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:43.055 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:43.056 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:43.066 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:05:43.067 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:05:43.071 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:05:43.071 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:05:43.081 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:05:43.081 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:05:43.311 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:43.426 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:43.736 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:43.846 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:47.086 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
18:05:47.087 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:47.088 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
18:05:47.090 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:05:47.091 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:05:47.092 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
18:05:47.096 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:05:47.295 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:47.600 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:05:47.700 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:47.799 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:47.905 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:05:49.209 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 1 rentals for user admin@example.com
18:05:49.210 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 57, Status: ACTIVE
18:05:49.211 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
18:05:49.211 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 1 active rentals
18:05:49.211 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Active Rental ID: 57, Status: ACTIVE
18:05:49.212 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 0 history rentals
18:05:49.312 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:05:49.410 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:49.902 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:05:50.002 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:50.106 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:05:50.690 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:51.084 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:05:51.185 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:51.339 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:05:51.339 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:51.339 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:51.342 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:51.342 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:05:51.342 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:51.349 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:05:51.351 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:51.353 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:51.788 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:05:51.904 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:56.739 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/payments
18:05:56.741 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:56.742 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/payments
18:05:56.743 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
18:05:56.745 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:05:56.942 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:05:57.240 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id 
    where
        r1_0.user_id=? 
        and r1_0.status='ACTIVE' 
    order by
        r1_0.created_at desc
18:05:58.443 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:58.836 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    left join
        rentals r1_0 
            on r1_0.id=dp1_0.rental_id 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    join
        accounts a1_0 
            on a1_0.id=dp1_0.account_id 
    where
        a1_0.user_id=? 
    order by
        dp1_0.payment_date desc
18:05:58.936 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:05:59.042 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:05:59.142 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:05:59.285 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:05:59.287 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:05:59.288 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:05:59.290 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:05:59.299 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:05:59.303 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:06.357 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:06:06.359 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:06.360 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:06:06.361 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:06:06.362 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:06:06.654 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:06:07.232 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:06:07.625 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:06:07.725 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:06:07.826 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:06:08.117 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:06:08.217 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:08.315 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:08.417 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:08.515 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:08.903 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:06:09.002 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:09.101 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:09.204 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:06:09.332 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:09.332 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:06:09.334 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:06:09.335 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:09.340 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:09.342 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:11.322 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:06:11.324 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:11.325 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:06:11.326 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:06:11.328 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:06:11.332 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:06:11.532 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:11.631 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:11.730 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:11.830 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:11.967 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:11.967 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:06:11.969 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:11.969 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:06:11.974 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:11.975 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:16.064 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:06:16.065 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:16.065 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:06:16.066 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:06:16.067 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:06:16.366 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:16.768 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:06:16.866 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:06:16.968 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:17.071 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:06:17.168 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:06:17.268 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:17.393 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:06:17.393 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:17.396 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:06:17.396 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:17.405 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:17.405 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:51.903 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
18:06:51.905 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:51.905 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
18:06:51.908 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:06:51.910 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:06:52.206 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
18:06:52.307 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:52.407 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:52.505 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:06:52.604 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:06:52.710 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
18:06:53.138 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:53.138 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:06:53.140 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:53.140 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:06:53.148 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:53.152 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:54.909 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
18:06:54.910 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:54.911 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
18:06:54.912 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:06:54.913 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:06:55.204 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:55.603 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:06:55.704 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:06:55.806 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:55.912 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:06:56.013 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:06:56.114 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:06:56.368 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:06:56.369 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:56.370 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:06:56.372 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:56.377 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:56.381 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:06:56.493 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:06:56.496 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:06:56.502 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:01.238 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
18:07:01.239 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:01.241 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
18:07:01.242 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:07:01.243 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:07:01.541 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
18:07:01.639 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:07:01.738 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:07:01.838 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:07:01.936 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:07:02.038 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
18:07:02.454 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:07:02.454 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:07:02.458 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:07:02.458 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:07:02.466 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:02.467 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:06.132 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/54
18:07:06.134 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:06.135 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/54
18:07:06.136 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:07:06.136 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:07:06.427 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:07:06.821 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:07:06.920 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:07:07.019 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:07:07.122 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:07:07.221 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:07:07.322 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:07:07.452 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:07:07.453 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:07:07.456 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:07:07.456 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:07:07.463 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:07.463 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:07:07.478 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:07:07.480 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:07:07.482 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:09:03.423 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:09:03.427 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:09:04.078 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:09:07.262 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:09:07.486 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 5492 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:09:07.487 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:09:07.488 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:09:09.979 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:09:10.154 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165 ms. Found 15 JPA repository interfaces.
18:09:12.012 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:09:12.043 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:09:12.049 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:09:12.050 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:09:12.165 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:09:12.166 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4469 ms
18:09:12.649 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:09:12.940 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:09:13.063 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:09:13.145 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:09:13.616 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:09:13.656 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:09:16.982 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@691eb389
18:09:16.986 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:09:17.339 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:09:19.680 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:09:25.894 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:09:26.890 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:09:28.511 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:09:28.512 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:09:29.039 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:09:29.337 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:09:29.413 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:09:30.315 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:09:30.507 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@256b48b2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c80bcd9, org.springframework.security.web.context.SecurityContextHolderFilter@188467fe, org.springframework.security.web.header.HeaderWriterFilter@7030c643, org.springframework.web.filter.CorsFilter@5cc45237, org.springframework.security.web.csrf.CsrfFilter@4c199b8e, org.springframework.security.web.authentication.logout.LogoutFilter@251f9216, ru.anapa.autorent.config.JwtRequestFilter@bd273b2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@17416a79, org.springframework.security.web.session.ConcurrentSessionFilter@22f6ff13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70587c0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38d6ad53, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13d1ca89, org.springframework.security.web.session.SessionManagementFilter@581b72a5, org.springframework.security.web.access.ExceptionTranslationFilter@145f5e4c, org.springframework.security.web.access.intercept.AuthorizationFilter@34cd7055]
18:09:32.314 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:09:32.430 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:09:32.578 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 25.898 seconds (process running for 26.981)
18:09:33.072 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:09:33.452 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:09:33.453 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:09:33.589 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:09:33.618 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:33.712 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:09:33.834 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:09:33.892 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:09:34.007 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:09:34.027 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:34.139 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:09:34.168 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:09:34.246 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:09:34.315 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:09:34.454 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:09:34.571 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:09:34.589 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:09:34.816 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:09:35.224 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:09:35.493 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:09:35.619 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:09:35.730 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:09:35.731 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:09:35.733 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:09:35.941 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:09:36.548 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:09:37.945 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:38.088 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:39.122 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:09:40.274 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:40.448 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:09:41.162 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:09:41.162 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:09:41.163 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:09:41.163 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:09:41.163 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:09:41.164 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:09:41.164 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:09:41.164 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:09:41.166 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:09:41.166 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:09:41.467 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:09:41.670 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:09:41.874 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:41.994 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:42.108 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:09:42.286 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:42.790 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:09:42.797 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:09:42.798 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:09:42.798 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:09:42.798 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:09:42.798 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:09:42.814 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:09:42.920 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:09:43.024 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:09:43.025 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:09:43.026 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:09:43.026 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:09:43.027 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:09:43.029 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:09:43.030 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:09:43.034 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:09:43.037 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:09:43.037 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:09:43.038 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:09:43.053 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:09:43.159 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:09:43.160 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:09:43.161 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:09:43.166 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:09:43.269 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:09:43.270 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:09:43.288 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:09:43.393 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:09:43.394 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:09:51.126 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:09:51.127 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:09:51.137 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 8 ms
18:09:51.307 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/54
18:09:51.470 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:09:51.523 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/54
18:09:51.786 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:09:52.054 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:09:52.550 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:53.242 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:09:53.385 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:09:53.643 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:53.817 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:09:53.960 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:09:54.154 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:09:56.462 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:09:56.462 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:09:56.470 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:09:56.470 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:09:56.538 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:09:56.538 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:09:56.686 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:09:56.715 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:09:56.739 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:06.848 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
18:10:06.866 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:06.868 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
18:10:06.874 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:06.876 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:07.443 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:08.081 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:08.283 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:08.491 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:08.691 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:08.898 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:09.107 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:09.320 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:09.321 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:10:09.326 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:10:09.326 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:09.350 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:09.350 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:14.269 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
18:10:14.275 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:14.277 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
18:10:14.288 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:14.307 [http-nio-8080-exec-10] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:14.920 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
18:10:15.144 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:10:15.351 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:10:15.559 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:10:15.760 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:10:15.984 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
18:10:16.879 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:10:16.879 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:16.883 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:10:16.885 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:16.895 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:16.896 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:20.495 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
18:10:20.513 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:20.518 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
18:10:20.532 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:20.534 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:10:20.952 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:21.683 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:21.822 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:21.968 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:22.122 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:22.312 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:22.460 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:22.684 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:22.684 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:10:22.690 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:22.690 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:10:22.705 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:22.705 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:22.750 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:22.755 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:22.766 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:25.996 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:10:26.000 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:26.002 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:10:26.005 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:10:26.007 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:10:26.029 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:10:26.300 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:10:26.444 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:10:26.590 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:10:26.819 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:10:27.043 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:10:27.043 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:27.053 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:10:27.053 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:27.070 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:27.075 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:30.950 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:10:30.954 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:30.956 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:10:30.964 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:10:30.972 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:10:31.597 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:32.349 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:32.495 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:32.658 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:32.868 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:10:33.008 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:10:33.142 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:10:33.438 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:10:33.438 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:10:33.443 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:10:33.443 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:10:33.457 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:10:33.457 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:11:09.463 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:11:09.468 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:11:09.479 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:11:09.481 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:11:09.483 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:11:09.485 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:11:09.505 [http-nio-8080-exec-2] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:14:52.952 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:14:52.959 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:14:53.553 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:15:01.573 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:15:01.751 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 17700 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:15:01.753 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:15:01.755 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:15:04.747 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:15:04.992 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 229 ms. Found 15 JPA repository interfaces.
18:15:07.624 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:15:07.685 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:15:07.695 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:15:07.698 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:15:08.238 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:15:08.240 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6343 ms
18:15:09.932 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:15:10.957 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:15:11.299 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:15:11.626 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:15:13.097 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:15:13.350 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:15:16.726 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@45753c22
18:15:16.737 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:15:17.147 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:15:23.477 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:15:27.648 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:15:30.510 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:15:34.687 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:15:34.688 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:15:35.216 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:15:35.449 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:15:35.510 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:15:36.473 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:15:36.664 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@256b48b2, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7c80bcd9, org.springframework.security.web.context.SecurityContextHolderFilter@188467fe, org.springframework.security.web.header.HeaderWriterFilter@7030c643, org.springframework.web.filter.CorsFilter@5cc45237, org.springframework.security.web.csrf.CsrfFilter@4c199b8e, org.springframework.security.web.authentication.logout.LogoutFilter@251f9216, ru.anapa.autorent.config.JwtRequestFilter@23f5008a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@17416a79, org.springframework.security.web.session.ConcurrentSessionFilter@22f6ff13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@70587c0c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@38d6ad53, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@13d1ca89, org.springframework.security.web.session.SessionManagementFilter@581b72a5, org.springframework.security.web.access.ExceptionTranslationFilter@145f5e4c, org.springframework.security.web.access.intercept.AuthorizationFilter@34cd7055]
18:15:37.451 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:15:37.514 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:15:37.566 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 36.75 seconds (process running for 38.139)
18:15:37.794 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:15:38.015 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:15:38.015 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:15:38.128 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:38.137 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:15:38.256 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:15:38.265 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:15:38.380 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:38.395 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:15:38.477 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:15:38.492 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:15:38.585 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:15:38.593 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:15:38.682 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:15:38.688 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:15:38.776 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:15:38.974 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:15:39.176 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:15:39.552 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:15:39.619 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:15:39.721 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:15:39.822 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:15:39.823 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:15:39.823 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:15:40.013 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:15:40.579 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:15:41.775 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:41.912 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:42.742 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:15:44.001 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:44.168 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:15:44.908 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:15:44.908 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:15:44.909 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:15:44.909 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:15:44.909 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:15:44.909 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:15:44.909 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:15:44.909 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:15:44.911 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:15:44.912 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:15:45.295 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:15:45.497 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:15:45.705 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:15:45.915 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:15:46.114 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:15:46.319 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:15:46.911 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:15:46.913 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:15:46.914 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:15:46.914 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:15:46.914 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:15:46.914 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:15:46.922 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:15:47.021 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:15:47.117 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:15:47.117 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:15:47.117 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:15:47.118 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:15:47.118 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:15:47.118 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:15:47.118 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:15:47.119 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:15:47.120 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:15:47.120 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:15:47.120 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:15:47.128 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:15:47.223 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:15:47.224 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:15:47.224 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:15:47.225 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:15:47.320 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:15:47.321 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:15:47.323 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:15:47.422 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:15:47.422 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:16:46.862 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:16:46.862 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:16:46.864 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
18:16:46.891 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:16:46.921 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:16:46.926 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:16:46.959 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:16:46.988 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:16:47.270 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:16:47.656 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:16:47.751 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:16:47.850 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:16:48.553 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:16:48.652 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:16:48.748 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:16:49.565 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:16:49.572 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:16:49.576 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:16:49.580 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:16:49.620 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:16:49.623 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:16:49.624 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:16:49.632 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:16:49.632 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:16:49.645 [http-nio-8080-exec-5] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:17:07.748 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:17:07.751 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:07.752 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:17:07.753 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:07.754 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:07.757 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:17:07.949 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:17:08.067 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:17:08.167 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:17:08.264 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:17:08.417 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:17:08.417 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:17:08.421 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:17:08.422 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:17:08.435 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:08.435 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:08.448 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:17:08.449 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:08.451 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:17:08.486 [http-nio-8080-exec-8] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:17:16.167 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/54
18:17:16.169 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:16.171 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/54
18:17:16.175 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:16.176 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:16.457 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:16.841 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:17:16.936 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:17:17.034 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:17.136 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:17:17.231 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:17:17.334 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:17.479 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:17:17.480 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:17:17.483 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:17:17.485 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:17:17.495 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:17.499 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:17.533 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:17:17.539 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:17.541 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:17:17.547 [http-nio-8080-exec-2] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:17:22.423 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:17:22.430 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:22.431 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:17:22.432 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:22.432 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:22.434 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:17:22.622 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:17:22.719 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:17:22.817 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:17:22.912 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:17:23.052 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:17:23.055 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:17:23.058 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:17:23.061 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:17:23.071 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:23.072 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:23.096 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:17:23.105 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:23.106 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:17:23.111 [http-nio-8080-exec-6] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:17:28.673 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/57
18:17:28.675 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:28.676 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/57
18:17:28.677 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:28.678 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:17:28.968 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:29.345 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:17:29.442 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:17:29.541 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:29.646 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:17:29.742 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:17:29.842 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:17:30.007 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:17:30.009 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:17:30.014 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:17:30.014 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:17:30.028 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:30.036 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:30.065 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:17:30.072 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:17:30.074 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:17:30.082 [http-nio-8080-exec-10] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:20:29.610 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:20:29.613 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:20:30.237 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:20:33.485 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:20:33.581 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 11056 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:20:33.582 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:20:33.583 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:20:35.937 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:20:36.182 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 229 ms. Found 15 JPA repository interfaces.
18:20:38.023 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:20:38.051 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:20:38.063 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:20:38.063 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:20:38.178 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:20:38.178 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4505 ms
18:20:38.706 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:20:38.967 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:20:39.056 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:20:39.138 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:20:39.479 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:20:39.549 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:20:42.660 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@31a4db4f
18:20:42.665 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:20:43.006 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:20:44.955 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:20:51.874 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:20:52.597 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:20:54.217 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:20:54.218 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:20:54.740 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:20:54.979 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:20:55.061 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:20:56.154 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:20:56.341 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ce58f84, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@17416a79, org.springframework.security.web.context.SecurityContextHolderFilter@65370117, org.springframework.security.web.header.HeaderWriterFilter@158f9814, org.springframework.web.filter.CorsFilter@48d1ff1c, org.springframework.security.web.csrf.CsrfFilter@5bd62f9d, org.springframework.security.web.authentication.logout.LogoutFilter@55cd9734, ru.anapa.autorent.config.JwtRequestFilter@65a48cab, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@185f2926, org.springframework.security.web.session.ConcurrentSessionFilter@5c85429c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@169a28e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d77a5e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@620572f1, org.springframework.security.web.session.SessionManagementFilter@3376b5ca, org.springframework.security.web.access.ExceptionTranslationFilter@58d450b7, org.springframework.security.web.access.intercept.AuthorizationFilter@77136cf3]
18:20:57.066 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:20:57.085 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:20:57.119 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 24.171 seconds (process running for 25.167)
18:20:57.449 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:20:57.542 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:20:57.553 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:20:57.721 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:20:57.895 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:20:57.920 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:20:57.968 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:20:58.065 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:20:58.077 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:20:58.172 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:20:58.222 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:20:58.279 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:20:58.389 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:20:58.397 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:20:58.487 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:20:58.556 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:20:58.596 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:20:58.697 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:20:58.697 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:20:58.802 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:20:58.901 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:20:59.180 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:20:59.180 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:20:59.181 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:20:59.367 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:20:59.918 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:21:01.348 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:21:01.443 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:21:02.021 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:21:02.754 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:21:02.860 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:21:03.263 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:21:03.264 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:21:03.264 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:21:03.264 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:21:03.265 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:21:03.265 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:21:03.265 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:21:03.265 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:21:03.267 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:21:03.268 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:21:03.473 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:21:03.577 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:21:03.682 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:03.867 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:04.059 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:21:04.264 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:04.674 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:21:04.678 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:21:04.679 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:21:04.679 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:21:04.679 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:21:04.679 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:21:04.689 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:21:04.794 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:21:04.896 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:21:04.897 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:21:04.897 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:21:04.897 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:21:04.898 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:21:04.898 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:21:04.899 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:21:04.900 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:21:04.901 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:21:04.901 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:21:04.901 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:21:04.909 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:21:05.014 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:21:05.014 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:21:05.015 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:21:05.017 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:21:05.119 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:21:05.119 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:21:05.123 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:21:05.224 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:21:05.224 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:21:05.607 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:21:05.607 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:21:05.608 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
18:21:05.629 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/57
18:21:05.644 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:21:05.649 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/57
18:21:05.673 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:21:05.705 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:21:06.123 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:06.812 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:21:07.027 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:21:07.173 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:07.357 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:21:07.589 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:21:07.762 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:21:10.329 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:21:10.329 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:21:10.341 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:21:10.341 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:21:10.348 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:21:10.355 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:21:10.357 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:21:10.441 [http-nio-8080-exec-3] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:21:10.482 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:21:10.482 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=11FE9A3C0D9E29C34A4D7998230321A0], Granted Authorities=[ROLE_ADMIN]]]
18:23:44.223 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/57
18:23:44.227 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.336 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:23:44.346 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.361 [http-nio-8080-exec-9] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:23:44.412 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:23:44.416 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.418 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:23:44.421 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:23:44.424 [http-nio-8080-exec-8] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [172] milliseconds.
18:23:44.432 [http-nio-8080-exec-8] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/payments/rental/57?continue to session
18:23:44.433 [http-nio-8080-exec-8] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:23:44.513 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:23:44.517 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.523 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:23:44.528 [http-nio-8080-exec-3] INFO  r.a.a.controller.AuthController - Login page requested
18:23:44.596 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:23:44.599 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.601 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:23:44.625 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:23:44.644 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.657 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:23:44.852 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:23:44.864 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.868 [http-nio-8080-exec-4] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:23:44.878 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:23:44.882 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.884 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:23:44.886 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - Login page requested
18:23:44.916 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:23:44.919 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.921 [http-nio-8080-exec-10] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:23:44.936 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:23:44.940 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:44.944 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:23:44.945 [http-nio-8080-exec-6] INFO  r.a.a.controller.AuthController - Login page requested
18:23:57.097 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:23:57.624 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:23:57.633 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:23:57.763 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:23:57.958 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:23:58.040 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:23:58.680 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:23:58.854 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:23:58.859 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:23:58.867 [http-nio-8080-exec-8] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:23:58.872 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from FA7E6591FF698D0058C41998C4B1CEED
18:23:58.873 [http-nio-8080-exec-8] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 1A5243CBAE0BBA77ACFC91C88A0D485E, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:23:58.877 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:23:58.879 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=FA7E6591FF698D0058C41998C4B1CEED], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@722c8ba8]
18:23:58.879 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=FA7E6591FF698D0058C41998C4B1CEED], Granted Authorities=[ROLE_ADMIN]]
18:23:59.022 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:23:59.172 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:23:59.175 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:23:59.928 [http-nio-8080-exec-1] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:23:59.930 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Removing session 1A5243CBAE0BBA77ACFC91C88A0D485E from principal's set of registered sessions
18:23:59.931 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Removing principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]] from registry
18:23:59.933 [http-nio-8080-exec-1] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 1A5243CBAE0BBA77ACFC91C88A0D485E, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:23:59.934 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:23:59.934 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=FA7E6591FF698D0058C41998C4B1CEED], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@722c8ba8]
18:23:59.935 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=FA7E6591FF698D0058C41998C4B1CEED], Granted Authorities=[ROLE_ADMIN]]
18:23:59.954 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:23:59.961 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:23:59.961 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id FA7E6591FF698D0058C41998C4B1CEED
18:23:59.979 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/dashboard?continue to session
18:23:59.980 [http-nio-8080-exec-2] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:23:59.996 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:24:00.002 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:24:00.003 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:24:00.009 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:24:00.042 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:24:00.042 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:24:00.045 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:24:00.045 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:24:00.046 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:24:00.046 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:24:03.680 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:24:04.076 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:24:04.084 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:24:04.283 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:24:04.489 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:24:04.491 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:24:05.314 [http-nio-8080-exec-7] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:24:05.318 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from D3DD741F801A037FFC9B2A3C9B8612EC
18:24:05.320 [http-nio-8080-exec-7] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 386BC6448D6DBB13E52379D4150A8584, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:24:05.321 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:24:05.322 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@51dd0c8f]
18:24:05.322 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]
18:24:05.332 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:24:05.333 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:05.334 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:24:05.336 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:24:05.338 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:24:05.722 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:24:06.846 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:24:07.609 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:24:07.766 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:24:07.971 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:24:08.438 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:24:08.685 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:08.892 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:09.108 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:09.257 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:10.022 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:24:10.222 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:10.505 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:10.752 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:24:11.031 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:24:11.033 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:24:11.037 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:24:11.039 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:24:11.060 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:11.061 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:14.750 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
18:24:14.754 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:14.756 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
18:24:14.762 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:24:14.765 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:24:15.347 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
18:24:15.546 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:15.749 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:15.895 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:16.060 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:16.274 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
18:24:16.982 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:24:16.984 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:24:16.986 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:24:16.987 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:24:16.999 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:17.001 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:19.021 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:24:19.024 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:19.025 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:24:19.028 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:24:19.030 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:24:19.039 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:24:19.436 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:19.643 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:19.849 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:24:20.054 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:24:20.296 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:24:20.296 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:24:20.299 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:24:20.300 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:24:20.311 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:20.312 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:23.313 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/54
18:24:23.317 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:23.319 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/54
18:24:23.322 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:24:23.324 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:24:23.915 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:24:24.767 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:24:24.968 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:24:25.173 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:24:25.381 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:24:25.582 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:24:25.786 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:24:26.028 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:24:26.028 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:24:26.031 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:24:26.031 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:24:26.047 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:24:26.053 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=D3DD741F801A037FFC9B2A3C9B8612EC], Granted Authorities=[ROLE_ADMIN]]]
18:26:48.358 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:26:48.370 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:26:48.989 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:26:59.023 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:26:59.180 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 10068 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:26:59.181 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:26:59.183 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:27:01.581 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:27:01.865 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 266 ms. Found 15 JPA repository interfaces.
18:27:05.078 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:27:05.112 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:27:05.120 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:27:05.121 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:27:05.353 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:27:05.355 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6076 ms
18:27:06.022 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:27:06.303 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:27:06.435 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:27:06.524 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:27:07.131 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:27:07.209 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:27:09.238 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@14ba7f15
18:27:09.245 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:27:09.505 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:27:12.039 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:27:15.859 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:27:16.721 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:27:18.576 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:27:18.576 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:27:19.209 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:27:19.458 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:27:19.530 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:27:20.729 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:27:21.004 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1cbc3d6e, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7794503a, org.springframework.security.web.context.SecurityContextHolderFilter@1bba2e62, org.springframework.security.web.header.HeaderWriterFilter@6783409c, org.springframework.web.filter.CorsFilter@32aca0cd, org.springframework.security.web.csrf.CsrfFilter@48043d64, org.springframework.security.web.authentication.logout.LogoutFilter@31fc8c5e, ru.anapa.autorent.config.JwtRequestFilter@15f861ee, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@50fa8c92, org.springframework.security.web.session.ConcurrentSessionFilter@3a5b429, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@116c6746, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a18b490, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4085420c, org.springframework.security.web.session.SessionManagementFilter@7de998e8, org.springframework.security.web.access.ExceptionTranslationFilter@49d5a547, org.springframework.security.web.access.intercept.AuthorizationFilter@1d7e6380]
18:27:22.005 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:27:22.037 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:27:22.082 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 23.703 seconds (process running for 26.021)
18:27:22.312 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:27:22.596 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:27:22.596 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:27:22.739 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:27:22.754 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:22.904 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:27:22.952 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:23.047 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:27:23.062 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:23.138 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:23.160 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:23.246 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:27:23.265 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:27:23.339 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:23.367 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:27:23.463 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:27:23.622 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:27:23.815 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:27:24.169 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:27:24.215 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:27:24.314 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:27:24.412 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:27:24.412 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:27:24.412 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:27:24.595 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:27:25.127 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:27:26.479 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:26.574 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:27.153 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:27:27.777 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:27.885 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:28.288 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:27:28.288 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:27:28.289 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:27:28.289 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:27:28.289 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:27:28.289 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:27:28.290 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:27:28.290 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:27:28.292 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:27:28.292 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:27:28.493 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:27:28.597 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:27:28.701 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:27:28.810 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:27:28.917 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:27:29.094 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:27:29.497 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:27:29.501 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:27:29.501 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:27:29.501 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:27:29.501 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:27:29.502 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:27:29.512 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:27:29.614 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:27:29.715 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:27:29.716 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:27:29.716 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:27:29.716 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:27:29.716 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:27:29.718 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:27:29.718 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:27:29.719 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:27:29.719 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:27:29.719 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:27:29.719 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:27:29.728 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:27:29.831 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:27:29.832 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:27:29.832 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:27:29.837 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:27:29.936 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:27:29.937 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:27:29.942 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:27:30.050 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:27:30.051 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:27:30.353 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:27:30.353 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:27:30.355 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
18:27:30.392 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/54
18:27:30.430 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:27:30.431 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 386BC6448D6DBB13E52379D4150A8584
18:27:30.517 [http-nio-8080-exec-2] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/payments/rental/54?continue to session
18:27:30.520 [http-nio-8080-exec-2] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:27:30.531 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:27:30.534 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:27:30.539 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:27:30.576 [http-nio-8080-exec-3] INFO  r.a.a.controller.AuthController - Login page requested
18:27:31.271 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:27:31.271 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:27:31.272 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:27:31.274 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:27:31.274 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:27:31.276 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:27:33.277 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:27:34.017 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:27:34.021 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:27:34.116 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:27:34.249 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:27:34.352 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:27:34.861 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:27:34.867 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from A49E93E5A7437CEC425863E0737AAD7F
18:27:34.870 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 723D4749111FCD3BA3A239D381BEB8E5, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:27:34.891 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:27:34.895 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@7d16cd2a]
18:27:34.895 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]
18:27:34.953 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:27:34.962 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:34.964 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:27:34.971 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:27:35.017 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:27:35.217 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:27:35.778 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:27:36.194 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:27:36.298 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:27:36.397 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:27:36.683 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:27:36.780 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:36.878 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:36.990 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:37.086 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:37.502 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:27:37.599 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:37.696 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:37.827 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:27:38.193 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:27:38.193 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:27:38.200 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:27:38.199 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:27:38.215 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:38.216 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:43.825 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/51
18:27:43.846 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:43.849 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/51
18:27:43.868 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:27:43.870 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:27:44.166 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:27:44.548 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:27:44.656 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:27:44.881 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:27:44.881 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:27:44.886 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:27:44.886 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:27:44.905 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:44.911 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:44.977 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:27:44.982 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:27:44.995 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:56.036 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:27:56.043 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:56.044 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:27:56.049 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:27:56.052 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:27:56.059 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:27:56.248 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:56.351 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:56.459 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:27:56.561 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:27:56.754 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:27:56.753 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:27:56.760 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:27:56.760 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:27:56.774 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:56.776 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:59.808 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:27:59.821 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:27:59.823 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:27:59.827 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:27:59.829 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:28:00.111 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:28:00.500 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:28:00.595 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:28:00.693 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:28:00.805 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:28:00.907 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:28:01.004 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:28:01.176 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:28:01.177 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:28:01.184 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:28:01.184 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:28:01.208 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:28:01.211 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=A49E93E5A7437CEC425863E0737AAD7F], Granted Authorities=[ROLE_ADMIN]]]
18:32:18.552 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:32:18.566 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:32:19.195 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:32:28.973 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:32:29.049 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 2272 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:32:29.050 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:32:29.051 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:32:31.597 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:32:31.867 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 228 ms. Found 15 JPA repository interfaces.
18:32:33.759 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:32:33.775 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:32:33.782 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:32:33.783 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:32:33.899 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:32:33.900 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4778 ms
18:32:34.377 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:32:34.633 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:32:34.759 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:32:34.815 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:32:35.224 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:32:35.283 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:32:37.243 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7d43f1c9
18:32:37.246 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:32:37.508 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:32:39.704 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:32:43.638 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:32:44.351 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:32:46.044 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:32:46.044 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:32:46.524 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:32:46.796 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:32:46.869 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:32:47.898 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:32:48.083 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1ce4a0d, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5364367c, org.springframework.security.web.context.SecurityContextHolderFilter@2c716cd0, org.springframework.security.web.header.HeaderWriterFilter@253fefea, org.springframework.web.filter.CorsFilter@42a289ce, org.springframework.security.web.csrf.CsrfFilter@4efccfc7, org.springframework.security.web.authentication.logout.LogoutFilter@4bd8491e, ru.anapa.autorent.config.JwtRequestFilter@67e6eb52, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@76f99d4a, org.springframework.security.web.session.ConcurrentSessionFilter@58d450b7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7fab829a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f99a0a7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@260069b5, org.springframework.security.web.session.SessionManagementFilter@5dcd0fe, org.springframework.security.web.access.ExceptionTranslationFilter@f4e74b0, org.springframework.security.web.access.intercept.AuthorizationFilter@6a280ef2]
18:32:48.782 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:32:48.829 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:32:48.862 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 20.356 seconds (process running for 21.387)
18:32:48.982 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:32:48.982 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:32:49.126 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:32:49.327 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:32:49.442 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:32:49.456 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:49.576 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:32:49.684 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:49.783 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:32:49.916 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:32:50.021 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:32:50.118 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:32:50.266 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:32:53.494 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:53.696 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:54.822 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:32:58.027 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:58.210 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:32:59.027 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:32:59.027 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:32:59.028 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:32:59.028 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:32:59.028 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:32:59.028 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:32:59.028 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:32:59.028 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:32:59.234 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:32:59.446 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:32:59.644 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:32:59.849 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:32:59.987 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:00.137 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:33:00.296 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:00.726 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:33:01.066 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:33:01.822 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:33:01.870 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:33:02.023 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:33:02.196 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:33:02.198 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:33:02.198 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:33:02.535 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:33:02.677 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:02.824 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:02.979 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:03.140 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:03.305 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:04.036 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:33:04.039 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:33:04.040 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:33:04.040 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:33:04.040 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:33:04.040 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:33:04.052 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:33:04.243 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:33:04.445 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:33:04.445 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:33:04.445 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:33:04.445 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:33:04.445 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:33:04.446 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:33:04.446 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:33:04.447 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:33:04.447 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:33:04.447 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:33:04.447 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:33:04.451 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:33:04.650 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:33:04.650 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:33:04.650 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:33:04.653 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:33:04.855 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:33:04.855 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:33:04.859 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:33:05.060 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:33:05.061 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:33:12.846 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:33:12.846 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:33:12.848 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
18:33:12.929 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:33:12.963 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:33:12.964 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.SessionManagementFilter - Request requested invalid session id 723D4749111FCD3BA3A239D381BEB8E5
18:33:13.051 [http-nio-8080-exec-1] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/payments/rental/53?continue to session
18:33:13.052 [http-nio-8080-exec-1] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:33:13.068 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:33:13.071 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:33:13.075 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:33:13.124 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:33:13.831 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:13.831 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:13.834 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:33:13.834 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:33:13.835 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:13.836 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:15.758 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:33:16.224 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:33:16.228 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:33:16.326 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:33:16.457 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:33:16.521 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:33:17.044 [http-nio-8080-exec-5] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:33:17.050 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 84F7B89C317E7BF42110D5A0AFC8FB2F
18:33:17.052 [http-nio-8080-exec-5] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 383E5D0FA225E73387531E6A348869B9, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:33:17.087 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:33:17.090 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@1780d250]
18:33:17.091 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]
18:33:17.122 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:33:17.151 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:17.154 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:33:17.164 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:33:17.196 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:33:17.397 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:33:17.977 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:33:18.409 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:33:18.522 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:33:18.625 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:33:18.931 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:33:19.032 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:19.132 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:19.263 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:19.363 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:19.767 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:33:19.866 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:19.965 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:20.083 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:33:20.372 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:20.373 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:20.380 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:20.380 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:20.400 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:20.403 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:22.923 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/accounts
18:33:22.955 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:22.962 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/accounts
18:33:23.263 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0
18:33:23.366 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.471 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.575 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.677 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.783 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.884 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:23.986 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.090 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.195 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.299 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.403 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.511 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:24.614 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:25.089 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:25.090 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:25.097 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:25.097 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:25.116 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:25.119 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:26.045 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:33:26.058 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:26.061 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:33:26.068 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:33:26.078 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:33:26.087 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:33:26.283 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:26.381 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:26.481 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:26.583 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:26.778 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:26.779 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:26.783 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:26.784 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:26.797 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:26.797 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:30.396 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/54
18:33:30.402 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:30.404 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/54
18:33:30.410 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:33:30.412 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:33:30.708 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:31.176 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:33:31.274 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:31.374 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:31.487 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:33:31.589 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:31.690 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:31.909 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:31.910 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:31.917 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:31.917 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:31.930 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:31.933 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:39.405 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals
18:33:39.410 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:39.413 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals
18:33:39.428 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:33:39.431 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.listRentals(org.springframework.ui.Model,int,int,java.lang.String,java.lang.String); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:33:39.726 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.id desc 
    limit
        ?, ?
18:33:39.824 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:39.924 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:40.031 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:33:40.132 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:33:40.250 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0
18:33:40.733 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:40.738 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:40.742 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:40.757 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:40.788 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:40.789 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:45.071 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
18:33:45.077 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:45.078 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/rentals/57
18:33:45.081 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:33:45.086 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminRentalController.getRentalDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminRentalController]
18:33:45.375 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:45.768 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:33:45.867 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:45.968 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:46.096 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:33:46.196 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:33:46.302 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:33:46.527 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:46.528 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:33:46.533 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:46.533 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:33:46.549 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:46.549 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:33:46.604 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:33:46.608 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:33:46.624 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=84F7B89C317E7BF42110D5A0AFC8FB2F], Granted Authorities=[ROLE_ADMIN]]]
18:36:00.768 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/rentals/57
18:36:00.772 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:00.784 [http-nio-8080-exec-6] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/admin/rentals/57?continue to session
18:36:00.785 [http-nio-8080-exec-6] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:36:00.806 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:36:00.818 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:00.820 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:36:00.823 [http-nio-8080-exec-4] INFO  r.a.a.controller.AuthController - Login page requested
18:36:00.950 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:00.953 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:00.954 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:01.020 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:01.058 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:01.067 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:01.434 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:36:01.436 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:01.438 [http-nio-8080-exec-2] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:36:01.453 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:36:01.456 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:01.460 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:36:01.467 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Login page requested
18:36:01.534 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:36:01.550 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:01.566 [http-nio-8080-exec-7] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:36:01.573 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:36:01.583 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:01.585 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:36:01.586 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - Login page requested
18:36:02.406 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /favicon.ico
18:36:02.409 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:02.415 [http-nio-8080-exec-1] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:36:02.435 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:36:02.437 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:36:02.438 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:36:02.440 [http-nio-8080-exec-10] INFO  r.a.a.controller.AuthController - Login page requested
18:36:18.132 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:36:18.342 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:36:18.350 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:36:18.451 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:18.554 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:36:18.560 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:36:19.194 [http-nio-8080-exec-3] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:36:19.198 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.s.ChangeSessionIdAuthenticationStrategy - Changed session id from 2D5435A3A185864B5394D38382CBE0F9
18:36:19.198 [http-nio-8080-exec-3] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session ED05182073F08B4F2742CCFE6BFDB94D, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:36:19.199 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:36:19.199 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@69fbcf1a]
18:36:19.200 [http-nio-8080-exec-3] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]
18:36:19.213 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:36:19.217 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:19.218 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:36:19.220 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:36:19.222 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:36:19.418 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:36:19.991 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:36:20.386 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:36:20.495 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:36:20.594 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:36:20.641 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:36:20.648 [http-nio-8080-exec-2] DEBUG o.s.security.web.csrf.CsrfFilter - Invalid CSRF token found for http://localhost:8080/auth/login
18:36:20.667 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login
18:36:20.671 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login
18:36:20.674 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Login page requested
18:36:20.676 [http-nio-8080-exec-5] INFO  r.a.a.controller.AuthController - Admin login required message detected in session
18:36:20.695 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:20.725 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:20.725 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:20.729 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:20.730 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:20.742 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:20.743 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:20.887 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:36:20.985 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:21.083 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:21.205 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:21.308 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:21.704 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:36:21.801 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:21.900 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:22.010 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:36:24.961 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
18:36:24.967 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
18:36:24.982 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
18:36:25.190 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
18:36:25.295 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
18:36:25.398 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
18:36:25.525 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:36:27.918 [http-nio-8080-exec-1] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:36:28.120 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:36:28.222 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:28.334 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:28.435 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:28.540 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:28.737 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:28.941 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.045 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.152 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.259 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.369 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.471 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.570 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:29.671 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:36:30.269 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:36:30.368 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:30.467 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:30.574 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:30.676 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:31.105 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:31.173 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:31.173 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:31.188 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:31.188 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:31.251 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:31.258 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:31.290 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:36:31.292 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:36:31.297 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:36:31.309 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:36:31.316 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:36:31.317 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:36:31.534 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:31.668 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:32.600 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:32.849 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:35.040 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:36:35.050 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:35.051 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:36:35.055 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:36:35.063 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:36:35.361 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:36:35.945 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:36:36.403 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:36:36.510 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:36:36.616 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:36:36.914 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:36:37.013 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:37.114 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:37.239 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:37.345 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:37.745 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:36:37.844 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:37.947 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:38.063 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:36:38.213 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:38.214 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:38.220 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:38.220 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:38.245 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:38.245 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:40.820 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:36:40.829 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:40.831 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:36:40.833 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:40.835 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:40.845 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:36:41.043 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:41.068 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:36:41.078 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:41.079 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:36:41.083 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:41.086 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:41.103 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:36:41.149 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:41.254 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:41.360 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:41.385 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:41.529 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:41.746 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:36:41.917 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:36:42.202 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:42.202 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:42.210 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:42.210 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:42.231 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:42.231 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:45.758 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:36:45.766 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:45.771 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:36:45.775 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:45.777 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:36:46.067 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:36:46.460 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:36:46.557 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:36:46.658 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:36:46.773 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:36:46.874 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:36:46.973 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:36:47.128 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:36:47.130 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:36:47.139 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:36:47.140 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:36:47.159 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:36:47.160 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:37:48.355 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:37:48.358 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:37:48.367 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:37:48.411 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:37:48.413 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:37:48.413 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:37:48.422 [http-nio-8080-exec-9] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:42:19.006 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
18:42:19.010 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
18:42:19.564 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
18:42:25.519 [background-preinit] INFO  o.h.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
18:42:25.584 [main] INFO  r.anapa.autorent.AutorentApplication - Starting AutorentApplication using Java 17.0.14 with PID 8800 (C:\Users\Администратор\IdeaProjects\autorent\target\classes started by Администратор in C:\Users\Администратор\IdeaProjects\autorent)
18:42:25.584 [main] DEBUG r.anapa.autorent.AutorentApplication - Running with Spring Boot v3.2.3, Spring v6.1.4
18:42:25.585 [main] INFO  r.anapa.autorent.AutorentApplication - The following 1 profile is active: "dev"
18:42:28.375 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
18:42:28.621 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 208 ms. Found 15 JPA repository interfaces.
18:42:30.539 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
18:42:30.564 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
18:42:30.568 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
18:42:30.568 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.19]
18:42:30.726 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
18:42:30.727 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5070 ms
18:42:31.262 [main] DEBUG r.a.autorent.config.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
18:42:31.499 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
18:42:31.602 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.4.4.Final
18:42:31.680 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
18:42:32.114 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
18:42:32.155 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
18:42:34.053 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7341baa3
18:42:34.058 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
18:42:34.311 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
18:42:35.913 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
18:42:39.680 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
18:42:40.498 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
18:42:41.985 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.OncePerRequestFilter.doFilter(jakarta.servlet.ServletRequest,jakarta.servlet.ServletResponse,jakarta.servlet.FilterChain) throws jakarta.servlet.ServletException,java.io.IOException] because it is marked as final, consider using interface-based JDK proxies instead.
18:42:41.986 [main] WARN  o.s.aop.framework.CglibAopProxy - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(jakarta.servlet.FilterConfig) throws jakarta.servlet.ServletException] because it is marked as final, consider using interface-based JDK proxies instead.
18:42:42.505 [main] INFO  r.anapa.autorent.service.SmsService - SmsService инициализирован с использованием SMS.ru API
18:42:42.733 [main] INFO  r.a.a.controller.AuthController - AuthController initialized
18:42:42.799 [main] INFO  r.a.a.controller.RentalController - RentalController initialized
18:42:43.795 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint(s) beneath base path '/actuator'
18:42:44.015 [main] INFO  o.s.s.web.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@1d76ebc4, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7eba01f5, org.springframework.security.web.context.SecurityContextHolderFilter@412c7b5e, org.springframework.security.web.header.HeaderWriterFilter@42140584, org.springframework.web.filter.CorsFilter@396b6875, org.springframework.security.web.csrf.CsrfFilter@2013a999, org.springframework.security.web.authentication.logout.LogoutFilter@7fab829a, ru.anapa.autorent.config.JwtRequestFilter@fcd0e8d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@314f82dd, org.springframework.security.web.session.ConcurrentSessionFilter@465f2c84, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2c02c021, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1abc0105, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@161b77d1, org.springframework.security.web.session.SessionManagementFilter@44eb735c, org.springframework.security.web.access.ExceptionTranslationFilter@44aac8fd, org.springframework.security.web.access.intercept.AuthorizationFilter@4bd8491e]
18:42:44.881 [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
18:42:44.899 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path ''
18:42:44.930 [main] INFO  r.anapa.autorent.AutorentApplication - Started AutorentApplication in 19.837 seconds (process running for 20.651)
18:42:45.153 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Запуск проверки статусов автомобилей
18:42:45.302 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:42:45.314 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:42:45.429 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:42:45.477 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:42:45.540 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:42:45.633 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:42:45.641 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:42:45.735 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:42:45.792 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:42:45.841 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:42:45.936 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:42:45.940 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:42:46.032 [scheduling-1] INFO  r.a.autorent.config.DataInitializer - Обновлены статусы 0 автомобилей
18:42:46.091 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:42:46.240 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:42:46.900 [main] INFO  r.a.autorent.config.DataInitializer - Статусы автомобилей синхронизированы при запуске приложения
18:42:46.901 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ СИСТЕМЫ ИЗОБРАЖЕНИЙ ===
18:42:46.901 [main] INFO  r.a.a.config.ImageTestInitializer - Проверка статуса миграции изображений...
18:42:47.322 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        car_images ci1_0
18:42:48.164 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:42:52.825 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
18:42:52.825 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
18:42:52.826 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
18:42:52.870 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments/rental/53
18:42:52.916 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:42:52.928 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments/rental/53
18:42:52.981 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:42:53.036 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.rentalPayments(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:42:53.312 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:42:54.140 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:42:54.232 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:42:54.329 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:42:54.435 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.rental_id=? 
    order by
        dp1_0.payment_date desc
18:42:54.529 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:42:54.623 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:42:55.016 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:42:55.194 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:42:55.247 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:42:55.254 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:42:55.271 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:42:55.276 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:42:55.308 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /.well-known/appspecific/com.chrome.devtools.json
18:42:55.313 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:42:55.314 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /.well-known/appspecific/com.chrome.devtools.json
18:42:55.339 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:42:55.342 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:42:55.345 [http-nio-8080-exec-5] WARN  r.a.a.config.GlobalExceptionHandler - Resource not found: No static resource .well-known/appspecific/com.chrome.devtools.json.
18:42:56.334 [main] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0
18:43:02.903 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:43:03.053 [main] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:43:03.898 [main] INFO  r.a.a.service.ImageMigrationService - Статус миграции изображений:
18:43:03.899 [main] INFO  r.a.a.service.ImageMigrationService - - Всего изображений: 10
18:43:03.900 [main] INFO  r.a.a.service.ImageMigrationService - - В БД (BLOB): 10
18:43:03.901 [main] INFO  r.a.a.service.ImageMigrationService - - С URL: 10
18:43:03.901 [main] INFO  r.a.a.service.ImageMigrationService - - Требуют миграции: 0
18:43:03.901 [main] INFO  r.a.a.config.ImageTestInitializer - === ТЕСТИРОВАНИЕ ЗАВЕРШЕНО ===
18:43:03.902 [main] INFO  r.a.a.config.ImageTestInitializer - Для миграции изображений используйте: POST /admin/images/migrate
18:43:03.903 [main] INFO  r.a.a.config.ImageTestInitializer - Для проверки статуса используйте: GET /admin/images/migration-status
18:43:04.200 [main] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        roles r1_0
18:43:04.769 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: проверка наличия пользователей
18:43:04.788 [main] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:43:04.940 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:43:05.091 [main] INFO  r.a.autorent.config.DataInitializer - DataInitializer: admin@example.com существует: true
18:43:05.095 [main] INFO  r.a.autorent.config.ScheduledTasks - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ ПРИЛОЖЕНИЯ ===
18:43:05.096 [main] INFO  r.a.a.service.DailyPaymentService - === ДЕТАЛЬНАЯ ДИАГНОСТИКА ВСЕХ ПЛАТЕЖЕЙ ===
18:43:05.382 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0
18:43:05.536 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:43:05.744 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:43:05.914 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:43:06.157 [main] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:43:06.359 [main] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        ri1_0.id,
        ri1_0.available_quantity,
        c2_0.id,
        c2_0.created_at,
        c2_0.description,
        c2_0.image,
        c2_0.name,
        c2_0.updated_at,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r2_0.user_id,
        r2_1.id,
        r2_1.name 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        rental_items ri1_0 
            on ri1_0.id=r1_0.item_id 
    left join
        categories c2_0 
            on c2_0.id=ri1_0.category_id 
    join
        users u1_0 
            on u1_0.id=r1_0.user_id 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r2_0 
            on u1_0.id=r2_0.user_id 
    left join
        roles r2_1 
            on r2_1.id=r2_0.role_id 
    where
        r1_0.id=?
18:43:07.115 [main] INFO  r.a.a.service.DailyPaymentService - Всего платежей в системе: 12
18:43:07.120 [main] INFO  r.a.a.service.DailyPaymentService - Распределение по статусам:
18:43:07.121 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 8
18:43:07.122 [main] INFO  r.a.a.service.DailyPaymentService -   PROCESSED: 4
18:43:07.122 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:43:07.122 [main] INFO  r.a.a.service.DailyPaymentService -   CANCELLED: 0
18:43:07.150 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='PENDING' 
        and dp1_0.payment_date<?
18:43:07.392 [main] DEBUG org.hibernate.SQL - 
    select
        count(dp1_0.id) 
    from
        daily_payments dp1_0 
    where
        dp1_0.status='FAILED' 
        and dp1_0.payment_date<?
18:43:07.551 [main] INFO  r.a.a.service.DailyPaymentService - Просроченные платежи (до 2025-06-28):
18:43:07.551 [main] INFO  r.a.a.service.DailyPaymentService -   PENDING: 0
18:43:07.552 [main] INFO  r.a.a.service.DailyPaymentService -   FAILED: 0
18:43:07.552 [main] INFO  r.a.a.service.DailyPaymentService - Платежи с превышением кредитного лимита:
18:43:07.552 [main] INFO  r.a.a.service.DailyPaymentService -   Платеж ID 4: статус=PROCESSED, сумма=1500.00, дата=2025-06-28, примечания=ВНИМАНИЕ: Превышен кредитный лимит! Баланс: 4994000.00, лимит: 100000.00
18:43:07.553 [main] INFO  r.a.a.service.DailyPaymentService - Все FAILED платежи:
18:43:07.553 [main] INFO  r.a.a.service.DailyPaymentService - Платежи за последние 7 дней:
18:43:07.556 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-25: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:43:07.559 [main] INFO  r.a.a.service.DailyPaymentService -   2025-06-28: 1 платежей (PENDING: 0, PROCESSED: 1, FAILED: 0)
18:43:07.562 [main] INFO  r.a.a.service.DailyPaymentService - === КОНЕЦ ДИАГНОСТИКИ ===
18:43:07.566 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:43:07.588 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:43:07.717 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:43:07.719 [main] INFO  r.a.autorent.config.ScheduledTasks - Обработка пропущенных платежей при старте завершена успешно
18:43:07.720 [main] INFO  r.a.a.service.DailyPaymentService - === ОБРАБОТКА ПРОПУЩЕННЫХ ПЛАТЕЖЕЙ ПРИ СТАРТЕ СЕРВИСА ===
18:43:07.727 [main] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.payment_date 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<? 
    order by
        dp1_0.payment_date
18:43:07.894 [main] INFO  r.a.a.service.DailyPaymentService - Нет пропущенных платежей для обработки при старте
18:43:07.895 [main] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:43:07.903 [main] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:43:08.098 [main] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:43:08.099 [main] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:44:42.986 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
18:44:42.988 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
18:44:43.119 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:44:43.119 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:44:43.119 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.logout.LogoutFilter - Logging out [UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:44:43.120 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.logout.LogoutFilter - Logging out [UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=2D5435A3A185864B5394D38382CBE0F9], Granted Authorities=[ROLE_ADMIN]]]
18:44:43.135 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.l.SecurityContextLogoutHandler - Invalidated session ED05182073F08B4F2742CCFE6BFDB94D
18:44:43.135 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.l.SecurityContextLogoutHandler - Invalidated session ED05182073F08B4F2742CCFE6BFDB94D
18:44:43.139 [http-nio-8080-exec-8] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /auth/login?logout
18:44:43.139 [http-nio-8080-exec-6] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /auth/login?logout
18:44:43.154 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:44:43.166 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.170 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:44:43.179 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - Login page requested
18:44:43.181 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - User logged out
18:44:43.255 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:44:43.260 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.268 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:44:43.272 [http-nio-8080-exec-10] INFO  r.a.a.controller.AuthController - Login page requested
18:44:43.272 [http-nio-8080-exec-10] INFO  r.a.a.controller.AuthController - User logged out
18:44:43.307 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:44:43.321 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.324 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:44:43.331 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - Login page requested
18:44:43.333 [http-nio-8080-exec-2] INFO  r.a.a.controller.AuthController - User logged out
18:44:43.350 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:44:43.358 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.362 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:44:43.368 [http-nio-8080-exec-4] INFO  r.a.a.controller.AuthController - Login page requested
18:44:43.369 [http-nio-8080-exec-4] INFO  r.a.a.controller.AuthController - User logged out
18:44:43.408 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:44:43.408 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:44:43.414 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.414 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:44:43.418 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:44:43.418 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:44:50.079 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:44:50.684 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin61@example.com
18:44:50.694 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:44:50.790 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:50.911 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin61@example.com, роли: [ROLE_USER], enabled: true
18:44:50.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:44:51.506 [http-nio-8080-exec-9] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:44:51.671 [http-nio-8080-exec-9] WARN  o.a.c.util.SessionIdGeneratorBase - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [161] milliseconds.
18:44:51.673 [http-nio-8080-exec-9] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 9BF08C6913C0D0F2D0119BD094A9D737, for principal org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]]
18:44:51.678 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:44:51.680 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@5bf56772]
18:44:51.681 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]
18:44:51.697 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
18:44:51.706 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
18:44:51.717 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
18:44:51.830 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
18:44:51.928 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
18:44:52.028 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
18:44:52.132 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:44:54.789 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:44:55.317 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:44:55.422 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:55.527 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:55.635 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:55.747 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:55.844 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:55.944 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.041 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.143 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.240 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.336 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.430 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.525 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:56.622 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:44:57.171 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:44:57.266 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:44:57.361 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:44:57.475 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:44:57.570 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:44:57.981 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:44:58.071 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:44:58.071 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:44:58.076 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:44:58.076 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:44:58.087 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:44:58.088 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:44:58.101 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:44:58.101 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:44:58.105 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:44:58.108 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:44:58.114 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:44:58.115 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:44:58.320 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:44:58.423 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:44:59.310 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:44:59.466 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:03.122 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
18:45:03.127 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:03.129 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
18:45:03.133 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:45:03.135 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:45:03.136 [http-nio-8080-exec-2] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin61@example.com
18:45:03.142 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:45:03.324 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:45:03.605 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:45:03.699 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:45:03.792 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:45:03.917 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:45:05.112 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 11 rentals for user admin61@example.com
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 51, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 50, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 49, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 46, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 47, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 48, Status: COMPLETED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 52, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 53, Status: ACTIVE
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 54, Status: ACTIVE
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 55, Status: CANCELLED
18:45:05.113 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Rental ID: 56, Status: CANCELLED
18:45:05.114 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
18:45:05.115 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 2 active rentals
18:45:05.116 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Active Rental ID: 53, Status: ACTIVE
18:45:05.116 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Active Rental ID: 54, Status: ACTIVE
18:45:05.117 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - Found 9 history rentals
18:45:05.118 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 51, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 50, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 49, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 46, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 47, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 48, Status: COMPLETED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 52, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 55, Status: CANCELLED
18:45:05.120 [http-nio-8080-exec-2] INFO  r.a.a.controller.RentalController - History Rental ID: 56, Status: CANCELLED
18:45:05.218 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:45:05.315 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:45:05.783 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:45:05.878 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:45:05.981 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:45:06.530 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:45:06.899 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:45:06.992 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:45:07.236 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:45:07.237 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:45:07.237 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:45:07.242 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:45:07.242 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:45:07.242 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:45:07.253 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:45:07.257 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:07.260 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:07.457 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:45:07.564 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:15.181 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /user/payments
18:45:15.184 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:15.186 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /user/payments
18:45:15.188 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin61@example.com
18:45:15.192 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:45:15.376 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:45:15.666 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id 
    where
        r1_0.user_id=? 
        and r1_0.status='ACTIVE' 
    order by
        r1_0.created_at desc
18:45:17.614 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:45:18.020 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    left join
        rentals r1_0 
            on r1_0.id=dp1_0.rental_id 
    left join
        cars c1_0 
            on c1_0.id=r1_0.car_id 
    join
        accounts a1_0 
            on a1_0.id=dp1_0.account_id 
    where
        a1_0.user_id=? 
    order by
        dp1_0.payment_date desc
18:45:18.125 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:45:18.242 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:45:18.346 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:45:18.549 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:45:18.550 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:45:18.556 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:45:18.556 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:45:18.573 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:45:18.576 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:00.723 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
18:46:00.729 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:00.731 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
18:46:00.734 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
18:46:00.736 [http-nio-8080-exec-7] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
18:46:00.736 [http-nio-8080-exec-7] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
18:46:00.737 [http-nio-8080-exec-7] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin61@example.com
18:46:00.741 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:46:00.924 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:01.113 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:46:01.208 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:01.581 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:46:01.676 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:02.135 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:46:02.228 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:02.328 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:46:02.875 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:46:03.242 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:46:03.336 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:46:03.516 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:46:03.517 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:46:03.521 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:46:03.522 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:46:03.537 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:03.539 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:12.990 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars
18:46:12.994 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars
18:46:13.285 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    limit
        ?, ?
18:46:13.409 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id in (?, ?) 
    order by
        ci1_0.display_order
18:46:15.955 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:16.012 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:16.013 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:46:16.013 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:46:16.018 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:46:16.090 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:46:16.092 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:16.098 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:46:16.102 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:16.106 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:46:16.108 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:16.117 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:16.120 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:16.415 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:16.522 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:17.115 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:17.277 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:21.348 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /
18:46:21.351 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /
18:46:21.355 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.image,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    left join
        rental_items ri1_0 
            on c1_0.id=ri1_0.category_id 
    group by
        c1_0.id 
    order by
        count(ri1_0.id) desc
18:46:21.545 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        (select
            count(1) 
        from
            rentals r1_0 
        where
            ri1_0.id=r1_0.item_id) desc
18:46:21.645 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
    order by
        ri1_0.created_at desc
18:46:21.743 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ri1_0.id,
        ri1_0.available_quantity,
        ri1_0.category_id,
        ri1_0.created_at,
        ri1_0.deposit,
        ri1_0.description,
        ri1_0.image,
        ri1_0.is_promotional,
        ri1_0.name,
        ri1_0.price_per_day,
        ri1_0.updated_at 
    from
        rental_items ri1_0 
    where
        ri1_0.available_quantity>0 
        and ri1_0.is_promotional=1
18:46:21.839 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:46:24.102 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:46:24.307 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:46:24.410 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:24.515 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:24.621 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:24.724 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:24.829 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:24.934 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.040 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.145 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.254 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.360 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.467 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.572 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:25.679 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:46:26.238 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:46:26.331 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:26.426 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:26.548 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:26.642 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:27.014 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:27.045 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:46:27.045 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:46:27.045 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:27.045 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:46:27.049 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:46:27.049 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:46:27.049 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:46:27.049 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:27.057 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:27.059 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:27.062 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:27.067 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:27.347 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:27.474 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:28.324 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:28.510 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:45.165 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars/11
18:46:45.170 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars/11
18:46:45.445 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:45.813 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:46:47.094 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:47.373 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:47.735 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:46:48.677 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:48.782 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
18:46:48.889 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:48.992 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:49.107 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
18:46:49.418 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:49.817 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:46:50.789 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:50.911 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
18:46:51.014 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:51.120 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:46:51.227 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Loading car details for ID: 11
18:46:51.228 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Car images count: 5
18:46:51.230 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Image: id=11, url=/images/car/1750809570975_photo_2025-05-19_21-50-48.jpg, main=true
18:46:51.230 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Image: id=12, url=/images/car/1750809572139_photo_2025-05-19_20-35-10.jpg, main=false
18:46:51.231 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Image: id=13, url=/images/car/1750809572743_photo_2025-05-19_21-50-34.jpg, main=false
18:46:51.231 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Image: id=14, url=/images/car/1750809573226_photo_2025-05-19_21-50-29.jpg, main=false
18:46:51.231 [http-nio-8080-exec-5] DEBUG r.a.a.controller.CarController - Image: id=15, url=/images/car/1750809573728_photo_2025-05-19_21-50-19.jpg, main=false
18:46:51.262 [http-nio-8080-exec-5] ERROR r.a.a.controller.CarController - Ошибка при преобразовании периодов в JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ArrayList[0]->ru.anapa.autorent.dto.RentalPeriodDto["startDate"])
18:46:51.293 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:51.355 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:46:51.355 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:51.358 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:46:51.358 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809572139_photo_2025-05-19_20-35-10.jpg
18:46:51.367 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:46:51.368 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:46:51.368 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:46:51.369 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809572139_photo_2025-05-19_20-35-10.jpg
18:46:51.387 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:51.388 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:51.392 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:51.393 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:51.402 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809573226_photo_2025-05-19_21-50-29.jpg
18:46:51.405 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809572743_photo_2025-05-19_21-50-34.jpg
18:46:51.407 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809573728_photo_2025-05-19_21-50-19.jpg
18:46:51.408 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809573226_photo_2025-05-19_21-50-29.jpg
18:46:51.409 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809572743_photo_2025-05-19_21-50-34.jpg
18:46:51.410 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809573728_photo_2025-05-19_21-50-19.jpg
18:46:51.418 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:51.418 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:51.420 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:46:51.676 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:51.788 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:51.981 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:51.995 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:52.090 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:52.105 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:52.264 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:52.403 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:46:52.414 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:46:52.572 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:11.207 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars
18:47:11.210 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars
18:47:11.486 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    limit
        ?, ?
18:47:11.587 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id in (?, ?) 
    order by
        ci1_0.display_order
18:47:13.907 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:13.946 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:47:13.946 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:47:13.947 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:47:13.947 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:47:13.949 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:47:13.950 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750809570975_photo_2025-05-19_21-50-48.jpg
18:47:13.950 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:47:13.950 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:47:13.955 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:13.955 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:13.959 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:13.959 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:14.241 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:14.352 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:15.086 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:15.308 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:16.617 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /cars/12
18:47:16.626 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /cars/12
18:47:16.902 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:17.273 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:47:18.451 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:18.730 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:19.093 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:47:19.973 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:20.085 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
18:47:20.187 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:20.290 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:20.399 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status=? 
    order by
        r1_0.end_date
18:47:20.702 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:21.111 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    left join
        cars c1_0 
            on c1_0.id=ci1_0.car_id 
    where
        c1_0.id=? 
    order by
        ci1_0.display_order
18:47:21.951 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:22.064 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?) 
    order by
        r1_0.start_date
18:47:22.170 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:22.320 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:22.427 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Loading car details for ID: 12
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Car images count: 5
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Image: id=16, url=/images/car/1750980144992_photo_2025-05-19_21-50-48.jpg, main=true
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Image: id=17, url=/images/car/1750980145807_photo_2025-05-19_20-35-10.jpg, main=false
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Image: id=18, url=/images/car/1750980146273_photo_2025-05-19_21-50-34.jpg, main=false
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Image: id=19, url=/images/car/1750980146762_photo_2025-05-19_21-50-29.jpg, main=false
18:47:22.428 [http-nio-8080-exec-6] DEBUG r.a.a.controller.CarController - Image: id=20, url=/images/car/1750980147351_photo_2025-05-19_21-50-19.jpg, main=false
18:47:22.444 [http-nio-8080-exec-6] ERROR r.a.a.controller.CarController - Ошибка при преобразовании периодов в JSON: Java 8 date/time type `java.time.LocalDateTime` not supported by default: add Module "com.fasterxml.jackson.datatype:jackson-datatype-jsr310" to enable handling (through reference chain: java.util.ArrayList[0]->ru.anapa.autorent.dto.RentalPeriodDto["startDate"])
18:47:22.457 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:22.507 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:47:22.522 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
18:47:22.529 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:47:22.530 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:47:22.534 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980145807_photo_2025-05-19_20-35-10.jpg
18:47:22.534 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:47:22.536 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:47:22.543 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980144992_photo_2025-05-19_21-50-48.jpg
18:47:22.561 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:22.571 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:22.573 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:22.578 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:22.588 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
18:47:22.588 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
18:47:22.588 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
18:47:22.590 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146273_photo_2025-05-19_21-50-34.jpg
18:47:22.590 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980147351_photo_2025-05-19_21-50-19.jpg
18:47:22.590 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /images/car/1750980146762_photo_2025-05-19_21-50-29.jpg
18:47:22.596 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:22.596 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:22.597 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ci1_0.id,
        ci1_0.car_id,
        ci1_0.content_type,
        ci1_0.description,
        ci1_0.display_order,
        ci1_0.file_name,
        ci1_0.image_data,
        ci1_0.image_url,
        ci1_0.is_main,
        ci1_0.rotation 
    from
        car_images ci1_0 
    where
        ci1_0.image_url=?
18:47:22.793 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:22.896 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:23.144 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:23.181 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:23.252 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:23.293 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:23.424 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:23.459 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:23.710 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:23.718 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:35.213 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
18:47:35.219 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:35.220 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
18:47:35.222 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:47:35.223 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:47:35.224 [http-nio-8080-exec-5] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin61@example.com
18:47:35.227 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:47:35.418 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:47:35.696 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:47:35.788 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:35.879 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:35.979 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:47:37.261 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 11 rentals for user admin61@example.com
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 51, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 50, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 49, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 46, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 47, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 48, Status: COMPLETED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 52, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 53, Status: ACTIVE
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 54, Status: ACTIVE
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 55, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Rental ID: 56, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 2 active rentals
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Active Rental ID: 53, Status: ACTIVE
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Active Rental ID: 54, Status: ACTIVE
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - Found 9 history rentals
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 51, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 50, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 49, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 46, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 47, Status: CANCELLED
18:47:37.262 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 48, Status: COMPLETED
18:47:37.264 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 52, Status: CANCELLED
18:47:37.264 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 55, Status: CANCELLED
18:47:37.264 [http-nio-8080-exec-5] INFO  r.a.a.controller.RentalController - History Rental ID: 56, Status: CANCELLED
18:47:37.357 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:47:37.448 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:37.910 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:47:38.002 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:38.098 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:47:38.114 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
18:47:38.114 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/logout
18:47:38.154 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:38.155 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.logout.LogoutFilter - Logging out [UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:38.156 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:38.156 [http-nio-8080-exec-6] DEBUG o.s.s.w.a.l.SecurityContextLogoutHandler - Invalidated session 9BF08C6913C0D0F2D0119BD094A9D737
18:47:38.157 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.logout.LogoutFilter - Logging out [UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin61@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_USER]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_USER]]]
18:47:38.157 [http-nio-8080-exec-6] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /auth/login?logout
18:47:38.158 [http-nio-8080-exec-1] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to /auth/login?logout
18:47:38.166 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:47:38.168 [http-nio-8080-exec-1] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.171 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:47:38.174 [http-nio-8080-exec-1] INFO  r.a.a.controller.AuthController - Login page requested
18:47:38.174 [http-nio-8080-exec-1] INFO  r.a.a.controller.AuthController - User logged out
18:47:38.192 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:47:38.195 [http-nio-8080-exec-9] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.196 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:47:38.199 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - Login page requested
18:47:38.200 [http-nio-8080-exec-9] INFO  r.a.a.controller.AuthController - User logged out
18:47:38.235 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:47:38.238 [http-nio-8080-exec-8] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.239 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:47:38.242 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - Login page requested
18:47:38.243 [http-nio-8080-exec-8] INFO  r.a.a.controller.AuthController - User logged out
18:47:38.268 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /auth/login?logout
18:47:38.270 [http-nio-8080-exec-7] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.271 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /auth/login?logout
18:47:38.273 [http-nio-8080-exec-7] INFO  r.a.a.controller.AuthController - Login page requested
18:47:38.273 [http-nio-8080-exec-7] INFO  r.a.a.controller.AuthController - User logged out
18:47:38.305 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:47:38.305 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:47:38.308 [http-nio-8080-exec-2] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.308 [http-nio-8080-exec-4] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:38.309 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:47:38.309 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:47:38.646 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:47:39.014 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:47:39.108 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:47:39.219 [http-nio-8080-exec-5] ERROR org.thymeleaf.TemplateEngine - [THYMELEAF][http-nio-8080-exec-5] Exception processing template "rentals/my-rentals": Exception evaluating SpringEL expression: "rental.status.name() == 'ACTIVE' and #authorization.expression('hasRole(''ADMIN'')')" (template: "rentals/my-rentals" - line 143, col 32)
org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.status.name() == 'ACTIVE' and #authorization.expression('hasRole(''ADMIN'')')" (template: "rentals/my-rentals" - line 143, col 32)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:292)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.IllegalArgumentException: Authentication object cannot be null
	at org.springframework.util.Assert.notNull(Assert.java:172)
	at org.springframework.security.access.expression.SecurityExpressionRoot.lambda$new$1(SecurityExpressionRoot.java:92)
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:106)
	at org.springframework.security.access.expression.SecurityExpressionRoot.getAuthentication(SecurityExpressionRoot.java:130)
	at org.springframework.security.access.expression.SecurityExpressionRoot.getAuthoritySet(SecurityExpressionRoot.java:200)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyAuthorityName(SecurityExpressionRoot.java:118)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyRole(SecurityExpressionRoot.java:114)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(SecurityExpressionRoot.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:142)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:151)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:107)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(ExpressionUtils.java:30)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils$MvcAuthUtils.authorizeUsingAccessExpressionMvc(AuthUtils.java:353)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils$MvcAuthUtils.access$100(AuthUtils.java:304)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils.authorizeUsingAccessExpression(AuthUtils.java:173)
	at org.thymeleaf.extras.springsecurity6.auth.Authorization.expression(Authorization.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:142)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:124)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:400)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:212)
	at org.springframework.expression.spel.ast.OpAnd.getBooleanValue(OpAnd.java:57)
	at org.springframework.expression.spel.ast.OpAnd.getValueInternal(OpAnd.java:52)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	... 174 common frames omitted
18:47:39.240 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "rental.status.name() == 'ACTIVE' and #authorization.expression('hasRole(''ADMIN'')')" (template: "rentals/my-rentals" - line 143, col 32)] with root cause
java.lang.IllegalArgumentException: Authentication object cannot be null
	at org.springframework.util.Assert.notNull(Assert.java:172)
	at org.springframework.security.access.expression.SecurityExpressionRoot.lambda$new$1(SecurityExpressionRoot.java:92)
	at org.springframework.util.function.SingletonSupplier.get(SingletonSupplier.java:106)
	at org.springframework.security.access.expression.SecurityExpressionRoot.getAuthentication(SecurityExpressionRoot.java:130)
	at org.springframework.security.access.expression.SecurityExpressionRoot.getAuthoritySet(SecurityExpressionRoot.java:200)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyAuthorityName(SecurityExpressionRoot.java:118)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasAnyRole(SecurityExpressionRoot.java:114)
	at org.springframework.security.access.expression.SecurityExpressionRoot.hasRole(SecurityExpressionRoot.java:109)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:142)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:151)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:107)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getTypedValue(SpelNodeImpl.java:119)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:309)
	at org.springframework.security.access.expression.ExpressionUtils.evaluateAsBoolean(ExpressionUtils.java:30)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils$MvcAuthUtils.authorizeUsingAccessExpressionMvc(AuthUtils.java:353)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils$MvcAuthUtils.access$100(AuthUtils.java:304)
	at org.thymeleaf.extras.springsecurity6.auth.AuthUtils.authorizeUsingAccessExpression(AuthUtils.java:173)
	at org.thymeleaf.extras.springsecurity6.auth.Authorization.expression(Authorization.java:76)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.expression.spel.support.ReflectiveMethodExecutor.execute(ReflectiveMethodExecutor.java:142)
	at org.springframework.expression.spel.ast.MethodReference.getValueInternal(MethodReference.java:124)
	at org.springframework.expression.spel.ast.MethodReference$MethodValueRef.getValue(MethodReference.java:400)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:98)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:212)
	at org.springframework.expression.spel.ast.OpAnd.getBooleanValue(OpAnd.java:57)
	at org.springframework.expression.spel.ast.OpAnd.getValueInternal(OpAnd.java:52)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:114)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:338)
	at org.thymeleaf.spring6.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:265)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:125)
	at org.thymeleaf.standard.processor.StandardIfTagProcessor.isVisible(StandardIfTagProcessor.java:59)
	at org.thymeleaf.standard.processor.AbstractStandardConditionalVisibilityTagProcessor.doProcess(AbstractStandardConditionalVisibilityTagProcessor.java:61)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:368)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:222)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.CloseElementTag.beHandled(CloseElementTag.java:139)
	at org.thymeleaf.engine.TemplateModel.process(TemplateModel.java:136)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:592)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1103)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1077)
	at org.thymeleaf.spring6.view.ThymeleafView.renderFragment(ThymeleafView.java:372)
	at org.thymeleaf.spring6.view.ThymeleafView.render(ThymeleafView.java:192)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1431)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1167)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1106)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:205)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:151)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:129)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:227)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:221)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at ru.anapa.autorent.config.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:49)
	at jdk.internal.reflect.GeneratedMethodAccessor45.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:569)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:351)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:713)
	at ru.anapa.autorent.config.JwtRequestFilter$$SpringCGLIB$$0.doFilterInternal(<generated>)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:117)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:174)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:149)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1744)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:840)
18:47:39.267 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /error
18:47:39.271 [http-nio-8080-exec-5] DEBUG o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
18:47:39.296 [http-nio-8080-exec-5] DEBUG o.s.s.w.s.HttpSessionRequestCache - Saved request http://localhost:8080/error?continue to session
18:47:39.304 [http-nio-8080-exec-5] DEBUG o.s.s.web.DefaultRedirectStrategy - Redirecting to http://localhost:8080/auth/login
18:47:49.044 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing POST /auth/login
18:47:49.314 [http-nio-8080-exec-10] DEBUG r.anapa.autorent.service.UserService - Загрузка пользователя по email: admin@example.com
18:47:49.318 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:47:49.492 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:47:49.702 [http-nio-8080-exec-10] DEBUG r.anapa.autorent.service.UserService - Пользователь найден: admin@example.com, роли: [ROLE_ADMIN], enabled: true
18:47:49.707 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    update
        users 
    set
        email=?,
        enabled=?,
        first_name=?,
        last_login_date=?,
        last_name=?,
        password=?,
        phone=?,
        registration_date=? 
    where
        id=?
18:47:50.524 [http-nio-8080-exec-10] DEBUG o.s.s.a.d.DaoAuthenticationProvider - Authenticated user
18:47:50.525 [http-nio-8080-exec-10] DEBUG o.s.s.c.session.SessionRegistryImpl - Registering session 530BA6E12ED60B6E5A72BABEDFB95F71, for principal org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]]
18:47:50.526 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.CsrfAuthenticationStrategy - Replaced CSRF Token
18:47:50.527 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Stored SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]] to HttpSession [org.apache.catalina.session.StandardSessionFacade@61034310]
18:47:50.528 [http-nio-8080-exec-10] DEBUG o.s.s.w.a.UsernamePasswordAuthenticationFilter - Set SecurityContextHolder to UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]
18:47:50.542 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:47:50.544 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:47:50.549 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:47:50.554 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:47:50.557 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:47:51.137 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:47:52.366 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:47:53.091 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:47:53.285 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:47:53.490 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:47:53.973 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:47:54.112 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:54.309 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:54.512 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:55.050 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:55.851 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:47:56.047 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:47:56.251 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:47:56.468 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:47:56.714 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:47:56.714 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:47:56.719 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:47:56.719 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:47:56.741 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:47:56.744 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:48:15.152 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:48:15.156 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:48:15.157 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:48:15.159 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:48:15.161 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:48:15.167 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:48:15.350 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:48:15.445 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:48:15.538 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:48:15.632 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:48:15.801 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:48:15.802 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:48:15.804 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:48:15.805 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:48:15.811 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:48:15.815 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:49:30.362 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:49:30.365 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:49:30.365 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:49:30.367 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:49:30.368 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:49:30.645 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:49:31.190 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:49:31.597 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:49:31.698 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:49:31.796 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:49:32.077 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:49:32.170 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:32.263 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:32.361 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:32.456 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:32.820 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:49:32.913 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:33.006 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:33.107 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:49:33.244 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:49:33.246 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:49:33.247 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:49:33.249 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:49:33.256 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:49:33.257 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:49:35.591 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/statistics
18:49:35.594 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:49:35.596 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/statistics
18:49:35.598 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.statistics(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:49:35.601 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.statistics(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:49:35.601 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:49:36.071 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:49:36.204 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:36.334 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:36.459 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:36.598 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:36.750 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:36.903 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.049 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.222 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.428 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.576 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.727 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:37.936 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:38.144 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:49:38.856 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:49:50.065 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:49:50.212 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:50.360 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:50.515 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:50.661 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:51.506 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        rentals r1_0
18:49:52.068 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:49:52.548 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:49:52.678 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:52.813 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:52.953 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:53.095 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:53.951 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:49:54.094 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:54.237 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:54.384 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:54.528 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:55.399 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:49:55.546 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:55.680 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:55.810 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:49:55.940 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:49:56.478 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:50:00.604 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=?
18:50:00.740 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:50:00.880 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:01.092 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=?
18:50:01.283 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:50:01.488 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:01.694 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:50:01.982 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:50:02.130 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:02.277 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:02.502 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:02.638 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:02.780 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:02.925 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.070 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.220 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.370 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.513 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.650 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.788 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:03.946 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:04.871 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:05.706 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:05.892 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:50:06.097 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:06.301 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:50:10.193 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:11.321 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:12.487 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:13.573 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:14.802 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:15.858 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:16.954 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:17.860 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:17.997 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:50:18.135 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:18.282 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:50:22.583 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:23.711 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:24.747 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:50:25.963 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        accounts a1_0
18:50:27.026 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0
18:50:27.168 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:27.383 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:27.527 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:27.656 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:27.804 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.010 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.214 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.420 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.625 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.758 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:28.888 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:29.034 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:29.166 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:50:29.720 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:50:30.004 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:50:30.144 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:30.285 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:30.467 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:30.606 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:30.732 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:30.854 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.082 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.285 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.428 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.574 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.716 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.847 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:31.975 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:50:32.578 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:50:32.579 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:50:32.581 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:50:32.581 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:50:32.588 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:50:32.591 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:30.218 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/accounts
18:53:30.221 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:30.221 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/accounts
18:53:30.497 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0
18:53:30.592 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:30.684 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:30.779 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:30.880 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:30.999 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.092 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.188 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.283 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.377 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.468 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.562 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.654 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:31.750 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:32.149 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:53:32.149 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:53:32.151 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:53:32.152 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:53:32.160 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:32.163 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:44.474 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/accounts/8/edit
18:53:44.475 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:44.476 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/accounts/8/edit
18:53:44.944 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:53:45.729 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:53:45.729 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:53:45.730 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:53:45.732 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:53:45.739 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:45.743 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:52.791 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing POST /admin/accounts/8/edit
18:53:52.793 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:52.793 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured POST /admin/accounts/8/edit
18:53:52.986 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:53:53.099 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        account_history
        (account_id, change_date, change_reason, changed_by, field_name, new_value, old_value) 
    values
        (?, ?, ?, ?, ?, ?, ?)
18:53:53.202 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        account_history
        (account_id, change_date, change_reason, changed_by, field_name, new_value, old_value) 
    values
        (?, ?, ?, ?, ?, ?, ?)
18:53:53.326 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    update
        accounts 
    set
        account_number=?,
        allow_negative_balance=?,
        balance=?,
        credit_limit=?,
        initial_balance=?,
        max_rental_amount=?,
        max_rental_duration=?,
        user_id=? 
    where
        id=?
18:53:53.631 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/accounts/8?success=%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8+%D1%81%D1%87%D0%B5%D1%82%D0%B0+%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D1%8B
18:53:53.632 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:53.632 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/accounts/8?success=%D0%9D%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8+%D1%81%D1%87%D0%B5%D1%82%D0%B0+%D0%BE%D0%B1%D0%BD%D0%BE%D0%B2%D0%BB%D0%B5%D0%BD%D1%8B
18:53:53.633 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminAccountController.showAccountDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminAccountController]
18:53:53.634 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminAccountController.showAccountDetails(java.lang.Long,org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminAccountController]
18:53:53.813 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:53:54.351 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:53:54.442 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:53:54.542 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:53:55.089 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:53:55.450 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:53:55.544 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:53:55.673 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:53:55.673 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:53:55.676 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:53:55.676 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:53:55.684 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:53:55.684 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:03.979 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:54:03.980 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:03.981 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:54:03.981 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:03.982 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:04.255 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:54:04.800 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:54:05.186 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:05.278 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:05.372 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:05.644 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:05.736 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:05.831 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:05.925 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:06.016 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:06.385 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:54:06.477 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:06.568 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:06.664 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:06.776 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:06.776 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:06.779 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:06.779 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:06.787 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:06.788 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:08.409 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/synchronize-car-statuses
18:54:08.410 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:08.411 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/synchronize-car-statuses
18:54:08.413 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.synchronizeCarStatuses(org.springframework.web.servlet.mvc.support.RedirectAttributes); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:08.414 [http-nio-8080-exec-1] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.synchronizeCarStatuses(org.springframework.web.servlet.mvc.support.RedirectAttributes); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:08.790 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
18:54:08.932 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
18:54:09.097 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
18:54:09.241 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:54:09.384 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:09.606 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
18:54:09.808 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:10.436 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:54:10.437 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:10.438 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:54:10.440 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:10.440 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:10.701 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:54:11.857 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:54:12.446 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:12.675 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:12.883 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:13.496 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:13.704 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:13.905 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:14.112 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:14.315 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:14.948 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:54:15.135 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:15.337 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:15.548 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:15.776 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:15.776 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:15.781 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:15.781 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:15.788 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:15.788 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:16.712 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:54:16.713 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:16.714 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:54:16.715 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:16.715 [http-nio-8080-exec-4] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:16.717 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:54:16.899 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:16.991 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:17.082 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:17.173 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:17.289 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:17.290 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:17.292 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:17.292 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:17.301 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:17.302 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:20.233 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing POST /admin/payments/process-all
18:54:20.235 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:20.236 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured POST /admin/payments/process-all
18:54:20.237 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.DailyPaymentController.processAllUnprocessedPayments(); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:20.239 [http-nio-8080-exec-6] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity ru.anapa.autorent.controller.DailyPaymentController.processAllUnprocessedPayments(); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:20.239 [http-nio-8080-exec-6] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
18:54:20.241 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
18:54:20.423 [http-nio-8080-exec-6] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
18:54:20.423 [http-nio-8080-exec-6] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
18:54:21.953 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/payments
18:54:21.955 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:21.956 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/payments
18:54:21.956 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:21.957 [http-nio-8080-exec-5] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.DailyPaymentController.listPayments(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.DailyPaymentController]
18:54:21.961 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
    order by
        r1_0.created_at desc
18:54:22.142 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:22.238 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:22.331 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:22.423 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:22.536 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:22.536 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:22.537 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:22.537 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:22.540 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:22.542 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:25.745 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Securing GET /rentals/my-rentals
18:54:25.746 [http-nio-8080-exec-3] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:25.747 [http-nio-8080-exec-3] DEBUG o.s.security.web.FilterChainProxy - Secured GET /rentals/my-rentals
18:54:25.748 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:54:25.749 [http-nio-8080-exec-3] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.RentalController.myRentalsPage(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.RentalController]
18:54:25.749 [http-nio-8080-exec-3] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
18:54:25.752 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:54:26.115 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:26.700 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:54:26.906 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:27.115 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:27.321 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:54:30.490 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Securing GET /account/profile
18:54:30.492 [http-nio-8080-exec-8] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:30.493 [http-nio-8080-exec-8] DEBUG o.s.security.web.FilterChainProxy - Secured GET /account/profile
18:54:30.495 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
18:54:30.496 [http-nio-8080-exec-8] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AccountController.profile(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AccountController]
18:54:30.497 [http-nio-8080-exec-8] INFO  r.a.a.controller.AccountController - Отображение страницы профиля пользователя
18:54:30.497 [http-nio-8080-exec-8] DEBUG r.anapa.autorent.service.UserService - Поиск пользователя по email: admin@example.com
18:54:30.500 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0 
    where
        u1_0.email=?
18:54:30.679 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:30.864 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:54:30.953 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:31.313 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:54:31.404 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:31.744 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 1 rentals for user admin@example.com
18:54:31.745 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Rental ID: 57, Status: ACTIVE
18:54:31.745 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 0 pending rentals
18:54:31.745 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 1 active rentals
18:54:31.745 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Active Rental ID: 57, Status: ACTIVE
18:54:31.745 [http-nio-8080-exec-3] INFO  r.a.a.controller.RentalController - Found 0 history rentals
18:54:31.858 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:54:31.899 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:54:31.950 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:32.045 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:54:32.049 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:32.583 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:54:32.749 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.id=?
18:54:32.890 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:32.944 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:54:33.031 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        t1_0.id,
        t1_0.account_id,
        t1_0.amount,
        t1_0.created_at,
        t1_0.description,
        t1_0.type 
    from
        transactions t1_0 
    left join
        accounts a1_0 
            on a1_0.id=t1_0.account_id 
    where
        a1_0.id=? 
    order by
        t1_0.created_at desc
18:54:33.038 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:54:33.152 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:33.152 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:33.155 [http-nio-8080-exec-10] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:33.155 [http-nio-8080-exec-4] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:33.161 [http-nio-8080-exec-10] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:33.161 [http-nio-8080-exec-4] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:34.079 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:54:34.899 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        ah1_0.id,
        ah1_0.account_id,
        ah1_0.change_date,
        ah1_0.change_reason,
        ah1_0.changed_by,
        ah1_0.field_name,
        ah1_0.new_value,
        ah1_0.old_value 
    from
        account_history ah1_0 
    where
        ah1_0.account_id=? 
    order by
        ah1_0.change_date desc
18:54:35.104 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.id=?
18:54:37.161 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/dashboard
18:54:37.163 [http-nio-8080-exec-2] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:37.163 [http-nio-8080-exec-2] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/dashboard
18:54:37.164 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:37.165 [http-nio-8080-exec-2] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.adminDashboard(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:37.436 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        users u1_0
18:54:37.975 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        cars c1_0
18:54:38.446 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(c1_0.id) 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:38.537 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:38.629 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:38.904 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:39.001 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:39.092 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:39.186 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:39.281 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:39.643 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    order by
        r1_0.created_at desc 
    limit
        ?
18:54:39.735 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:39.825 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:39.921 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.status=?
18:54:40.036 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:54:40.036 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:54:40.039 [http-nio-8080-exec-6] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:54:40.039 [http-nio-8080-exec-5] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:54:40.042 [http-nio-8080-exec-6] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:40.043 [http-nio-8080-exec-5] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:45.427 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Securing GET /admin/statistics
18:54:45.429 [http-nio-8080-exec-9] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:54:45.430 [http-nio-8080-exec-9] DEBUG o.s.security.web.FilterChainProxy - Secured GET /admin/statistics
18:54:45.430 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.statistics(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:45.431 [http-nio-8080-exec-9] DEBUG o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public java.lang.String ru.anapa.autorent.controller.AdminController.statistics(org.springframework.ui.Model); target is of class [ru.anapa.autorent.controller.AdminController]
18:54:45.431 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:54:45.705 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:54:45.796 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:45.887 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:45.979 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.075 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.166 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.258 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.352 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.446 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.537 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.629 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.720 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.814 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:46.905 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:47.265 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:54:49.030 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:49.130 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:49.230 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:49.330 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:49.433 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:50.142 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        rentals r1_0
18:54:50.545 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(r1_0.id) 
    from
        rentals r1_0 
    where
        r1_0.status=?
18:54:50.837 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:50.927 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:51.018 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:51.109 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:51.200 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:51.750 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:51.842 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:51.933 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:52.026 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:52.117 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:52.655 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0
18:54:52.747 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:52.839 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:52.934 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:53.025 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:53.389 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        distinct c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    left join
        car_images i1_0 
            on c1_0.id=i1_0.car_id
18:54:54.659 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=?
18:54:54.752 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:54.854 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:54.960 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=?
18:54:55.061 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:55.162 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:55.265 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:54:55.467 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:54:55.685 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:55.787 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:55.993 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.086 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.188 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.289 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.391 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.607 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.707 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.797 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.889 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:56.981 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:57.075 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:54:57.625 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:54:58.170 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:54:58.263 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:54:58.354 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:54:58.446 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:54:59.457 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:00.004 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:00.551 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:01.101 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:01.653 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:02.202 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:02.745 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:03.290 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:03.383 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0 
    where
        c1_0.id=?
18:55:03.474 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:03.569 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        i1_0.car_id,
        i1_0.id,
        i1_0.content_type,
        i1_0.description,
        i1_0.display_order,
        i1_0.file_name,
        i1_0.image_data,
        i1_0.image_url,
        i1_0.is_main,
        i1_0.rotation 
    from
        car_images i1_0 
    where
        i1_0.car_id=?
18:55:04.680 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:05.225 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:05.766 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.user_id=? 
    order by
        r1_0.created_at desc
18:55:06.312 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(*) 
    from
        accounts a1_0
18:55:06.857 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id 
    from
        accounts a1_0
18:55:06.951 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.043 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.135 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.228 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.320 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.413 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.505 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.598 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.690 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.784 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.880 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:07.971 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:08.066 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
18:55:08.430 [http-nio-8080-exec-9] DEBUG r.anapa.autorent.service.UserService - Получение списка всех пользователей
18:55:08.615 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date 
    from
        users u1_0
18:55:08.705 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:08.800 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:08.895 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:08.987 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.079 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.170 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.263 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.355 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.449 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.541 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.634 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.727 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:09.818 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        accounts a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        a1_0.user_id=?
18:55:10.204 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Securing GET /js/main.js
18:55:10.204 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Securing GET /css/main.css
18:55:10.207 [http-nio-8080-exec-1] DEBUG o.s.security.web.FilterChainProxy - Secured GET /css/main.css
18:55:10.207 [http-nio-8080-exec-7] DEBUG o.s.security.web.FilterChainProxy - Secured GET /js/main.js
18:55:10.214 [http-nio-8080-exec-1] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
18:55:10.216 [http-nio-8080-exec-7] DEBUG o.s.s.w.c.HttpSessionSecurityContextRepository - Retrieved SecurityContextImpl [Authentication=UsernamePasswordAuthenticationToken [Principal=org.springframework.security.core.userdetails.User [Username=admin@example.com, Password=[PROTECTED], Enabled=true, AccountNonExpired=true, CredentialsNonExpired=true, AccountNonLocked=true, Granted Authorities=[ROLE_ADMIN]], Credentials=[PROTECTED], Authenticated=true, Details=WebAuthenticationDetails [RemoteIpAddress=0:0:0:0:0:0:0:1, SessionId=null], Granted Authorities=[ROLE_ADMIN]]]
19:00:00.016 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - === ЗАПУСК СИНХРОНИЗАЦИИ СТАТУСОВ АВТОМОБИЛЕЙ ===
19:00:00.201 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.end_date<?
19:00:00.294 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.status=? 
        and r1_0.start_date between ? and ?
19:00:00.386 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.available,
        c1_0.brand,
        c1_0.category,
        c1_0.color,
        c1_0.daily_rate,
        c1_0.description,
        c1_0.fuel_type,
        c1_0.license_plate,
        c1_0.model,
        c1_0.price_per_day,
        c1_0.registration_number,
        c1_0.schedule,
        c1_0.seats,
        c1_0.status,
        c1_0.transmission,
        c1_0.year 
    from
        cars c1_0
19:00:00.478 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
19:00:00.572 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
19:00:00.667 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.id,
        r1_0.actual_return_date,
        r1_0.cancel_reason,
        r1_0.car_id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.end_date,
        r1_0.notes,
        r1_0.rating,
        r1_0.item_id,
        r1_0.start_date,
        r1_0.status,
        r1_0.total_cost,
        r1_0.updated_at,
        r1_0.user_id 
    from
        rentals r1_0 
    where
        r1_0.car_id=? 
        and r1_0.status in (?, ?)
19:00:00.758 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        u1_0.id,
        a1_0.id,
        a1_0.account_number,
        a1_0.allow_negative_balance,
        a1_0.balance,
        a1_0.credit_limit,
        a1_0.initial_balance,
        a1_0.max_rental_amount,
        a1_0.max_rental_duration,
        a1_0.user_id,
        u1_0.email,
        u1_0.enabled,
        u1_0.first_name,
        u1_0.last_login_date,
        u1_0.last_name,
        u1_0.password,
        u1_0.phone,
        u1_0.registration_date,
        r1_0.user_id,
        r1_1.id,
        r1_1.name 
    from
        users u1_0 
    left join
        accounts a1_0 
            on u1_0.id=a1_0.user_id 
    left join
        user_roles r1_0 
            on u1_0.id=r1_0.user_id 
    left join
        roles r1_1 
            on r1_1.id=r1_0.role_id 
    where
        u1_0.id=?
19:00:01.030 [scheduling-1] INFO  r.a.autorent.config.ScheduledTasks - Синхронизация статусов автомобилей завершена успешно
19:00:01.031 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - [Scheduler] Актуализация всех не обработанных платежей (PENDING/FAILED)
19:00:01.031 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - === НАЧАЛО ОБРАБОТКИ ВСЕХ НЕОБРАБОТАННЫХ ПЛАТЕЖЕЙ ===
19:00:01.032 [scheduling-1] DEBUG org.hibernate.SQL - 
    select
        dp1_0.id,
        dp1_0.account_id,
        dp1_0.amount,
        dp1_0.created_at,
        dp1_0.notes,
        dp1_0.payment_date,
        dp1_0.processed_at,
        dp1_0.rental_id,
        dp1_0.status 
    from
        daily_payments dp1_0 
    where
        dp1_0.status in ('PENDING', 'FAILED') 
        and dp1_0.payment_date<=? 
    order by
        dp1_0.payment_date
19:00:01.123 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Найдено 0 необработанных платежей до даты 2025-06-27
19:00:01.124 [scheduling-1] INFO  r.a.a.service.DailyPaymentService - Нет необработанных платежей для обработки
20:33:22.192 [HikariPool-1 housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1h32m17s700ms465µs900ns).
